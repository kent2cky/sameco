{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./src/modules/home/components/home-chart.vue?9e6b","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./src/modules/home/components/home-page.vue?eadb","webpack:///./src/modules/home/components/home-chart.vue?803b","webpack:///src/modules/home/components/home-chart.vue","webpack:///./src/modules/home/components/home-chart.vue?a95b","webpack:///./src/modules/home/components/home-chart.vue?75f8","webpack:///src/modules/home/components/home-page.vue","webpack:///./src/modules/home/components/home-page.vue?edbb","webpack:///./src/modules/home/components/home-page.vue","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.animations.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./src/modules/home/components/home-page.vue?e67e","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","currentStep","numSteps","easing","render","onAnimationProgress","onAnimationComplete","Object","defineProperty","prototype","get","set","scope","values","merge","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","Chart","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","rotation","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","min","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","halfBorderWidth","clipArea","unclipArea","setHoverStyle","element","$previousStyle","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","hoverRadius","pointHoverRadius","acquireContext","getContext","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","forEach","key","method","charAt","toUpperCase","slice","base","args","Array","arguments","res","apply","object","unlistenArrayEvents","stub","indexOf","splice","linkScales","addElements","updateIndex","scaleID","destroy","_data","createMetaDataset","_chart","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","resyncElements","transition","easingValue","removeHoverStyle","numMeta","numData","insertElements","start","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","keys","hasOwnProperty","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","Bar","xRange","mouseX","vm","abs","yRange","mouseY","inRange","pow","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","PI","errMargin","Bubble","moment","window","Scale","scaleService","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","a","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","round","lookup","mid","i0","i1","lo","hi","skey","sval","tkey","range","span","ratio","offset","momentify","parser","format","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","duration","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","add","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","cos","sinRotation","sin","tickFontSize","exampleTime","exampleLabel","innerWidth","floor","registerScaleType","clear","clearRect","roundedRect","epsilon","arcTo","closePath","rect","style","edgeLength","xOffset","yOffset","toString","drawImage","translate","rotate","arc","sqrt","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_home_chart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_home_chart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","Scatter","Doughnut","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","k","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_vm","_h","$createElement","_c","_self","attrs","gutter","lg","md","sm","bar","mix2","doughnut","mix1","radar","horizontalBar","polar","staticClass","code","staticRenderFns","home_chartvue_type_template_id_21077151_render","home_chartvue_type_template_id_21077151_staticRenderFns","home_chartvue_type_script_lang_js_","name","props","v4_default","mounted","document","getElementById","chart_default","components_home_chartvue_type_script_lang_js_","component","componentNormalizer","home_chart","home_pagevue_type_script_lang_js_","components","created","isMobile","collapseMenu","concat","i18n","responsive","tooltips","gridLines","computed","objectSpread","vuex_esm","methods","components_home_pagevue_type_script_lang_js_","home_page_component","__webpack_exports__","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","plugins","_plugins","_cacheId","register","p","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","Animation","animationService","Interaction","platform","Ticks","Tooltip","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","animation","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","circumference","callbacks","tooltipItem","dataLabel","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","elementOpts","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","lineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","filterByPosition","where","v","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","delta","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","remain","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","Radar","filler","colorNames","getRgba","string","abbr","hex","rgba","per","keyword","rgb","hexAlpha","parseInt","parseFloat","getHsla","hsl","alpha","h","s","getHwb","hwb","w","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","rgbaString","percentString","percentaString","g","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","PolarArea","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","createElement","cls","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","keyframes","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","c","m","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","conversions","convert","Converter","func","arg","pair","exec","from","to","convs","routeSpace","space","getValues","setValues","fspace","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","tp","mergeOpacity","colorString","opacity","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getBeforeAfterBodyLines","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","getElementsAtEventForMode","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","angleLines","circular","pointLabels","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_home_page_vue_vue_type_style_index_0_id_293c480e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_home_page_vue_vue_type_style_index_0_id_293c480e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"kHAEA,IAAAA,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtBI,EAAAF,EAAAE,KAmFA,SAAAC,EAAAC,EAAAC,GACA,OAAAD,EAAAE,cACAD,EAAAE,KAAAC,MACAJ,EAAAK,SApFAZ,EAAAa,KAAA,UACAC,OAAA,CACAC,SAAA,EACAC,SAAA,MACAC,WAAA,EACAC,SAAA,EACAC,OAAA,IAGAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAE,aACAC,EAAAC,KAAAC,MACAC,EAAAH,EAAAI,eAAAN,GAGAK,EAAAE,OAAA,OAAAF,EAAAE,QAAAL,EAAAM,KAAAC,SAAAT,GAAAO,OAAA,KAGAL,EAAAQ,UAGAC,QAAA,KAEAC,OAAA,CACAvB,SAAA,GACAwB,QAAA,GAYAC,eAAA,SAAAV,GACA,IAAAI,EAAAJ,EAAAI,KACA,OAAA5B,EAAAmC,QAAAP,EAAAC,UAAAD,EAAAC,SAAAO,IAAA,SAAAC,EAAAC,GACA,OACAC,KAAAF,EAAAG,MACAC,UAAAzC,EAAAmC,QAAAE,EAAAK,iBAAAL,EAAAK,gBAAA,GAAAL,EAAAK,gBACAf,QAAAH,EAAAmB,iBAAAL,GACAM,QAAAP,EAAAQ,eACAC,SAAAT,EAAAU,WACAC,eAAAX,EAAAY,iBACAC,SAAAb,EAAAc,gBACAC,UAAAf,EAAAgB,YACAC,YAAAjB,EAAAkB,YACAC,WAAAnB,EAAAmB,WAGAnC,aAAAiB,IAEKf,MAAA,MAKLkC,eAAA,SAAAjC,GACA,IAAAe,EAAA,GACAA,EAAAmB,KAAA,cAAAlC,EAAAmC,GAAA,aACA,QAAArB,EAAA,EAAiBA,EAAAd,EAAAI,KAAAC,SAAA+B,OAAgCtB,IACjDC,EAAAmB,KAAA,qCAAAlC,EAAAI,KAAAC,SAAAS,GAAAI,gBAAA,aACAlB,EAAAI,KAAAC,SAAAS,GAAAE,OACAD,EAAAmB,KAAAlC,EAAAI,KAAAC,SAAAS,GAAAE,OAEAD,EAAAmB,KAAA,SAGA,OADAnB,EAAAmB,KAAA,SACAnB,EAAAsB,KAAA,OAmBA,IAAAC,EAAA/D,EAAAgE,OAAA,CAEAC,WAAA,SAAAC,GACAjE,EAAA+D,OAAAxC,KAAA0C,GAGA1C,KAAA2C,eAAA,GAGA3C,KAAA4C,cAAA,GAOAC,aAAAlE,EACA4B,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IAAAC,EAAAjD,KA0BA,OAvBAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,UAGAC,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAEAH,EAAAI,oBACAJ,EAAAK,cACAL,EAAAM,mBAGAN,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAEAD,YAAAhF,EAIAuE,oBAAAvE,EACAwE,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,EAGAtB,EAAAW,QAAA,CACAE,MAAA,EACAG,OAAA,IAGAb,mBAAAzE,EAIA0E,kBAAA1E,EACA2E,YAAA,WACA,IAAAL,EAAAjD,KACAnB,EAAAoE,EAAAuB,QAAA/D,QAAA,GACAgE,EAAAhG,EAAAiG,SAAA7F,EAAA8B,eAAA,CAAAsC,EAAAhD,OAAAgD,IAAA,GAEApE,EAAA8F,SACAF,IAAAE,OAAA,SAAAC,GACA,OAAA/F,EAAA8F,OAAAC,EAAA3B,EAAAhD,MAAAI,SAIA4C,EAAAuB,QAAAhF,SACAiF,EAAAjF,UAGAyD,EAAAwB,eAEAlB,iBAAA5E,EAIA6E,UAAA7E,EACA8E,IAAA,WACA,IAAAR,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA3F,EAAAgG,EAAApE,OACApB,EAAAwF,EAAAxF,QAEAyF,EAAA7B,EAAA6B,IAEAC,EAAAzG,EAAA0G,OACAC,EAAAxG,EAAAwG,eACAnG,EAAAmG,EAAApG,EAAAC,SAAAiG,EAAAG,iBACAC,EAAAF,EAAApG,EAAAsG,UAAAJ,EAAAK,kBACAC,EAAAJ,EAAApG,EAAAwG,WAAAN,EAAAO,mBACAC,EAAA9G,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAGAI,EAAAxC,EAAAN,eAAA,GAEAiB,EAAAX,EAAAW,QACAC,EAAAZ,EAAAY,eAWA,GATAA,GACAD,EAAAE,MAAAb,EAAAH,SACAc,EAAAK,OAAA5E,EAAA,OAEAuE,EAAAE,MAAAzE,EAAA,KACAuE,EAAAK,OAAAhB,EAAAF,WAIA1D,EAGA,GAFAyF,EAAAY,KAAAH,EAEA1B,EAAA,CAIA,IAAA8B,EAAA1C,EAAA0C,WAAA,IACAC,EAAA3C,EAAAwB,YAAApC,OAAAvD,EAAAD,EAAA,UAEAiG,EAAAe,UAAA,OACAf,EAAAgB,aAAA,MAEArH,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAA7B,EAAAN,EAAAC,EAAAC,GACAgF,EAAA5E,EAAAJ,EAAA,EAAAgG,EAAAkB,YAAApG,EAAAoB,MAAA8C,MAEA6B,IAAAtD,OAAA,GAAAyB,EAAAjF,EAAA6B,SAAAuC,EAAAa,QACA8B,GAAA9G,EAAAD,EAAA,QACA8G,IAAAtD,QAAAY,EAAAc,MAIA0B,EAAA1E,GAAA,CACAgD,KAAA,EACAG,IAAA,EACAJ,QACAG,OAAAnF,GAGA6G,IAAAtD,OAAA,IAAAyB,EAAAjF,EAAA6B,UAGAkD,EAAAK,QAAA2B,MAEI,CACJ,IAAAK,EAAApH,EAAA6B,QACAwF,EAAAjD,EAAAiD,aAAA,GACAC,EAAAtH,EAAA6B,QACA0F,EAAA,EACAC,EAAA,EACAC,EAAAxH,EAAAmH,EAEAxH,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAA7B,EAAAN,EAAAC,EAAAC,GACAyH,EAAArH,EAAAJ,EAAA,EAAAgG,EAAAkB,YAAApG,EAAAoB,MAAA8C,MAGAuC,EAAAC,EAAA1C,EAAAK,SACAkC,GAAAC,EAAAvH,EAAA6B,QACAwF,EAAA/D,KAAAiE,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAApH,KAAAwH,IAAAJ,EAAAG,GACAF,GAAAC,EAGAb,EAAA1E,GAAA,CACAgD,KAAA,EACAG,IAAA,EACAJ,MAAAyC,EACAtC,OAAAnF,KAIAqH,GAAAC,EACAF,EAAA/D,KAAAiE,GACAxC,EAAAE,OAAAqC,EAIAlD,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAEAP,SAAA/E,EAGAkF,aAAA,WACA,cAAA7D,KAAAwE,QAAAlF,UAAA,WAAAU,KAAAwE,QAAAlF,UAIAmH,KAAA,WACA,IAAAxD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA3F,EAAAgG,EAAApE,OACAsE,EAAAzG,EAAA0G,OACA0B,EAAA3B,EAAA4B,SAAAC,KACAC,EAAA5D,EAAAa,MACA6B,EAAA1C,EAAA0C,WAEA,GAAAd,EAAAxF,QAAA,CACA,IAOAyH,EAPAhC,EAAA7B,EAAA6B,IACAG,EAAAxG,EAAAwG,eACA8B,EAAA9B,EAAApG,EAAAkI,UAAAhC,EAAAiC,kBACAlI,EAAAmG,EAAApG,EAAAC,SAAAiG,EAAAG,iBACAC,EAAAF,EAAApG,EAAAsG,UAAAJ,EAAAK,kBACAC,EAAAJ,EAAApG,EAAAwG,WAAAN,EAAAO,mBACAC,EAAA9G,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAIAP,EAAAe,UAAA,OACAf,EAAAgB,aAAA,SACAhB,EAAAjD,UAAA,GACAiD,EAAA/C,YAAAgF,EACAjC,EAAA5D,UAAA6F,EACAjC,EAAAY,KAAAH,EAEA,IAAArG,EAAAN,EAAAC,EAAAC,GACA2G,EAAAxC,EAAAN,eAGAsE,EAAA,SAAAC,EAAAC,EAAAvH,GACA,KAAAwH,MAAAlI,OAAA,IAKA4F,EAAAuC,OAEAvC,EAAA5D,UAAA+D,EAAArF,EAAAsB,UAAA6D,EAAAuC,cACAxC,EAAAzD,QAAA4D,EAAArF,EAAAyB,QAAAqF,EAAApF,gBACAwD,EAAArD,eAAAwD,EAAArF,EAAA6B,eAAAiF,EAAAhF,kBACAoD,EAAAnD,SAAAsD,EAAArF,EAAA+B,SAAA+E,EAAA9E,iBACAkD,EAAAjD,UAAAoD,EAAArF,EAAAiC,UAAA6E,EAAA5E,aACAgD,EAAA/C,YAAAkD,EAAArF,EAAAmC,YAAAgD,EAAAuC,cACA,IAAAC,EAAA,IAAAtC,EAAArF,EAAAiC,UAAA6E,EAAA5E,aAOA,GALAgD,EAAA0C,aAEA1C,EAAA0C,YAAAvC,EAAArF,EAAA2B,SAAAmF,EAAAlF,aAGAqD,EAAApE,QAAAoE,EAAApE,OAAA1B,cAAA,CAGA,IAAA0I,EAAA3I,EAAAE,KAAAC,MAAA,EACAyI,EAAAD,EAAAzI,KAAAC,MACA0I,EAAAT,EAAAQ,EACAE,EAAAT,EAAAO,EAGAjJ,EAAAoJ,OAAAC,UAAAhD,EAAAlF,EAAAqC,WAAAwF,EAAAE,EAAAC,QAGAL,GACAzC,EAAAiD,WAAAb,EAAAC,EAAAjI,EAAAJ,GAEAgG,EAAAkD,SAAAd,EAAAC,EAAAjI,EAAAJ,GAGAgG,EAAAmD,YAEAC,EAAA,SAAAhB,EAAAC,EAAAvH,EAAAuI,GACA,IAAAC,EAAAtJ,EAAA,EACAuJ,EAAAnJ,EAAAkJ,EAAAlB,EACAoB,EAAAnB,EAAAiB,EAEAtD,EAAAoD,SAAAtI,EAAAoB,KAAAqH,EAAAC,GAEA1I,EAAAQ,SAEA0E,EAAAyD,YACAzD,EAAAjD,UAAA,EACAiD,EAAA0D,OAAAH,EAAAC,GACAxD,EAAA2D,OAAAJ,EAAAF,EAAAG,GACAxD,EAAA4D,WAKA7E,EAAAZ,EAAAY,eAEAiD,EADAjD,EACA,CACAqD,EAAAjE,EAAAc,MAAA8C,EAAAlB,EAAA,MACAwB,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAkG,KAAA,GAGA,CACAM,EAAAjE,EAAAc,KAAAlF,EAAA6B,QACAyG,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAkG,KAAA,GAIA,IAAAN,EAAAxH,EAAAD,EAAA6B,QACAjC,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAAoH,EAAArD,EAAAkB,YAAApG,EAAAoB,MAAA8C,MACAA,EAAA5E,EAAAJ,EAAA,EAAAqJ,EACAjB,EAAAJ,EAAAI,EACAC,EAAAL,EAAAK,EAEAtD,EACAqD,EAAApD,GAAA+C,IACAM,EAAAL,EAAAK,GAAAb,EACAQ,EAAAF,OACAM,EAAAJ,EAAAI,EAAAjE,EAAAc,MAAA8C,EAAAlB,EAAAmB,EAAAF,OAAA,GAEKO,EAAAb,EAAArD,EAAAkB,SACL+C,EAAAJ,EAAAI,IAAAjE,EAAAiD,aAAAY,EAAAF,MAAA/H,EAAA6B,QACAyG,EAAAL,EAAAK,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAoG,EAAAF,QAGAK,EAAAC,EAAAC,EAAAvH,GAEA6F,EAAA1E,GAAAgD,KAAAmD,EACAzB,EAAA1E,GAAAmD,IAAAiD,EAGAe,EAAAhB,EAAAC,EAAAvH,EAAAuI,GAEAtE,EACAiD,EAAAI,GAAApD,EAAAjF,EAAA,QAEAiI,EAAAK,GAAAb,MAaAqC,YAAA,SAAAhJ,GACA,IAAAsD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAoE,EAAA,YAAAjJ,EAAAiJ,KAAA,QAAAjJ,EAAAiJ,KACAC,GAAA,EAEA,iBAAAD,GACA,IAAA/D,EAAArE,QACA,WAEG,cAAAoI,EAKH,OAJA,IAAA/D,EAAAnF,QACA,OAOA,IAAAwH,EAAAvH,EAAAuH,EACAC,EAAAxH,EAAAwH,EAEA,GAAAD,GAAAjE,EAAAc,MAAAmD,GAAAjE,EAAAe,OAAAmD,GAAAlE,EAAAiB,KAAAiD,GAAAlE,EAAAkB,OAGA,IADA,IAAA2E,EAAA7F,EAAAN,eACA5B,EAAA,EAAkBA,EAAA+H,EAAAzG,SAAetB,EAAA,CACjC,IAAAgI,EAAAD,EAAA/H,GAEA,GAAAmG,GAAA6B,EAAAhF,MAAAmD,GAAA6B,EAAAhF,KAAAgF,EAAAjF,OAAAqD,GAAA4B,EAAA7E,KAAAiD,GAAA4B,EAAA7E,IAAA6E,EAAA9E,OAAA,CAEA,aAAA2E,EAAA,CAEA/D,EAAAnF,QAAAsJ,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAwB,YAAA1D,IACA8H,GAAA,EACA,MACM,iBAAAD,EAAA,CAEN/D,EAAArE,QAAAwI,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAwB,YAAA1D,IACA8H,GAAA,EACA,QAMA,OAAAA,KAIA,SAAAK,EAAAjJ,EAAAkJ,GACA,IAAA/J,EAAA,IAAAmD,EAAA,CACAuC,IAAA7E,EAAA6E,IACAN,QAAA2E,EACAlJ,UAGAvB,EAAA0K,UAAAnJ,EAAAb,EAAA+J,GACAzK,EAAA2K,OAAApJ,EAAAb,GACAa,EAAAb,SAGAkK,EAAAC,QAAA,CACAnH,GAAA,SASAoH,SAAAjH,EAEAkH,WAAA,SAAAxJ,GACA,IAAAkJ,EAAAlJ,EAAAuE,QAAApF,OAEA+J,GACAD,EAAAjJ,EAAAkJ,IAIAtG,aAAA,SAAA5C,GACA,IAAAkJ,EAAAlJ,EAAAuE,QAAApF,OACAA,EAAAa,EAAAb,OAEA+J,GACA1K,EAAAiL,QAAAP,EAAA7K,EAAA0G,OAAA5F,QAEAA,GACAV,EAAA0K,UAAAnJ,EAAAb,EAAA+J,GACA/J,EAAAoF,QAAA2E,GAEAD,EAAAjJ,EAAAkJ,IAEG/J,IACHV,EAAAiL,UAAA1J,EAAAb,UACAa,EAAAb,SAIAwK,WAAA,SAAA3J,EAAAN,GACA,IAAAP,EAAAa,EAAAb,OACAA,GACAA,EAAAuJ,YAAAhJ,0CC1jBA,IAAAlB,EAAcF,EAAQ,QAMtB+K,EAAAC,QAAA,CASAM,aAAA,SAAAC,EAAAC,GACA,IAAAC,GAAA,GAAAF,GAAAG,MAAA,wCACA,IAAAD,GAAA,WAAAA,EAAA,GACA,WAAAD,EAKA,OAFAD,GAAAE,EAAA,GAEAA,EAAA,IACA,SACA,OAAAF,EACA,QACAA,GAAA,IACA,MACA,QACA,MAGA,OAAAC,EAAAD,GAUAI,UAAA,SAAAJ,GACA,IAAAK,EAAAC,EAAAC,EAAAC,EAWA,OATA7L,EAAA8L,SAAAT,IACAK,GAAAL,EAAA5F,KAAA,EACAkG,GAAAN,EAAA9F,OAAA,EACAqG,GAAAP,EAAA3F,QAAA,EACAmG,GAAAR,EAAA/F,MAAA,GAEAoG,EAAAC,EAAAC,EAAAC,GAAAR,GAAA,EAGA,CACA5F,IAAAiG,EACAnG,MAAAoG,EACAjG,OAAAkG,EACAtG,KAAAuG,EACArG,OAAAkG,EAAAE,EACAvG,MAAAwG,EAAAF,IAaAI,QAAA,SAAAC,EAAAC,EAAA7K,GACA,IAAAkB,EAAA4J,EAAAb,EAEA,IAAA/I,EAAA,EAAA4J,EAAAF,EAAApI,OAAmCtB,EAAA4J,IAAU5J,EAE7C,GADA+I,EAAAW,EAAA1J,QACA6J,IAAAd,SAGAc,IAAAF,GAAA,oBAAAZ,IACAA,IAAAY,SAEAE,IAAA/K,GAAApB,EAAAmC,QAAAkJ,KACAA,IAAAjK,SAEA+K,IAAAd,GACA,OAAAA,yCCzFA,IAAAtL,EAAcD,EAAQ,QAEtBgL,EAAAD,EAAAC,QAAA/K,EAAAgE,OAAA,CACAvC,MAAA,KACA4K,YAAA,EACAC,SAAA,GACAC,OAAA,GACAC,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAWAC,OAAAC,eAAA7B,EAAA8B,UAAA,mBACAC,IAAA,WACA,OAAAtL,QAUAmL,OAAAC,eAAA7B,EAAA8B,UAAA,iBACAC,IAAA,WACA,OAAAtL,KAAAC,OAEAsL,IAAA,SAAAzB,GACA9J,KAAAC,MAAA6J,0CCtCA,IAAArL,EAAcF,EAAQ,QAEtB+K,EAAAC,QAAA,CAIApK,KAAA,SAAAqM,EAAAC,GACA,OAAAhN,EAAAiN,MAAA1L,KAAAwL,KAAAxL,KAAAwL,GAAA,IAAuDC,0CCPvD,IAAAnN,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,QACAwM,WAAA,EACAC,UAAA,EAEAC,MAAA,CACAC,KAAA,SAGAC,OAAA,CACAC,MAAA,EACApD,KAAA,WACAxG,GAAA,aAEA6J,MAAA,EACArD,KAAA,SACAxG,GAAA,gBAKAkH,EAAAC,QAAA,SAAA2C,GAEA,SAAAC,EAAArL,EAAA0D,GACA,OAAA/F,EAAAwG,eAAAnE,EAAAsL,SAAA5H,EAAAmH,WAGAO,EAAAG,YAAAzF,KAAAsF,EAAAI,kBAAA9J,OAAA,CAEA+J,mBAAA5F,EAAA6F,KAEAC,gBAAA9F,EAAA+F,MAEAnM,OAAA,SAAAoM,GACA,IAOA5L,EAAA4J,EAAAiC,EAPA3J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAjG,EAAA1G,EAAAY,QACAgM,EAAA5M,EAAAG,MAAA,GACAmE,EAAAvB,EAAAhD,MAAAuE,QACAuI,EAAAvI,EAAAmC,SAAAC,KACAoG,EAAA/J,EAAAgK,cAAA/M,EAAAgN,SAEApM,EAAAmC,EAAAkK,aACAf,EAAAD,EAAArL,EAAA0D,GAwCA,IArCA4H,IACAQ,EAAAhG,EAAAgG,QAAA,QAGAhC,IAAA9J,EAAAsM,cAAAxC,IAAA9J,EAAAuM,cACAvM,EAAAuM,YAAAvM,EAAAsM,SAIAxG,EAAA0G,OAAAN,EACApG,EAAA2G,cAAAtK,EAAApD,MAEA+G,EAAA4G,UAAAV,EAEAlG,EAAA6G,OAAA,CAKA7B,SAAA9K,EAAA8K,SAAA9K,EAAA8K,SAAApH,EAAAoH,SACAwB,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAA3O,EAAAwG,eAAAnE,EAAAuM,YAAAN,EAAAK,SACAjM,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAAL,EAAAK,iBAAA4L,EAAA5L,gBACAW,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAhB,EAAAgB,aAAAiL,EAAAjL,YACAE,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAlB,EAAAkB,aAAA+K,EAAA/K,YACAV,eAAAsL,EAAAtL,eAAAsL,EAAAtL,eAAAR,EAAAQ,gBAAAyL,EAAAzL,eACAE,WAAAoL,EAAApL,WAAAoL,EAAApL,WAAAV,EAAAU,YAAAuL,EAAAvL,WACAE,iBAAAkL,EAAAlL,iBAAAkL,EAAAlL,iBAAAZ,EAAAY,kBAAAqL,EAAArL,iBACAE,gBAAAgL,EAAAhL,gBAAAgL,EAAAhL,gBAAAd,EAAAc,iBAAAmL,EAAAnL,gBACA8L,KAAAd,EAAAc,KAAAd,EAAAc,UAAA9C,IAAA9J,EAAA4M,KAAA5M,EAAA4M,KAAAX,EAAAW,KACAC,YAAAf,EAAAe,YAAAf,EAAAe,YAAAlP,EAAAwG,eAAAnE,EAAA6M,YAAAZ,EAAAa,SACAC,uBAAAjB,EAAAiB,uBAAAjB,EAAAiB,uBAAApP,EAAAwG,eAAAnE,EAAA+M,uBAAAd,EAAAc,yBAGAjH,EAAAkH,SAIA/M,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAoCtB,EAAA4J,IAAU5J,EAC9CkC,EAAA8K,cAAAjB,EAAA/L,KAAA4L,GAQA,IALAP,GAAA,IAAAxF,EAAA6G,OAAAL,SACAnK,EAAA+K,4BAIAjN,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAoCtB,EAAA4J,IAAU5J,EAC9C+L,EAAA/L,GAAA+M,SAIAG,wBAAA,SAAAC,EAAArO,GACA,IAAAsB,EAAAnB,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAA/M,gBACAL,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,QAAA,GAUA,OARAA,EAAAzL,gBACAA,EAAAyL,EAAAzL,gBACIL,EAAAqN,qBACJhN,EAAA1C,EAAA2P,sBAAAtN,EAAAqN,qBAAAtO,EAAAsB,GACIL,EAAAK,kBACJA,EAAAL,EAAAK,iBAGAA,GAGAkN,oBAAA,SAAAH,EAAArO,GACA,IAAAmC,EAAAhC,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAlM,YACAlB,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,QAAA,GAUA,OARAA,EAAA5K,YACAA,EAAA4K,EAAA5K,YACIlB,EAAAwN,iBACJtM,EAAAvD,EAAA2P,sBAAAtN,EAAAwN,iBAAAzO,EAAAmC,GACIlB,EAAAkB,cACJA,EAAAlB,EAAAkB,aAGAA,GAGAuM,oBAAA,SAAAL,EAAArO,GACA,IAAAiC,EAAA9B,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAApM,YACAhB,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,QAAA,GAUA,OARAxF,MAAAwF,EAAA9K,cAEIsF,MAAAtG,EAAA0N,mBAAA/P,EAAAmC,QAAAE,EAAA0N,kBACJ1M,EAAArD,EAAA2P,sBAAAtN,EAAA0N,iBAAA3O,EAAAiC,GACIsF,MAAAtG,EAAAgB,eACJA,EAAAhB,EAAAgB,aAJAA,EAAA8K,EAAA9K,YAOAA,GAGA2M,iBAAA,SAAAP,EAAArO,GACA,IAAA6O,EAAA1O,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAS,SACA7N,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,QAAA,GAOA,OALAxF,MAAAwF,EAAA+B,UAEIvH,MAAAtG,EAAA4N,iBAAAjQ,EAAAmC,QAAAE,EAAA4N,iBACJA,EAAAjQ,EAAA2P,sBAAAtN,EAAA4N,cAAA7O,EAAA6O,IAFAA,EAAA9B,EAAA+B,SAIAD,GAGAX,cAAA,SAAAG,EAAArO,EAAA8M,GACA,IASAzF,EAAAC,EATAlE,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAD,EAAAsB,EAAAtB,QAAA,GACA9L,EAAAmC,EAAAkK,aACArN,EAAAmD,EAAApD,MACAiK,EAAAhJ,EAAAT,KAAAR,GACA+O,EAAA3L,EAAAgK,cAAA/M,EAAAgN,SACA2B,EAAA5L,EAAAgK,cAAA/M,EAAA4O,SACAC,EAAA9L,EAAAhD,MAAAuE,QAAAmC,SAAAuH,WAIAtD,IAAA9J,EAAA2G,aAAAmD,IAAA9J,EAAAkO,cACAlO,EAAAkO,YAAAlO,EAAA2G,aAEAmD,IAAA9J,EAAAmO,gBAAArE,IAAA9J,EAAAoO,iBACApO,EAAAoO,eAAApO,EAAAmO,WAGA/H,EAAA2H,EAAAM,iBAAA,kBAAArF,IAAAsF,IAAAvP,EAAAC,GACAqH,EAAAwF,EAAAiC,EAAAS,eAAApM,EAAAqM,gBAAAxF,EAAAjK,EAAAC,GAGAoO,EAAAqB,QAAAV,EACAX,EAAAsB,QAAAZ,EACAV,EAAAX,cAAAzN,EACAoO,EAAAuB,OAAA5P,EAGAqO,EAAAT,OAAA,CACAvG,IACAC,IACAuI,KAAA9C,EAAA8C,MAAAtI,MAAAF,IAAAE,MAAAD,GAEAM,OAAAmF,EAAAnF,QAAAhJ,EAAA2P,sBAAAtN,EAAAkO,YAAAnP,EAAAkP,EAAAtH,QACAxF,WAAA2K,EAAA3K,YAAAxD,EAAA2P,sBAAAtN,EAAAmB,WAAApC,EAAAkP,EAAA9M,YACA0M,SAAA1L,EAAAwL,iBAAAP,EAAArO,GACAsB,gBAAA8B,EAAAgL,wBAAAC,EAAArO,GACAmC,YAAAiB,EAAAoL,oBAAAH,EAAArO,GACAiC,YAAAmB,EAAAsL,oBAAAL,EAAArO,GACAuN,QAAAlN,EAAAY,QAAA2M,OAAAvN,EAAAY,QAAA2M,OAAAL,QAAA,EACAO,cAAAzN,EAAAY,QAAA2M,QAAAvN,EAAAY,QAAA2M,OAAAE,YAEAsB,UAAArC,EAAAqC,WAAAxQ,EAAA2P,sBAAAtN,EAAAoO,eAAArP,EAAAkP,EAAAE,aAIAK,gBAAA,SAAAxF,EAAAjK,EAAAC,GACA,IAMAiB,EAAA4O,EAAAC,EANA3M,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACA+B,EAAA3L,EAAAgK,cAAA/M,EAAAgN,SACA2C,EAAA,EACAC,EAAA,EAGA,GAAAlB,EAAApK,QAAAuL,QAAA,CACA,IAAAhP,EAAA,EAAeA,EAAAjB,EAAkBiB,IAGjC,GAFA4O,EAAA1P,EAAAI,KAAAC,SAAAS,GACA6O,EAAA3P,EAAAE,eAAAY,GACA,SAAA6O,EAAAhH,MAAAgH,EAAA1C,UAAA0B,EAAAxM,IAAAnC,EAAAmB,iBAAAL,GAAA,CACA,IAAAiP,EAAAC,OAAArB,EAAAsB,cAAAP,EAAAtP,KAAAR,KACAmQ,EAAA,EACAF,GAAAE,GAAA,EAEAH,GAAAG,GAAA,EAKA,IAAAG,EAAAF,OAAArB,EAAAsB,cAAApG,IACA,OAAAqG,EAAA,EACAvB,EAAAO,iBAAAW,EAAAK,GAEAvB,EAAAO,iBAAAU,EAAAM,GAGA,OAAAvB,EAAAO,iBAAArF,IAGAkE,0BAAA,WACA,IAIAjN,EAAA4J,EAAAuD,EAAAkC,EAAAC,EAJApN,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAyD,EAAArN,EAAAhD,MAAAsQ,UACAzD,EAAA5M,EAAAG,MAAA,GAUA,SAAAmQ,EAAAC,EAAAC,EAAAlK,GACA,OAAAxH,KAAAwH,IAAAxH,KAAA0R,IAAAD,EAAAjK,GAAAkK,GAGA,GAVAxQ,EAAAY,QAAA2M,OAAA7B,WACAkB,IAAAnI,OAAA,SAAA8L,GACA,OAAAA,EAAAhD,OAAAiC,QAQA,aAAAxP,EAAAY,QAAA2M,OAAAI,uBACApP,EAAAkS,oBAAA7D,QAEA,IAAA/L,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAqCtB,EAAA4J,IAAU5J,EAC/CmN,EAAApB,EAAA/L,GACAqP,EAAAlC,EAAAT,OACA4C,EAAA5R,EAAAmS,YACAnS,EAAAoS,aAAA/D,EAAA/L,GAAA0M,OACA2C,EACA3R,EAAAqS,SAAAhE,EAAA/L,GAAA0M,OACAvN,EAAAY,QAAA2M,OAAAL,SAEAgD,EAAAW,sBAAAV,EAAAW,SAAA9J,EACAkJ,EAAAa,sBAAAZ,EAAAW,SAAA7J,EACAiJ,EAAAc,kBAAAb,EAAAc,KAAAjK,EACAkJ,EAAAgB,kBAAAf,EAAAc,KAAAhK,EAIA,GAAAlE,EAAAhD,MAAAuE,QAAAmC,SAAAC,KAAAyK,gBACA,IAAAtQ,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAqCtB,EAAA4J,IAAU5J,EAC/CqP,EAAAtD,EAAA/L,GAAA0M,OACA2C,EAAAW,sBAAAP,EAAAJ,EAAAW,sBAAAT,EAAAvM,KAAAuM,EAAAtM,OACAoM,EAAAa,sBAAAT,EAAAJ,EAAAa,sBAAAX,EAAApM,IAAAoM,EAAAnM,QACAiM,EAAAc,kBAAAV,EAAAJ,EAAAc,kBAAAZ,EAAAvM,KAAAuM,EAAAtM,OACAoM,EAAAgB,kBAAAZ,EAAAJ,EAAAgB,kBAAAd,EAAApM,IAAAoM,EAAAnM,SAKAsC,KAAA,WACA,IAMA6K,EANArO,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACAC,EAAA5M,EAAAG,MAAA,GACAiQ,EAAArQ,EAAAsQ,UACA5F,EAAAmC,EAAAzK,OAEAtB,EAAA,EAkBA,IAhBAoL,EAAAlJ,EAAAkK,aAAAlN,EAAAuE,WACA8M,GAAApR,EAAAY,QAAA2M,OAAA3L,aAAA,KAEArD,EAAAoJ,OAAA0J,SAAAtR,EAAA6E,IAAA,CACAf,KAAAuM,EAAAvM,KACAC,MAAAsM,EAAAtM,MACAE,IAAAoM,EAAApM,IAAAoN,EACAnN,OAAAmM,EAAAnM,OAAAmN,IAGApR,EAAAY,QAAA2F,OAEAhI,EAAAoJ,OAAA2J,WAAAvR,EAAA6E,MAIS/D,EAAA4J,IAAU5J,EACnB+L,EAAA/L,GAAA0F,KAAA6J,IAIAmB,cAAA,SAAAC,GAEA,IAAA5Q,EAAAd,KAAAC,MAAAI,KAAAC,SAAAoR,EAAAnE,eACA1N,EAAA6R,EAAAjC,OACA7C,EAAA8E,EAAA9E,QAAA,GACAwD,EAAAsB,EAAAjE,OAEAiE,EAAAC,eAAA,CACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,YACA2F,OAAA2I,EAAA3I,QAGA2I,EAAAjP,gBAAAyL,EAAAgF,sBAAAnT,EAAA2P,sBAAAtN,EAAA+Q,0BAAAhS,EAAApB,EAAAqT,cAAA1B,EAAAjP,kBACAiP,EAAApO,YAAA4K,EAAAmF,kBAAAtT,EAAA2P,sBAAAtN,EAAAkR,sBAAAnS,EAAApB,EAAAqT,cAAA1B,EAAApO,cACAoO,EAAAtO,YAAA8K,EAAAqF,kBAAAxT,EAAA2P,sBAAAtN,EAAAoR,sBAAArS,EAAAuQ,EAAAtO,aACAsO,EAAA3I,OAAAmF,EAAAuF,aAAA1T,EAAA2P,sBAAAtN,EAAAsR,iBAAAvS,EAAAG,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAiE,uCC/UA7I,EAAAC,QAAA,CACA8I,eAAA,SAAAzN,GAMA,OALAA,KAAAiD,SAEAjD,IAAAiD,QAGAjD,KAAA0N,WAAA,iDCVA,IAAA7T,EAAcF,EAAQ,QAEtB+K,EAAAC,QAAA,SAAA2C,GAEA,IAAAqG,EAAA,0CAOA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,SACAF,EAAAE,SAAAC,UAAAzQ,KAAAuQ,IAIAvH,OAAAC,eAAAqH,EAAA,YACAI,cAAA,EACAC,YAAA,EACAhJ,MAAA,CACA8I,UAAA,CAAAF,MAIAH,EAAAQ,QAAA,SAAAC,GACA,IAAAC,EAAA,SAAAD,EAAAE,OAAA,GAAAC,cAAAH,EAAAI,MAAA,GACAC,EAAAZ,EAAAO,GAEA7H,OAAAC,eAAAqH,EAAAO,EAAA,CACAH,cAAA,EACAC,YAAA,EACAhJ,MAAA,WACA,IAAAwJ,EAAAC,MAAAlI,UAAA+H,MAAApK,KAAAwK,WACAC,EAAAJ,EAAAK,MAAA1T,KAAAsT,GAQA,OANA7U,EAAAsH,KAAA0M,EAAAE,SAAAC,UAAA,SAAAe,GACA,oBAAAA,EAAAV,IACAU,EAAAV,GAAAS,MAAAC,EAAAL,KAIAG,QAUA,SAAAG,EAAAnB,EAAAC,GACA,IAAAmB,EAAApB,EAAAE,SACA,GAAAkB,EAAA,CAIA,IAAAjB,EAAAiB,EAAAjB,UACA/S,EAAA+S,EAAAkB,QAAApB,IACA,IAAA7S,GACA+S,EAAAmB,OAAAlU,EAAA,GAGA+S,EAAAvQ,OAAA,IAIAkQ,EAAAQ,QAAA,SAAAC,UACAP,EAAAO,YAGAP,EAAAE,WAIAzG,EAAAI,kBAAA,SAAArM,EAAAH,GACAE,KAAAyC,WAAAxC,EAAAH,IAGArB,EAAA+D,OAAA0J,EAAAI,kBAAAjB,UAAA,CAMAkB,mBAAA,KAMAE,gBAAA,KAEAhK,WAAA,SAAAxC,EAAAH,GACA,IAAAmD,EAAAjD,KACAiD,EAAAhD,QACAgD,EAAApD,MAAAC,EACAmD,EAAA+Q,aACA/Q,EAAAgR,eAGAC,YAAA,SAAApU,GACAE,KAAAH,MAAAC,GAGAkU,WAAA,WACA,IAAA/Q,EAAAjD,KACAE,EAAA+C,EAAA4J,UACA/L,EAAAmC,EAAAkK,aAEA,OAAAjN,EAAA4O,SAAA5O,EAAA4O,WAAA7L,EAAAhD,MAAA8L,SACA7L,EAAA4O,QAAAhO,EAAAgO,SAAA7L,EAAAhD,MAAAuE,QAAAuH,OAAAC,MAAA,GAAA5J,IAEA,OAAAlC,EAAAgN,SAAAhN,EAAAgN,WAAAjK,EAAAhD,MAAA8L,SACA7L,EAAAgN,QAAApM,EAAAoM,SAAAjK,EAAAhD,MAAAuE,QAAAuH,OAAAE,MAAA,GAAA7J,KAIA+K,WAAA,WACA,OAAAnN,KAAAC,MAAAI,KAAAC,SAAAN,KAAAH,QAGAgN,QAAA,WACA,OAAA7M,KAAAC,MAAAE,eAAAH,KAAAH,QAGAoN,cAAA,SAAAkH,GACA,OAAAnU,KAAAC,MAAA8L,OAAAoI,IAGAxH,MAAA,WACA3M,KAAAO,QAAA,IAMA6T,QAAA,WACApU,KAAAqU,OACAT,EAAA5T,KAAAqU,MAAArU,OAIAsU,kBAAA,WACA,IAAArR,EAAAjD,KACA4I,EAAA3F,EAAAsJ,mBACA,OAAA3D,GAAA,IAAAA,EAAA,CACA2L,OAAAtR,EAAAhD,MACAsN,cAAAtK,EAAApD,SAIA2U,eAAA,SAAA3U,GACA,IAAAoD,EAAAjD,KACA4I,EAAA3F,EAAAwJ,gBACA,OAAA7D,GAAA,IAAAA,EAAA,CACA2L,OAAAtR,EAAAhD,MACAsN,cAAAtK,EAAApD,MACA4P,OAAA5P,KAIAoU,YAAA,WACA,IAIAlT,EAAA4J,EAJA1H,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAxM,EAAA4C,EAAAkK,aAAA9M,MAAA,GACAoU,EAAAvU,EAAAG,KAGA,IAAAU,EAAA,EAAA4J,EAAAtK,EAAAgC,OAAkCtB,EAAA4J,IAAU5J,EAC5C0T,EAAA1T,GAAA0T,EAAA1T,IAAAkC,EAAAuR,eAAAzT,GAGAb,EAAAY,QAAAZ,EAAAY,SAAAmC,EAAAqR,qBAGAI,mBAAA,SAAA7U,GACA,IAAA6R,EAAA1R,KAAAwU,eAAA3U,GACAG,KAAA6M,UAAAxM,KAAA0T,OAAAlU,EAAA,EAAA6R,GACA1R,KAAA+N,cAAA2D,EAAA7R,GAAA,IAGA8U,sBAAA,WACA,IAAA1R,EAAAjD,KACAc,EAAAmC,EAAAkK,aACA9M,EAAAS,EAAAT,OAAAS,EAAAT,KAAA,IAKA4C,EAAAoR,QAAAhU,IACA4C,EAAAoR,OAEAT,EAAA3Q,EAAAoR,MAAApR,GAGAuP,EAAAnS,EAAA4C,GACAA,EAAAoR,MAAAhU,GAKA4C,EAAA2R,kBAGArU,OAAA9B,EAAAE,KAEAkW,WAAA,SAAAC,GAMA,IALA,IAAA5U,EAAAF,KAAA6M,UACAlG,EAAAzG,EAAAG,MAAA,GACAsK,EAAAhE,EAAAtE,OACAtB,EAAA,EAESA,EAAA4J,IAAU5J,EACnB4F,EAAA5F,GAAA8T,WAAAC,GAGA5U,EAAAY,SACAZ,EAAAY,QAAA+T,WAAAC,IAIArO,KAAA,WACA,IAAAvG,EAAAF,KAAA6M,UACAlG,EAAAzG,EAAAG,MAAA,GACAsK,EAAAhE,EAAAtE,OACAtB,EAAA,EAMA,IAJAb,EAAAY,SACAZ,EAAAY,QAAA2F,OAGS1F,EAAA4J,IAAU5J,EACnB4F,EAAA5F,GAAA0F,QAIAsO,iBAAA,SAAArD,GACAjT,EAAAiN,MAAAgG,EAAAjE,OAAAiE,EAAAC,gBAAA,WACAD,EAAAC,gBAGAF,cAAA,SAAAC,GACA,IAAA5Q,EAAAd,KAAAC,MAAAI,KAAAC,SAAAoR,EAAAnE,eACA1N,EAAA6R,EAAAjC,OACA7C,EAAA8E,EAAA9E,QAAA,GACA3H,EAAAxG,EAAA2P,sBACA0D,EAAArT,EAAAqT,cACA1B,EAAAsB,EAAAjE,OAEAiE,EAAAC,eAAA,CACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,aAGAsO,EAAAjP,gBAAAyL,EAAAgF,qBAAAhF,EAAAgF,qBAAA3M,EAAAnE,EAAA8Q,qBAAA/R,EAAAiS,EAAA1B,EAAAjP,kBACAiP,EAAApO,YAAA4K,EAAAmF,iBAAAnF,EAAAmF,iBAAA9M,EAAAnE,EAAAiR,iBAAAlS,EAAAiS,EAAA1B,EAAApO,cACAoO,EAAAtO,YAAA8K,EAAAqF,iBAAArF,EAAAqF,iBAAAhN,EAAAnE,EAAAmR,iBAAApS,EAAAuQ,EAAAtO,cAMA8S,eAAA,WACA,IAAA3R,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAxM,EAAA4C,EAAAkK,aAAA9M,KACA2U,EAAA9U,EAAAG,KAAAgC,OACA4S,EAAA5U,EAAAgC,OAEA4S,EAAAD,EACA9U,EAAAG,KAAA0T,OAAAkB,EAAAD,EAAAC,GACIA,EAAAD,GACJ/R,EAAAiS,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAC,EAAAC,GACA,QAAArU,EAAA,EAAkBA,EAAAqU,IAAWrU,EAC7Bf,KAAA0U,mBAAAS,EAAApU,IAOAsU,WAAA,WACArV,KAAAkV,eAAAlV,KAAAmN,aAAA9M,KAAAgC,OAAA,EAAAmR,UAAAnR,SAMAiT,UAAA,WACAtV,KAAA6M,UAAAxM,KAAAkV,OAMAC,YAAA,WACAxV,KAAA6M,UAAAxM,KAAAoV,SAMAC,aAAA,SAAAP,EAAAC,GACApV,KAAA6M,UAAAxM,KAAA0T,OAAAoB,EAAAC,GACApV,KAAAkV,eAAAC,EAAA3B,UAAAnR,OAAA,IAMAsT,cAAA,WACA3V,KAAAkV,eAAA,EAAA1B,UAAAnR,WAIA6J,EAAAI,kBAAA9J,OAAA/D,EAAAmX,+CCrUA,IAAAC,EAAYtX,EAAQ,QACpBE,EAAcF,EAAQ,QAEtB,SAAAuX,EAAAX,EAAAY,EAAA3F,EAAA4F,GACA,IACAjV,EAAA4J,EAAAqI,EAAAiD,EAAAC,EAAAC,EAAAvN,EAAAwN,EAAAC,EADAC,EAAAnL,OAAAmL,KAAAlG,GAGA,IAAArP,EAAA,EAAA4J,EAAA2L,EAAAjU,OAAgCtB,EAAA4J,IAAU5J,EAa1C,GAZAiS,EAAAsD,EAAAvV,GAEAoV,EAAA/F,EAAA4C,GAIA+C,EAAAQ,eAAAvD,KACA+C,EAAA/C,GAAAmD,GAGAF,EAAAF,EAAA/C,GAEAiD,IAAAE,GAAA,MAAAnD,EAAA,IAYA,GARAmC,EAAAoB,eAAAvD,KACAmC,EAAAnC,GAAAiD,GAGAC,EAAAf,EAAAnC,GAEApK,SAAAuN,EAEAvN,WAAAsN,EACA,cAAAtN,GAEA,GADAwN,EAAAP,EAAAK,GACAE,EAAAI,QACAH,EAAAR,EAAAM,GACAE,EAAAG,OAAA,CACAT,EAAA/C,GAAAqD,EAAAI,IAAAL,EAAAJ,GAAAU,YACA,eAGI,cAAA9N,GAAA+N,SAAAT,IAAAS,SAAAR,GAAA,CACJJ,EAAA/C,GAAAkD,GAAAC,EAAAD,GAAAF,EACA,SAIAD,EAAA/C,GAAAmD,GAIA,IAAA3X,EAAA,SAAAoY,GACAnY,EAAA+D,OAAAxC,KAAA4W,GACA5W,KAAAyC,WAAAiR,MAAA1T,KAAAwT,YAGA/U,EAAA+D,OAAAhE,EAAA6M,UAAA,CAEA5I,WAAA,WACAzC,KAAAI,QAAA,GAGA0N,MAAA,WACA,IAAA7K,EAAAjD,KAKA,OAJAiD,EAAA4T,QACA5T,EAAA4T,MAAApY,EAAAqY,MAAA7T,EAAAwK,SAEAxK,EAAA8T,OAAA,GACA9T,GAGA4R,WAAA,SAAAmB,GACA,IAAA/S,EAAAjD,KACAoQ,EAAAnN,EAAAwK,OACA0H,EAAAlS,EAAA8T,OACAhB,EAAA9S,EAAA4T,MAGA,OAAAzG,GAAA,IAAA4F,GAMAD,IACAA,EAAA9S,EAAA4T,MAAA,IAGA1B,IACAA,EAAAlS,EAAA8T,OAAA,IAGAjB,EAAAX,EAAAY,EAAA3F,EAAA4F,GAEA/S,IAfAA,EAAA4T,MAAAzG,EACAnN,EAAA8T,OAAA,KACA9T,IAgBA+T,gBAAA,WACA,OACA9P,EAAAlH,KAAAyN,OAAAvG,EACAC,EAAAnH,KAAAyN,OAAAtG,IAIA8P,SAAA,WACA,OAAAxY,EAAAyY,SAAAlX,KAAAyN,OAAAvG,IAAAzI,EAAAyY,SAAAlX,KAAAyN,OAAAtG,MAIA3I,EAAAgE,OAAA/D,EAAAmX,SAEAtM,EAAAC,QAAA/K,qCChHA8K,EAAAC,QAAA,SAAA2C,GAEAA,EAAAiL,IAAA,SAAAzM,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,MAEA,IAAAsD,EAAAxB,EAAAhI,wCCLA,IAAApE,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtB+I,EAAAhJ,EAAA0G,OAAAsC,aAkBA,SAAA8P,EAAAC,GACA,IAAAC,EAAAtX,KAAA6W,MACA,QAAAS,GAAAtY,KAAAuY,IAAAF,EAAAC,EAAApQ,GAAAoQ,EAAA7P,OAAA6P,EAAArI,UAGA,SAAAuI,EAAAC,GACA,IAAAH,EAAAtX,KAAA6W,MACA,QAAAS,GAAAtY,KAAAuY,IAAAE,EAAAH,EAAAnQ,GAAAmQ,EAAA7P,OAAA6P,EAAArI,UAvBA3Q,EAAAa,KAAA,UACAwH,SAAA,CACAuH,MAAA,CACAzG,OAAA,EACAxF,WAAA,SACAd,gBAAAmG,EACAtF,YAAAsF,EACAxF,YAAA,EAEAmN,UAAA,EACAkD,YAAA,EACAF,iBAAA,MAeA3I,EAAAC,QAAA/K,EAAAgE,OAAA,CACAkV,QAAA,SAAAL,EAAAI,GACA,IAAAH,EAAAtX,KAAA6W,MACA,QAAAS,GAAAtY,KAAA2Y,IAAAN,EAAAC,EAAApQ,EAAA,GAAAlI,KAAA2Y,IAAAF,EAAAH,EAAAnQ,EAAA,GAAAnI,KAAA2Y,IAAAL,EAAArI,UAAAqI,EAAA7P,OAAA,IAGAmQ,aAAAR,EACAS,SAAAT,EACAU,SAAAN,EAEAO,eAAA,WACA,IAAAT,EAAAtX,KAAA6W,MACA,OACA3P,EAAAoQ,EAAApQ,EACAC,EAAAmQ,EAAAnQ,IAIA6Q,QAAA,WACA,OAAAhZ,KAAAiZ,GAAAjZ,KAAA2Y,IAAA3X,KAAA6W,MAAApP,OAAA,IAGAuP,gBAAA,WACA,IAAAM,EAAAtX,KAAA6W,MACA,OACA3P,EAAAoQ,EAAApQ,EACAC,EAAAmQ,EAAAnQ,EACAzG,QAAA4W,EAAA7P,OAAA6P,EAAAxV,cAIA2E,KAAA,SAAA8J,GACA,IAAA+G,EAAAtX,KAAA6W,MACAzG,EAAApQ,KAAAyN,OACA3I,EAAA9E,KAAAuU,OAAAzP,IACA7C,EAAAqV,EAAArV,WACA0M,EAAA2I,EAAA3I,SACAlH,EAAA6P,EAAA7P,OACAP,EAAAoQ,EAAApQ,EACAC,EAAAmQ,EAAAnQ,EACA+Q,EAAA,KAEAZ,EAAA5H,YAKA9E,IAAA2F,GAAAH,EAAAlJ,GAAAqJ,EAAAxM,MAAAwM,EAAAvM,MAAAkU,GAAA9H,EAAAlJ,GAAAkJ,EAAAjJ,GAAAoJ,EAAArM,KAAAqM,EAAApM,OAAA+T,GAAA9H,EAAAjJ,KACArC,EAAA/C,YAAAuV,EAAAtV,aAAAsF,EACAxC,EAAAjD,UAAApD,EAAAwG,eAAAqS,EAAAxV,YAAAxD,EAAA0G,OAAA2B,SAAAuH,MAAApM,aACAgD,EAAA5D,UAAAoW,EAAAnW,iBAAAmG,EACA7I,EAAAoJ,OAAAC,UAAAhD,EAAA7C,EAAAwF,EAAAP,EAAAC,EAAAwH,4CCnFArF,EAAAC,QAAA,SAAA2C,GAEAA,EAAAiM,OAAA,SAAAzN,EAAAhI,GAEA,OADAA,EAAAkG,KAAA,SACA,IAAAsD,EAAAxB,EAAAhI,wCCHA,IAAA0V,EAAa7Z,EAAQ,QACrB6Z,EAAA,oBAAAA,IAAAC,OAAAD,OAEA,IAAA9Z,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtB+Z,EAAY/Z,EAAQ,QACpBga,EAAmBha,EAAQ,QAG3Bia,EAAAvI,OAAAwI,mBAAA,iBACAC,EAAAzI,OAAA0I,kBAAA,iBAEAC,EAAA,CACAC,YAAA,CACAC,QAAA,EACA/O,KAAA,EACAgP,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACA/O,KAAA,IACAgP,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACA/O,KAAA,IACAgP,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACA/O,KAAA,KACAgP,MAAA,cAEAI,IAAA,CACAL,QAAA,EACA/O,KAAA,MACAgP,MAAA,SAEAK,KAAA,CACAN,QAAA,EACA/O,KAAA,OACAgP,MAAA,WAEAM,MAAA,CACAP,QAAA,EACA/O,KAAA,OACAgP,MAAA,SAEAO,QAAA,CACAR,QAAA,EACA/O,KAAA,OACAgP,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACA/O,KAAA,SAIAyP,EAAArO,OAAAmL,KAAAsC,GAEA,SAAAa,EAAAC,EAAArP,GACA,OAAAqP,EAAArP,EAGA,SAAAsP,EAAAC,GACA,IAEA7Y,EAAA4J,EAAA/F,EAFAiV,EAAA,GACAC,EAAA,GAGA,IAAA/Y,EAAA,EAAA4J,EAAAiP,EAAAvX,OAAiCtB,EAAA4J,IAAU5J,EAC3C6D,EAAAgV,EAAA7Y,GACA8Y,EAAAjV,KACAiV,EAAAjV,IAAA,EACAkV,EAAA3X,KAAAyC,IAIA,OAAAkV,EAkBA,SAAAC,EAAAC,EAAAtJ,EAAAlK,EAAAyT,GACA,cAAAA,IAAAD,EAAA3X,OACA,OACA,CAAI6X,KAAAxJ,EAAAyJ,IAAA,GACJ,CAAID,KAAA1T,EAAA2T,IAAA,IAIJ,IAEApZ,EAAA4J,EAAAyP,EAAAC,EAAAlJ,EAFAmJ,EAAA,GACAV,EAAA,CAAAlJ,GAGA,IAAA3P,EAAA,EAAA4J,EAAAqP,EAAA3X,OAAsCtB,EAAA4J,IAAU5J,EAChDsZ,EAAAL,EAAAjZ,GACAsZ,EAAA3J,GAAA2J,EAAA7T,GACAoT,EAAAzX,KAAAkY,GAMA,IAFAT,EAAAzX,KAAAqE,GAEAzF,EAAA,EAAA4J,EAAAiP,EAAAvX,OAAiCtB,EAAA4J,IAAU5J,EAC3CoQ,EAAAyI,EAAA7Y,EAAA,GACAqZ,EAAAR,EAAA7Y,EAAA,GACAsZ,EAAAT,EAAA7Y,QAGA6J,IAAAwP,QAAAxP,IAAAuG,GAAAnS,KAAAub,OAAApJ,EAAAiJ,GAAA,KAAAC,GACAC,EAAAnY,KAAA,CAAe+X,KAAAG,EAAAF,IAAApZ,GAAA4J,EAAA,KAIf,OAAA2P,EAIA,SAAAE,EAAAF,EAAAtH,EAAAlJ,GACA,IAEA2Q,EAAAC,EAAAC,EAFAC,EAAA,EACAC,EAAAP,EAAAjY,OAAA,EAGA,MAAAuY,GAAA,GAAAA,GAAAC,EAAA,CAKA,GAJAJ,EAAAG,EAAAC,GAAA,EACAH,EAAAJ,EAAAG,EAAA,SACAE,EAAAL,EAAAG,IAEAC,EAEA,OAAWE,GAAA,KAAAC,GAAAF,GACR,GAAAA,EAAA3H,GAAAlJ,EACH8Q,EAAAH,EAAA,MACG,MAAAC,EAAA1H,GAAAlJ,GAGH,OAAW8Q,GAAAF,EAAAG,GAAAF,GAFXE,EAAAJ,EAAA,GAOA,OAASG,GAAAD,EAAAE,GAAA,MAST,SAAA/E,EAAAwE,EAAAQ,EAAAC,EAAAC,GACA,IAAAC,EAAAT,EAAAF,EAAAQ,EAAAC,GAGAX,EAAAa,EAAAL,GAAAK,EAAAJ,GAAAI,EAAAL,GAAAN,IAAAjY,OAAA,GAAAiY,EAAA,GACAnJ,EAAA8J,EAAAL,GAAAK,EAAAJ,GAAAI,EAAAJ,GAAAP,IAAAjY,OAAA,GAAAiY,EAAA,GAEAY,EAAA/J,EAAA2J,GAAAV,EAAAU,GACAK,EAAAD,GAAAH,EAAAX,EAAAU,IAAAI,EAAA,EACAE,GAAAjK,EAAA6J,GAAAZ,EAAAY,IAAAG,EAEA,OAAAf,EAAAY,GAAAI,EAOA,SAAAC,EAAAvR,EAAAtF,GACA,IAAA8W,EAAA9W,EAAA8W,OACAC,EAAA/W,EAAA8W,QAAA9W,EAAA+W,OAEA,0BAAAD,EACAA,EAAAxR,GAGA,kBAAAA,GAAA,kBAAAyR,EACAnD,EAAAtO,EAAAyR,IAGAzR,aAAAsO,IACAtO,EAAAsO,EAAAtO,IAGAA,EAAA0R,UACA1R,EAKA,oBAAAyR,EACAA,EAAAzR,GAGAA,GAGA,SAAA2R,EAAAC,EAAA1O,GACA,GAAAvO,EAAAkd,cAAAD,GACA,YAGA,IAAAlX,EAAAwI,EAAAxI,QAAA0V,KACApQ,EAAAuR,EAAArO,EAAAkD,cAAAwL,GAAAlX,GACA,OAAAsF,EAAA0R,WAIAhX,EAAA+V,OACAzQ,EAAA8R,QAAApX,EAAA+V,OAGAzQ,EAAA+R,WAPA,KAcA,SAAAC,EAAApL,EAAAlK,EAAAuV,EAAAC,GACA,IAIAjb,EAAA4J,EAAAsR,EAJAhB,EAAAzU,EAAAkK,EACAwL,EAAAtD,EAAAmD,GACAI,EAAAD,EAAAnS,KACAgP,EAAAmD,EAAAnD,MAGA,IAAAA,EACA,OAAA/Z,KAAAod,KAAAnB,GAAAe,EAAAG,IAGA,IAAApb,EAAA,EAAA4J,EAAAoO,EAAA1W,OAAiCtB,EAAA4J,IAAU5J,EAE3C,GADAkb,EAAAlD,EAAAhY,GACA/B,KAAAod,KAAAnB,GAAAkB,EAAAF,KAAAD,EACA,MAIA,OAAAC,EAMA,SAAAI,EAAAC,EAAA5L,EAAAlK,EAAAwV,GACA,IACAjb,EAAAmb,EAAAD,EADAtR,EAAA6O,EAAAnX,OAGA,IAAAtB,EAAAyY,EAAA1F,QAAAwI,GAAiCvb,EAAA4J,EAAA,IAAc5J,EAI/C,GAHAmb,EAAAtD,EAAAY,EAAAzY,IACAkb,EAAAC,EAAAnD,MAAAmD,EAAAnD,MAAAmD,EAAAnD,MAAA1W,OAAA,GAAAqW,EAEAwD,EAAApD,QAAA9Z,KAAAod,MAAA5V,EAAAkK,IAAAuL,EAAAC,EAAAnS,QAAAiS,EACA,OAAAxC,EAAAzY,GAIA,OAAAyY,EAAA7O,EAAA,GAMA,SAAA4R,EAAAC,EAAAF,EAAA5L,EAAAlK,GACA,IAEAzF,EAAAgb,EAFAU,EAAArE,EAAAqE,SAAArE,EAAA5R,GAAAkW,KAAAtE,EAAA1H,KACA/F,EAAA6O,EAAAnX,OAGA,IAAAtB,EAAA4J,EAAA,EAAmB5J,GAAAyY,EAAA1F,QAAAwI,GAA6Bvb,IAEhD,GADAgb,EAAAvC,EAAAzY,GACA6X,EAAAmD,GAAAjD,QAAA2D,EAAAE,GAAAZ,IAAAS,EAAAna,OACA,OAAA0Z,EAIA,OAAAvC,EAAA8C,EAAA9C,EAAA1F,QAAAwI,GAAA,GAGA,SAAAM,EAAAb,GACA,QAAAhb,EAAAyY,EAAA1F,QAAAiI,GAAA,EAAApR,EAAA6O,EAAAnX,OAA2DtB,EAAA4J,IAAU5J,EACrE,GAAA6X,EAAAY,EAAAzY,IAAA+X,OACA,OAAAU,EAAAzY,GAWA,SAAA8b,EAAAnM,EAAAlK,EAAAwV,EAAAxX,GACA,IAUA0V,EAVA4C,EAAAtY,EAAA0V,KACA6C,EAAAD,EAAAf,MAAAM,EAAAS,EAAAR,QAAA5L,EAAAlK,EAAAwV,GACAgB,EAAAJ,EAAAG,GACAE,EAAAxe,EAAAwG,eAAA6X,EAAAG,SAAAH,EAAAI,cACAC,EAAA,SAAAJ,GAAAD,EAAAM,WACAC,EAAA7Y,EAAAgY,MAAAQ,MAAAM,QACApB,EAAAtD,EAAAmE,GACAQ,EAAAnF,EAAA1H,GACA8M,EAAApF,EAAA5R,GACAgW,EAAA,GAgCA,IA7BAS,IACAA,EAAAnB,EAAApL,EAAAlK,EAAAuW,EAAAf,IAIAmB,IACAI,IAAAH,WAAAD,GACAK,IAAAJ,WAAAD,IAIAI,IAAA3B,QAAAuB,EAAA,MAAAJ,GACAS,IAAA5B,QAAAuB,EAAA,MAAAJ,GAGAS,EAAAhX,GACAgX,EAAAC,IAAA,EAAAV,GAGA7C,EAAA9B,EAAAmF,GAEAF,GAAAL,IAAAG,IAAAL,EAAAvC,QAIAL,EAAA0B,QAAAoB,GACA9C,EAAAuD,QAAAF,EAAArD,IAAAgC,EAAAnS,KAAAkT,MAAAF,IAGO7C,EAAAsD,EAAatD,EAAAuD,IAAAR,EAAAF,GACpBP,EAAAra,MAAA+X,GAKA,OAFAsC,EAAAra,MAAA+X,GAEAsC,EAOA,SAAAkB,EAAApD,EAAAkC,EAAA9L,EAAAlK,EAAAhC,GACA,IAEAmZ,EAAAC,EAFA7Z,EAAA,EACAC,EAAA,EAsBA,OAnBAQ,EAAA4W,QAAAoB,EAAAna,SACAmC,EAAA0V,KAAAxJ,MACAiN,EAAAnB,EAAAna,OAAA,EAAAma,EAAA,GAAAhW,EACAoX,EAAApB,EAAA,GACAzY,GACA+R,EAAAwE,EAAA,OAAAqD,EAAA,OACA7H,EAAAwE,EAAA,OAAAsD,EAAA,QACA,GAEApZ,EAAA0V,KAAA1T,MACAmX,EAAAnB,IAAAna,OAAA,GACAub,EAAApB,EAAAna,OAAA,EAAAma,IAAAna,OAAA,GAAAqO,EACA1M,GACA8R,EAAAwE,EAAA,OAAAqD,EAAA,OACA7H,EAAAwE,EAAA,OAAAsD,EAAA,QACA,IAIA,CAAS7Z,OAAAC,SAGT,SAAA6Z,EAAApS,EAAAqS,GACA,IACA/c,EAAA4J,EAAAb,EAAAkT,EADAR,EAAA,GAGA,IAAAzb,EAAA,EAAA4J,EAAAc,EAAApJ,OAAkCtB,EAAA4J,IAAU5J,EAC5C+I,EAAA2B,EAAA1K,GACAic,IAAAc,GAAAhU,KAAAsO,EAAAtO,GAAA8R,QAAAkC,GAEAtB,EAAAra,KAAA,CACA2H,QACAkT,UAIA,OAAAR,EAGA,SAAAuB,EAAA1d,EAAAyc,GACA,IAAA/b,EAAAid,EAAAC,EACAtT,EAAAtK,EAAAgC,OAIA,IAAAtB,EAAA,EAAYA,EAAA4J,EAAU5J,IAAA,CAEtB,GADAid,EAAA3C,EAAAhb,EAAAU,GAAA+b,GACA,IAAAkB,EAAAnF,cACA,kCAEA,IAAAmF,EAAAhF,UAAA,IAAAgF,EAAA/E,UAAA,IAAA+E,EAAA9E,SACA+E,GAAA,GAGA,OAAAA,EACA,wBAEA,cAGA3U,EAAAC,QAAA,WAEA,IAAA2U,EAAA,CACA5e,SAAA,SASA2a,aAAA,SASAkE,OAAA,OAEAjE,KAAA,CACAoB,QAAA,EACAC,QAAA,EACAQ,MAAA,EACAxB,OAAA,EACA6D,eAAA,EACAhB,YAAA,EACAd,QAAA,cAGA+B,eAAA,CACAxF,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,SAGAiD,MAAA,CACA8B,UAAA,EAUAC,OAAA,OAEAvB,MAAA,CACAM,SAAA,KAKAkB,EAAAlG,EAAA9V,OAAA,CACAC,WAAA,WACA,IAAA2V,EACA,UAAAqG,MAAA,wIAGAze,KAAA0e,oBAEApG,EAAAjN,UAAA5I,WAAAuG,KAAAhJ,OAGAO,OAAA,WACA,IAAA0C,EAAAjD,KACAwE,EAAAvB,EAAAuB,QAOA,OAJAA,EAAA0V,MAAA1V,EAAA0V,KAAAqB,QACAoD,QAAAC,KAAA,0EAGAtG,EAAAjN,UAAA9K,OAAAmT,MAAAzQ,EAAAuQ,YAMAtD,cAAA,SAAA2O,GAIA,OAHAA,QAAAjU,IAAAiU,EAAA1U,IACA0U,IAAA1U,GAEAmO,EAAAjN,UAAA6E,cAAAlH,KAAAhJ,KAAA6e,IAGAC,oBAAA,WACA,IASA/d,EAAAge,EAAApU,EAAAqU,EAAA3e,EAAA4e,EATAhc,EAAAjD,KACAC,EAAAgD,EAAAhD,MACA6c,EAAA7Z,EAAAuB,QAAA0V,KACA6B,EAAAe,EAAAf,MAAA,MACArL,EAAAgI,EACAlS,EAAAgS,EACAwB,EAAA,GACA1Z,EAAA,GACAG,EAAA,GAIA,IAAAM,EAAA,EAAA4J,EAAA1K,EAAAI,KAAAI,OAAA4B,OAA+CtB,EAAA4J,IAAU5J,EACzDN,EAAA0B,KAAAsZ,EAAAxb,EAAAI,KAAAI,OAAAM,GAAAkC,IAIA,IAAAlC,EAAA,EAAA4J,GAAA1K,EAAAI,KAAAC,UAAA,IAAA+B,OAAyDtB,EAAA4J,IAAU5J,EACnE,GAAAd,EAAAmB,iBAAAL,GAIA,GAHAV,EAAAJ,EAAAI,KAAAC,SAAAS,GAAAV,KAGA5B,EAAA8L,SAAAlK,EAAA,IAGA,IAFAC,EAAAS,GAAA,GAEAge,EAAA,EAAAC,EAAA3e,EAAAgC,OAAqC0c,EAAAC,IAAUD,EAC/CE,EAAAxD,EAAApb,EAAA0e,GAAA9b,GACA+W,EAAA7X,KAAA8c,GACA3e,EAAAS,GAAAge,GAAAE,OAGAjF,EAAA7X,KAAAuR,MAAAsG,EAAAvZ,GACAH,EAAAS,GAAAN,EAAA2S,MAAA,QAGA9S,EAAAS,GAAA,GAIAN,EAAA4B,SAEA5B,EAAAkZ,EAAAlZ,GAAAye,KAAAzF,GACA/I,EAAA1R,KAAA0R,MAAAjQ,EAAA,IACA+F,EAAAxH,KAAAwH,MAAA/F,IAAA4B,OAAA,KAGA2X,EAAA3X,SACA2X,EAAAL,EAAAK,GAAAkF,KAAAzF,GACA/I,EAAA1R,KAAA0R,MAAAsJ,EAAA,IACAxT,EAAAxH,KAAAwH,MAAAwT,IAAA3X,OAAA,KAGAqO,EAAA+K,EAAAqB,EAAApM,IAAAzN,IAAAyN,EACAlK,EAAAiV,EAAAqB,EAAAtW,IAAAvD,IAAAuD,EAGAkK,MAAAgI,GAAAN,IAAAwD,QAAAG,GAAArL,EACAlK,MAAAgS,GAAAJ,IAAA+G,MAAApD,GAAA,EAAAvV,EAGAvD,EAAAyN,IAAA1R,KAAA0R,MAAAlK,GACAvD,EAAAuD,IAAAxH,KAAAwH,IAAAkK,EAAA,EAAAlK,GAGAvD,EAAAmc,YAAAnc,EAAAY,eACAZ,EAAAoc,OAAA,GACApc,EAAAqc,YAAA,CACAjf,KAAA2Z,EACA1Z,WACAG,WAIA8e,WAAA,WACA,IAOAxe,EAAA4J,EAAAsU,EAPAhc,EAAAjD,KACA0Q,EAAAzN,EAAAyN,IACAlK,EAAAvD,EAAAuD,IACAhC,EAAAvB,EAAAuB,QACAsY,EAAAtY,EAAA0V,KACAF,EAAA,GACAwC,EAAA,GAGA,OAAAhY,EAAAgY,MAAA+B,QACA,WACAvE,EAAA/W,EAAAqc,YAAAjf,KACA,MACA,aACA2Z,EAAA/W,EAAAqc,YAAA7e,OACA,MACA,WACA,QACAuZ,EAAA6C,EAAAnM,EAAAlK,EAAAvD,EAAAuc,iBAAA9O,GAAAlM,GAaA,IAVA,UAAAA,EAAA2Z,QAAAnE,EAAA3X,SACAqO,EAAAsJ,EAAA,GACAxT,EAAAwT,IAAA3X,OAAA,IAIAqO,EAAA+K,EAAAqB,EAAApM,IAAAzN,IAAAyN,EACAlK,EAAAiV,EAAAqB,EAAAtW,IAAAvD,IAAAuD,EAGAzF,EAAA,EAAA4J,EAAAqP,EAAA3X,OAAwCtB,EAAA4J,IAAU5J,EAClDke,EAAAjF,EAAAjZ,GACAke,GAAAvO,GAAAuO,GAAAzY,GACAgW,EAAAra,KAAA8c,GAcA,OAVAhc,EAAAyN,MACAzN,EAAAuD,MAGAvD,EAAAwc,MAAA3C,EAAAf,MAAAQ,EAAAC,EAAAM,EAAAR,QAAArZ,EAAAyN,IAAAzN,EAAAuD,KACAvD,EAAAyc,WAAA9C,EAAA3Z,EAAAwc,OACAxc,EAAAoc,OAAAtF,EAAA9W,EAAAqc,YAAAjf,KAAAqQ,EAAAlK,EAAAhC,EAAAyV,cACAhX,EAAA0c,SAAAjC,EAAAza,EAAAoc,OAAA7C,EAAA9L,EAAAlK,EAAAhC,GACAvB,EAAA2c,aAAA7B,EAAA9a,EAAAqc,YAAAjf,KAAAyc,GAEAe,EAAArB,EAAAvZ,EAAAyc,aAGAG,iBAAA,SAAAhgB,EAAAC,GACA,IAAAmD,EAAAjD,KACAK,EAAA4C,EAAAhD,MAAAI,KACAyc,EAAA7Z,EAAAuB,QAAA0V,KACAjZ,EAAAZ,EAAAI,QAAAZ,EAAAQ,EAAAI,OAAA4B,OAAAhC,EAAAI,OAAAZ,GAAA,GACAiK,EAAAzJ,EAAAC,SAAAR,GAAAO,KAAAR,GAKA,OAHApB,EAAA8L,SAAAT,KACA7I,EAAAgC,EAAAiN,cAAApG,IAEAgT,EAAAgD,cACAzE,EAAApa,EAAA6b,GAAAvB,OAAAuB,EAAAgD,eAEA,kBAAA7e,EACAA,EAGAoa,EAAApa,EAAA6b,GAAAvB,OAAAtY,EAAA2c,eAOAG,mBAAA,SAAAC,EAAAngB,EAAA2c,EAAAyD,GACA,IAAAhd,EAAAjD,KACAwE,EAAAvB,EAAAuB,QACA0V,EAAA8F,EAAAnE,UACAqE,EAAA1b,EAAA0V,KAAAmE,eACA8B,EAAAD,EAAAjd,EAAAwc,OACA3B,EAAA7a,EAAAyc,WACAU,EAAAF,EAAApC,GACAuC,EAAAL,EAAAlJ,QAAA8E,QAAAkC,GAAAjC,UACAyE,EAAA9b,EAAAgY,MAAAQ,MACAA,EAAAsD,EAAAhD,SAAAQ,GAAAsC,GAAAlG,IAAAmG,EACApf,EAAA+e,EAAAzE,OAAA0E,IAAAjD,EAAAoD,EAAAD,IACAI,EAAAvD,EAAAsD,EAAA9b,EAAAgY,MAAAO,MACAyD,EAAA/hB,EAAAwG,eAAAsb,EAAA7b,SAAA6b,EAAAE,cAEA,OAAAD,IAAAvf,EAAApB,EAAA2c,GAAAvb,GAGAyf,qBAAA,SAAAlE,GACA,IACAzb,EAAA4J,EADAlK,EAAA,GAGA,IAAAM,EAAA,EAAA4J,EAAA6R,EAAAna,OAAmCtB,EAAA4J,IAAU5J,EAC7CN,EAAA0B,KAAAnC,KAAA+f,mBAAA3H,EAAAoE,EAAAzb,GAAA+I,OAAA/I,EAAAyb,IAGA,OAAA/b,GAMAkgB,kBAAA,SAAAzG,GACA,IAAAjX,EAAAjD,KACA+J,EAAA9G,EAAAmc,YAAAnc,EAAAa,MAAAb,EAAAgB,OACAkR,EAAAlS,EAAAmc,YAAAnc,EAAAc,KAAAd,EAAAiB,IACAiW,EAAArE,EAAA7S,EAAAoc,OAAA,OAAAnF,EAAA,OAEA,OAAA/E,EAAApL,GAAA9G,EAAA0c,SAAA5b,KAAAoW,IAAAlX,EAAA0c,SAAA5b,KAAA,EAAAd,EAAA0c,SAAA3b,QAGAmL,iBAAA,SAAArF,EAAAjK,EAAAC,GACA,IAAAmD,EAAAjD,KACAka,EAAA,KAUA,QARAtP,IAAA/K,QAAA+K,IAAA9K,IACAoa,EAAAjX,EAAAqc,YAAAhf,SAAAR,GAAAD,IAGA,OAAAqa,IACAA,EAAAuB,EAAA3R,EAAA7G,IAGA,OAAAiX,EACA,OAAAjX,EAAA0d,kBAAAzG,IAIA0G,gBAAA,SAAA/gB,GACA,IAAA2c,EAAAxc,KAAA6gB,WACA,OAAAhhB,GAAA,GAAAA,EAAA2c,EAAAna,OACArC,KAAA2gB,kBAAAnE,EAAA3c,GAAAiK,OACA,MAGAgX,iBAAA,SAAAC,GACA,IAAA9d,EAAAjD,KACA+J,EAAA9G,EAAAmc,YAAAnc,EAAAa,MAAAb,EAAAgB,OACAkR,EAAAlS,EAAAmc,YAAAnc,EAAAc,KAAAd,EAAAiB,IACAiW,GAAApQ,GAAAgX,EAAA5L,GAAApL,EAAA,IAAA9G,EAAA0c,SAAA5b,KAAA,EAAAd,EAAA0c,SAAA5b,MAAAd,EAAA0c,SAAA3b,MACAkW,EAAApE,EAAA7S,EAAAoc,OAAA,MAAAlF,EAAA,QAEA,OAAA/B,EAAA8B,IAOA8G,cAAA,SAAA/f,GACA,IAAAgC,EAAAjD,KACAihB,EAAAhe,EAAAuB,QAAAgY,MACA0E,EAAAje,EAAA6B,IAAAkB,YAAA/E,GAAA6C,MACAqd,EAAA1iB,EAAA2iB,UAAAH,EAAAI,aACAC,EAAAtiB,KAAAuiB,IAAAJ,GACAK,EAAAxiB,KAAAyiB,IAAAN,GACAO,EAAAjjB,EAAAwG,eAAAgc,EAAAniB,SAAAR,EAAA0G,OAAAE,iBAEA,OAAAgc,EAAAI,EAAAI,EAAAF,GAMAhC,iBAAA,SAAAmC,GACA,IAAA1e,EAAAjD,KAEAigB,EAAAhd,EAAAuB,QAAA0V,KAAAmE,eAAAxF,YAEA+I,EAAA3e,EAAA8c,mBAAA3H,EAAAuJ,GAAA,KAAA1B,GACAiB,EAAAje,EAAA+d,cAAAY,GACAC,EAAA5e,EAAAY,eAAAZ,EAAAa,MAAAb,EAAAgB,OAEA+X,EAAAhd,KAAA8iB,MAAAD,EAAAX,GACA,OAAAlF,EAAA,EAAAA,EAAA,KAIAzD,EAAAwJ,kBAAA,OAAAvD,EAAAN,uCC7wBA5U,EAAAC,QAAiBhL,EAAQ,QACzB+K,EAAAC,QAAAwB,OAAwBxM,EAAQ,QAChC+K,EAAAC,QAAA1B,OAAwBtJ,EAAQ,QAChC+K,EAAAC,QAAA/E,QAAyBjG,EAAQ,6CCHjC,IAAAE,EAAcF,EAAQ,QAKtBgL,EAAAD,EAAAC,QAAA,CAKAyY,MAAA,SAAA/hB,GACAA,EAAA6E,IAAAmd,UAAA,IAAAhiB,EAAA6D,MAAA7D,EAAAgE,SAcAie,YAAA,SAAApd,EAAAoC,EAAAC,EAAArD,EAAAG,EAAAwD,GACA,GAAAA,EAAA,CAGA,IAAA0a,EAAA,KACA/X,EAAApL,KAAA0R,IAAAjJ,EAAAxD,EAAA,EAAAke,EAAAre,EAAA,EAAAqe,GAEArd,EAAA0D,OAAAtB,EAAAkD,EAAAjD,GACArC,EAAA2D,OAAAvB,EAAApD,EAAAsG,EAAAjD,GACArC,EAAAsd,MAAAlb,EAAApD,EAAAqD,EAAAD,EAAApD,EAAAqD,EAAAiD,KACAtF,EAAA2D,OAAAvB,EAAApD,EAAAqD,EAAAlD,EAAAmG,GACAtF,EAAAsd,MAAAlb,EAAApD,EAAAqD,EAAAlD,EAAAiD,EAAApD,EAAAsG,EAAAjD,EAAAlD,EAAAmG,GACAtF,EAAA2D,OAAAvB,EAAAkD,EAAAjD,EAAAlD,GACAa,EAAAsd,MAAAlb,EAAAC,EAAAlD,EAAAiD,EAAAC,EAAAlD,EAAAmG,KACAtF,EAAA2D,OAAAvB,EAAAC,EAAAiD,GACAtF,EAAAsd,MAAAlb,EAAAC,EAAAD,EAAAkD,EAAAjD,EAAAiD,GACAtF,EAAAud,YACAvd,EAAA0D,OAAAtB,EAAAC,QAEArC,EAAAwd,KAAApb,EAAAC,EAAArD,EAAAG,IAIA6D,UAAA,SAAAhD,EAAAyd,EAAA9a,EAAAP,EAAAC,EAAAwH,GACA,IAAA/F,EAAA4Z,EAAAC,EAAAC,EAAAze,EAAA8F,EAGA,GAFA4E,KAAA,EAEA4T,GAAA,kBAAAA,IACA3Z,EAAA2Z,EAAAI,WACA,8BAAA/Z,GAAA,+BAAAA,GACA9D,EAAA8d,UAAAL,EAAArb,EAAAqb,EAAAze,MAAA,EAAAqD,EAAAob,EAAAte,OAAA,EAAAse,EAAAze,MAAAye,EAAAte,aAKA,KAAAmD,MAAAK,OAAA,IASA,OALA3C,EAAAuC,OACAvC,EAAA+d,UAAA3b,EAAAC,GACArC,EAAAge,OAAAnU,EAAA3P,KAAAiZ,GAAA,KACAnT,EAAAyD,YAEAga,GAEA,QACAzd,EAAAie,IAAA,IAAAtb,EAAA,IAAAzI,KAAAiZ,IACAnT,EAAAud,YACA,MACA,eACAG,EAAA,EAAA/a,EAAAzI,KAAAgkB,KAAA,GACA/e,EAAAue,EAAAxjB,KAAAgkB,KAAA,KACAle,EAAA0D,QAAAga,EAAA,EAAAve,EAAA,GACAa,EAAA2D,OAAA+Z,EAAA,EAAAve,EAAA,GACAa,EAAA2D,OAAA,KAAAxE,EAAA,GACAa,EAAAud,YACA,MACA,WACAtY,EAAA,EAAA/K,KAAAC,MAAAwI,EACA3C,EAAAwd,MAAAvY,KAAA,EAAAA,EAAA,EAAAA,GACA,MACA,kBACA,IAAAqR,EAAA3T,EAAAzI,KAAAC,MACAgkB,GAAA7H,EACA8H,GAAA9H,EACA+H,EAAAnkB,KAAAC,MAAAwI,EAMAzH,KAAAkiB,YAAApd,EAAAme,EAAAC,EAAAC,IAAA,KAAA1b,GACA,MACA,cACAsC,EAAA,EAAA/K,KAAAC,MAAAwI,EACA3C,EAAA0D,QAAAuB,EAAA,GACAjF,EAAA2D,OAAA,EAAAsB,GACAjF,EAAA2D,OAAAsB,EAAA,GACAjF,EAAA2D,OAAA,GAAAsB,GACAjF,EAAAud,YACA,MACA,YACAvd,EAAA0D,OAAA,EAAAf,GACA3C,EAAA2D,OAAA,GAAAhB,GACA3C,EAAA0D,QAAAf,EAAA,GACA3C,EAAA2D,OAAAhB,EAAA,GACA,MACA,eACAgb,EAAAzjB,KAAAuiB,IAAAviB,KAAAiZ,GAAA,GAAAxQ,EACAib,EAAA1jB,KAAAyiB,IAAAziB,KAAAiZ,GAAA,GAAAxQ,EACA3C,EAAA0D,QAAAia,GAAAC,GACA5d,EAAA2D,OAAAga,EAAAC,GACA5d,EAAA0D,QAAAia,EAAAC,GACA5d,EAAA2D,OAAAga,GAAAC,GACA,MACA,WACA5d,EAAA0D,OAAA,EAAAf,GACA3C,EAAA2D,OAAA,GAAAhB,GACA3C,EAAA0D,QAAAf,EAAA,GACA3C,EAAA2D,OAAAhB,EAAA,GACAgb,EAAAzjB,KAAAuiB,IAAAviB,KAAAiZ,GAAA,GAAAxQ,EACAib,EAAA1jB,KAAAyiB,IAAAziB,KAAAiZ,GAAA,GAAAxQ,EACA3C,EAAA0D,QAAAia,GAAAC,GACA5d,EAAA2D,OAAAga,EAAAC,GACA5d,EAAA0D,QAAAia,EAAAC,GACA5d,EAAA2D,OAAAga,GAAAC,GACA,MACA,WACA5d,EAAA0D,QAAAf,EAAA,GACA3C,EAAA2D,OAAAhB,EAAA,GACA,MACA,WACA3C,EAAA0D,OAAA,KACA1D,EAAA2D,OAAAhB,EAAA,GACA,MAGA3C,EAAA4I,OACA5I,EAAA4D,SACA5D,EAAAmD,YAGAsJ,SAAA,SAAAzM,EAAAwL,GACAxL,EAAAuC,OACAvC,EAAAyD,YACAzD,EAAAwd,KAAAhS,EAAAvM,KAAAuM,EAAApM,IAAAoM,EAAAtM,MAAAsM,EAAAvM,KAAAuM,EAAAnM,OAAAmM,EAAApM,KACAY,EAAAse,QAGA5R,WAAA,SAAA1M,GACAA,EAAAmD,WAGAQ,OAAA,SAAA3D,EAAAkM,EAAAmF,EAAAkN,GACA,GAAAlN,EAAAxI,YAOA,MANA,UAAAwI,EAAAxI,cAAA0V,GAAA,UAAAlN,EAAAxI,aAAA0V,EACAve,EAAA2D,OAAAuI,EAAA9J,EAAAiP,EAAAhP,GAEArC,EAAA2D,OAAA0N,EAAAjP,EAAA8J,EAAA7J,QAEArC,EAAA2D,OAAA0N,EAAAjP,EAAAiP,EAAAhP,GAIAgP,EAAA/I,QAKAtI,EAAAwe,cACAD,EAAArS,EAAAD,sBAAAC,EAAAE,kBACAmS,EAAArS,EAAAC,sBAAAD,EAAAI,kBACAiS,EAAAlN,EAAAjF,kBAAAiF,EAAApF,sBACAsS,EAAAlN,EAAA/E,kBAAA+E,EAAAlF,sBACAkF,EAAAjP,EACAiP,EAAAhP,GAVArC,EAAA2D,OAAA0N,EAAAjP,EAAAiP,EAAAhP,KAuBA1I,EAAAujB,MAAAzY,EAAAyY,MASAvjB,EAAA8kB,qBAAA,SAAAze,GACAA,EAAAyD,YACAgB,EAAA2Y,YAAAxO,MAAAnK,EAAAiK,iDC/MA,IAAAgQ,EAAAjlB,EAAA,QAAAklB,EAAAllB,EAAAmlB,EAAAF,GAAkfC,EAAG,uCCErfna,EAAAC,QAAA,SAAA2C,GACAA,EAAAyX,QAAA,SAAAjZ,EAAAhI,GAEA,OADAA,EAAAkG,KAAA,UACA,IAAAsD,EAAAxB,EAAAhI,0CCHA4G,EAAAC,QAAA,SAAA2C,GAEAA,EAAA0X,SAAA,SAAAlZ,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,WAEA,IAAAsD,EAAAxB,EAAAhI,0CCFA,IAAAjE,EAAA,CAIAE,KAAA,aAOAklB,IAAA,WACA,IAAAzhB,EAAA,EACA,kBACA,OAAAA,KAHA,GAaAuZ,cAAA,SAAA7R,GACA,cAAAA,GAAA,qBAAAA,GASAlJ,QAAA2S,MAAA3S,QAAA2S,MAAA3S,QAAA,SAAAkJ,GACA,yBAAAqB,OAAAE,UAAAsX,SAAA3Z,KAAAc,IASAS,SAAA,SAAAT,GACA,cAAAA,GAAA,oBAAAqB,OAAAE,UAAAsX,SAAA3Z,KAAAc,IASA7E,eAAA,SAAA6E,EAAAga,GACA,2BAAAha,EAAAga,EAAAha,GAUAsE,sBAAA,SAAAtE,EAAAjK,EAAAikB,GACA,OAAArlB,EAAAwG,eAAAxG,EAAAmC,QAAAkJ,KAAAjK,GAAAiK,EAAAga,IAWApf,SAAA,SAAAqf,EAAAzQ,EAAA0Q,GACA,GAAAD,GAAA,oBAAAA,EAAA/a,KACA,OAAA+a,EAAArQ,MAAAsQ,EAAA1Q,IAaAvN,KAAA,SAAAke,EAAAF,EAAAC,EAAAxkB,GACA,IAAAuB,EAAAmjB,EAAA5N,EACA,GAAA7X,EAAAmC,QAAAqjB,GAEA,GADAC,EAAAD,EAAA5hB,OACA7C,EACA,IAAAuB,EAAAmjB,EAAA,EAAqBnjB,GAAA,EAAQA,IAC7BgjB,EAAA/a,KAAAgb,EAAAC,EAAAljB,WAGA,IAAAA,EAAA,EAAeA,EAAAmjB,EAASnjB,IACxBgjB,EAAA/a,KAAAgb,EAAAC,EAAAljB,WAGG,GAAAtC,EAAA8L,SAAA0Z,GAGH,IAFA3N,EAAAnL,OAAAmL,KAAA2N,GACAC,EAAA5N,EAAAjU,OACAtB,EAAA,EAAcA,EAAAmjB,EAASnjB,IACvBgjB,EAAA/a,KAAAgb,EAAAC,EAAA3N,EAAAvV,IAAAuV,EAAAvV,KAYAojB,YAAA,SAAAC,EAAAC,GACA,IAAAtjB,EAAA4J,EAAA2Z,EAAAC,EAEA,IAAAH,IAAAC,GAAAD,EAAA/hB,SAAAgiB,EAAAhiB,OACA,SAGA,IAAAtB,EAAA,EAAA4J,EAAAyZ,EAAA/hB,OAA+BtB,EAAA4J,IAAU5J,EAIzC,GAHAujB,EAAAF,EAAArjB,GACAwjB,EAAAF,EAAAtjB,GAEAujB,aAAA/Q,OAAAgR,aAAAhR,OACA,IAAA9U,EAAA0lB,YAAAG,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQAzN,MAAA,SAAAyH,GACA,GAAA9f,EAAAmC,QAAA2d,GACA,OAAAA,EAAA1d,IAAApC,EAAAqY,OAGA,GAAArY,EAAA8L,SAAAgU,GAAA,CAMA,IALA,IAAApI,EAAA,GACAG,EAAAnL,OAAAmL,KAAAiI,GACAiG,EAAAlO,EAAAjU,OACAoiB,EAAA,EAESA,EAAAD,IAAUC,EACnBtO,EAAAG,EAAAmO,IAAAhmB,EAAAqY,MAAAyH,EAAAjI,EAAAmO,KAGA,OAAAtO,EAGA,OAAAoI,GAQAmG,QAAA,SAAA1R,EAAAmD,EAAAoI,EAAA/Z,GACA,IAAAmgB,EAAAxO,EAAAnD,GACA+H,EAAAwD,EAAAvL,GAEAvU,EAAA8L,SAAAoa,IAAAlmB,EAAA8L,SAAAwQ,GACAtc,EAAAiN,MAAAiZ,EAAA5J,EAAAvW,GAEA2R,EAAAnD,GAAAvU,EAAAqY,MAAAiE,IAQA6J,UAAA,SAAA5R,EAAAmD,EAAAoI,GACA,IAAAoG,EAAAxO,EAAAnD,GACA+H,EAAAwD,EAAAvL,GAEAvU,EAAA8L,SAAAoa,IAAAlmB,EAAA8L,SAAAwQ,GACAtc,EAAAiL,QAAAib,EAAA5J,GACG5E,EAAAI,eAAAvD,KACHmD,EAAAnD,GAAAvU,EAAAqY,MAAAiE,KAaArP,MAAA,SAAAyK,EAAAoI,EAAA/Z,GACA,IAEAkH,EAAA3K,EAAAuV,EAAAkO,EAAAC,EAFAI,EAAApmB,EAAAmC,QAAA2d,KAAA,CAAAA,GACA5T,EAAAka,EAAAxiB,OAGA,IAAA5D,EAAA8L,SAAA4L,GACA,OAAAA,EAMA,IAHA3R,KAAA,GACAkH,EAAAlH,EAAAsgB,QAAArmB,EAAAimB,QAEA3jB,EAAA,EAAaA,EAAA4J,IAAU5J,EAEvB,GADAwd,EAAAsG,EAAA9jB,GACAtC,EAAA8L,SAAAgU,GAKA,IADAjI,EAAAnL,OAAAmL,KAAAiI,GACAkG,EAAA,EAAAD,EAAAlO,EAAAjU,OAAkCoiB,EAAAD,IAAUC,EAC5C/Y,EAAA4K,EAAAmO,GAAAtO,EAAAoI,EAAA/Z,GAIA,OAAA2R,GAUAzM,QAAA,SAAAyM,EAAAoI,GACA,OAAA9f,EAAAiN,MAAAyK,EAAAoI,EAAA,CAAwCuG,OAAArmB,EAAAmmB,aAUxCpiB,OAAA,SAAA2T,GAIA,IAHA,IAAA4O,EAAA,SAAAjb,EAAAkJ,GACAmD,EAAAnD,GAAAlJ,GAEA/I,EAAA,EAAA4J,EAAA6I,UAAAnR,OAA0CtB,EAAA4J,IAAU5J,EACpDtC,EAAAsH,KAAAyN,UAAAzS,GAAAgkB,GAEA,OAAA5O,GAMAP,SAAA,SAAAoP,GACA,IAAA/hB,EAAAjD,KACAilB,EAAAD,KAAAzO,eAAA,eAAAyO,EAAAE,YAAA,WACA,OAAAjiB,EAAAyQ,MAAA1T,KAAAwT,YAGA2R,EAAA,WACAnlB,KAAAklB,YAAAD,GAYA,OATAE,EAAA9Z,UAAApI,EAAAoI,UACA4Z,EAAA5Z,UAAA,IAAA8Z,EACAF,EAAAziB,OAAA/D,EAAAmX,SAEAoP,GACAvmB,EAAA+D,OAAAyiB,EAAA5Z,UAAA2Z,GAGAC,EAAAG,UAAAniB,EAAAoI,UACA4Z,IAIA3b,EAAAC,QAAA9K,EAWAA,EAAA4mB,aAAA5mB,EAAAiG,SAUAjG,EAAAqV,QAAA,SAAArB,EAAA7N,EAAA0gB,GACA,OAAA/R,MAAAlI,UAAAyI,QAAA9K,KAAAyJ,EAAA7N,EAAA0gB,IAUA7mB,EAAA8mB,kBAAA9mB,EAAAwG,eASAxG,EAAA+mB,yBAAA/mB,EAAA2P,2DChVA9E,EAAAC,QAAA,CACAkc,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,0DCtJA,IAAA5jB,EAAA,WAA0B,IAAA6jB,EAAA7uB,KAAa8uB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,UAA8BE,MAAA,CAAOC,OAAA,KAAa,CAAAH,EAAA,UAAeE,MAAA,CAAOE,GAAA,EAAAC,GAAA,GAAAC,GAAA,KAAwB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAU,QAAkB,GAAAP,EAAA,UAAmBE,MAAA,CAAOE,GAAA,EAAAC,GAAA,GAAAC,GAAA,KAAwB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAW,SAAmB,GAAAR,EAAA,UAAmBE,MAAA,CAAOE,GAAA,EAAAC,GAAA,GAAAC,GAAA,KAAwB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAY,aAAuB,GAAAT,EAAA,UAAmBE,MAAA,CAAOG,GAAA,GAAAC,GAAA,KAAiB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAa,SAAmB,GAAAV,EAAA,UAAmBE,MAAA,CAAOG,GAAA,GAAAC,GAAA,KAAiB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAc,UAAoB,GAAAX,EAAA,UAAmBE,MAAA,CAAOE,GAAA,EAAAC,GAAA,GAAAC,GAAA,KAAwB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAe,kBAA4B,GAAAZ,EAAA,UAAmBE,MAAA,CAAOE,GAAA,EAAAC,GAAA,GAAAC,GAAA,KAAwB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAgB,UAAoB,GAAAb,EAAA,UAAmBE,MAAA,CAAOE,GAAA,EAAAC,GAAA,GAAAC,GAAA,KAAwB,CAAAN,EAAA,kBAAuBE,MAAA,CAAOxsB,OAAAmsB,EAAAjoB,SAAmB,OAAAooB,EAAA,KAAkBc,YAAA,uBAAkC,CAAAd,EAAA,YAAiBE,MAAA,CAAOa,KAAA,mBAAuB,QAClgCC,EAAA,mDCDIC,EAAM,WAAgB,IAAApB,EAAA7uB,KAAa8uB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBc,YAAA,SAAoB,CAAAd,EAAA,UAAeE,MAAA,CAAO9sB,GAAAysB,EAAAzsB,SAChJ8tB,EAAe,6CCSnBC,EAAA,CACAC,KAAA,iBAEAC,MAAA,WAEAhwB,KALA,WAMA,OACA+B,GAAAkuB,QAIAC,QAXA,WAYA,IAAAzrB,EAAA0rB,SAAAC,eAAAzwB,KAAAoC,IACA,IAAAsuB,EAAAhX,EAAA5U,EAAA9E,KAAA0C,UCvBkXiuB,EAAA,0BCQlXC,EAAgBzlB,OAAA0lB,EAAA,KAAA1lB,CACdwlB,EACAV,EACAC,GACF,EACA,KACA,KACA,MAIeY,EAAAF,sBCqBfG,EAAA,CACAX,KAAA,gBAEAY,WAAA7lB,OAAAC,EAAA,KAAAD,CAAA,GACA2lB,EAAAV,KAAAU,GAGAG,QAPA,WAQAjxB,KAAAkxB,UACAlxB,KAAAmxB,gBAIA9wB,KAbA,WAcA,OACAkvB,IAAA,CACA3mB,KAAA,MACAvI,KAAA,CACAI,OAAA,IAAA2wB,OACAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,mBADA,SAAAimB,OAEAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,mBAFA,SAAAimB,OAGAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,mBAHA,SAAAimB,OAIAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,mBAJA,SAAAimB,OAKAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,mBALA,OAOA7K,SAAA,CACA,CACAW,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,mBACAhK,gBAAA,uBACAa,YAAA,qBACAF,YAAA,EACA8P,qBAAA,uBACAG,iBAAA,qBACA1R,KAAA,oBAIAmE,QAAA,CACApF,OAAA,CACAC,SAAA,GAEA0M,OAAA,CACAC,MAAA,CACA,CACA3M,SAAA,IAGA4M,MAAA,CACA,CACA5M,SAAA,OAOAmwB,KAAA,CACA5mB,KAAA,MACApE,QAAA,CACA8sB,YAAA,EACAC,SAAA,CACAzlB,KAAA,SAEAnF,SAAA,CACAC,KAAA,CACA8G,MAAA,IAGA3B,OAAA,CACAC,MAAA,CACA,CACA3M,SAAA,EACAmyB,UAAA,CACAnyB,SAAA,KAIA4M,MAAA,CACA,CACArD,KAAA,SACAvJ,SAAA,EACAC,SAAA,OACA8C,GAAA,WACAovB,UAAA,CACAnyB,SAAA,IAGA,CACAuJ,KAAA,SACAvJ,SAAA,EACAC,SAAA,QACA8C,GAAA,WACAovB,UAAA,CACAnyB,SAAA,OAMAgB,KAAA,CACAI,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,yBAEA7K,SAAA,CACA,CACAW,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,sBACAvC,KAAA,OACAvI,KAAA,uBACAqN,MAAA,EACA1L,YAAA,UACAb,gBAAA,UACAmN,iBAAA,UACAH,qBAAA,UACA0D,0BAAA,UACAG,sBAAA,UACA9E,QAAA,YAEA,CACAtE,KAAA,OACA3H,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,oBACA9K,KAAA,6BACAqN,MAAA,EACAvM,gBAAA,UACAa,YAAA,UACA4P,qBAAA,UACAG,iBAAA,UACA7E,QAAA,eAMAuiB,SAAA,CACA7mB,KAAA,WACAvI,KAAA,CACAI,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,mBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,oBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,uBAEA7K,SAAA,CACA,CACAD,KAAA,aACAc,gBAAA,gCACAyQ,qBAAA,oCAMA8d,KAAA,CACA9mB,KAAA,MACApE,QAAA,CACA8sB,YAAA,EACAC,SAAA,CACAzlB,KAAA,SAEAnF,SAAA,CACAC,KAAA,CACA8G,MAAA,IAGA3B,OAAA,CACAC,MAAA,CACA,CACA3M,SAAA,EACAmyB,UAAA,CACAnyB,SAAA,KAIA4M,MAAA,CACA,CACArD,KAAA,SACAvJ,SAAA,EACAC,SAAA,OACA8C,GAAA,WACAovB,UAAA,CACAnyB,SAAA,IAGA,CACAuJ,KAAA,SACAvJ,SAAA,EACAC,SAAA,QACA8C,GAAA,WACAovB,UAAA,CACAnyB,SAAA,OAOAgB,KAAA,CACAI,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,yBAEA7K,SAAA,CACA,CACAW,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,sBACAvC,KAAA,OACAvI,KAAA,uBACAqN,MAAA,EACA1L,YAAA,UACAb,gBAAA,UACAmN,iBAAA,UACAH,qBAAA,UACA0D,0BAAA,UACAG,sBAAA,UACA9E,QAAA,YAEA,CACAtE,KAAA,MACA3H,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,oBACA9K,KAAA,6BACAqN,MAAA,EACAvM,gBAAA,UACAa,YAAA,UACA4P,qBAAA,UACAG,iBAAA,UACA7E,QAAA,eAMAyiB,MAAA,CACA/mB,KAAA,QACApE,QAAA,CACAwI,MAAA,CACA3N,SAAA,IAGAgB,KAAA,CACAI,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,sBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,yBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,sBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,uBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBAEA7K,SAAA,CACA,CACAW,MAAA,GAAAmwB,OAAAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,qBACAhK,gBAAA,wBACAa,YAAA,sBACAmM,qBAAA,sBACAG,iBAAA,OACAuD,0BAAA,OACAG,sBAAA,sBACA3R,KAAA,wBAEA,CACAY,MAAA,GAAAmwB,OAAAjmB,OAAAkmB,EAAA,KAAAlmB,CAAA,oBACAhK,gBAAA,uBACAa,YAAA,qBACAmM,qBAAA,qBACAG,iBAAA,OACAuD,0BAAA,OACAG,sBAAA,qBACA3R,KAAA,4BAMAuvB,cAAA,CACAhnB,KAAA,MACApE,QAAA,CACAuH,OAAA,CACAC,MAAA,CACA,CACA3M,SAAA,IAGA4M,MAAA,CACA,CACA5M,SAAA,MAKAgB,KAAA,CACAI,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,yBAEA7K,SAAA,CACA,CACAW,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,mBACAhK,gBAAA,uBACAa,YAAA,qBACAF,YAAA,EACA8P,qBAAA,uBACAG,iBAAA,qBACA1R,KAAA,2BAMAwvB,MAAA,CACAjnB,KAAA,YACAvI,KAAA,CACAC,SAAA,CACA,CACAD,KAAA,eACAc,gBAAA,CACA,UACA,UACA,UACA,UACA,aAIAV,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,mBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,qBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,sBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,oBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,uBAKAvE,KAAA,CACAgC,KAAA,OACApE,QAAA,CACAuH,OAAA,CACAC,MAAA,CACA,CACA3M,SAAA,IAGA4M,MAAA,CACA,CACA5M,SAAA,MAKAgB,KAAA,CACAI,OAAA,CACA0K,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,wBACAA,OAAAkmB,EAAA,KAAAlmB,CAAA,yBAEA7K,SAAA,CACA,CACAW,MAAAkK,OAAAkmB,EAAA,KAAAlmB,CAAA,qBACAuC,MAAA,EACAL,YAAA,GACAlM,gBAAA,uBACAa,YAAA,qBACAV,eAAA,OACAE,WAAA,GACAE,iBAAA,EACAE,gBAAA,QACA0M,iBAAA,qBACAH,qBAAA,OACAK,iBAAA,EACA4D,iBAAA,EACAP,0BAAA,qBACAG,sBAAA,sBACAE,sBAAA,EACAlD,YAAA,EACAE,eAAA,GACA7O,KAAA,6BAQAoxB,SAAAtmB,OAAAumB,EAAA,KAAAvmB,CAAA,GACAA,OAAAwmB,EAAA,KAAAxmB,CAAA,CACA+lB,SAAA,qBAIAU,QAAAzmB,OAAAumB,EAAA,KAAAvmB,CAAA,GACAA,OAAAwmB,EAAA,KAAAxmB,CAAA,CACAgmB,aAAA,0BC/biXU,EAAA,ECQ7WC,aAAY3mB,OAAA0lB,EAAA,KAAA1lB,CACd0mB,EACA7mB,EACAglB,GACF,EACA,KACA,WACA,OAIe+B,EAAA,WAAAD,+CCjBf,IAAAxzB,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtByzB,EAAA1zB,EAAA0G,OAEA1G,EAAAa,KAAA,UACAwH,SAAA,CACAC,KAAA,CACAwG,QAAA,GACAjM,gBAAA6wB,EAAA1qB,aACAxF,YAAA,EACAE,YAAAgwB,EAAA1qB,aACAhG,eAAA,OACAE,WAAA,GACAE,iBAAA,EACAE,gBAAA,QACAyP,iBAAA,EACA3D,MAAA,MAKApE,EAAAC,QAAA/K,EAAAgE,OAAA,CACAiE,KAAA,WACA,IAOA5G,EAAAoyB,EAAAjhB,EAAAkhB,EAPAjvB,EAAAjD,KACAsX,EAAArU,EAAA4T,MACA/R,EAAA7B,EAAAsR,OAAAzP,IACA8G,EAAA0L,EAAA1L,SACAkB,EAAA7J,EAAAuK,UAAA4F,QACA+e,EAAAH,EAAArrB,SAAAC,KACAwrB,GAAA,EA2BA,IAvBAnvB,EAAAovB,OAAAvlB,EAAAzK,QACAyK,EAAA3K,KAAA2K,EAAA,IAGAhI,EAAAuC,OAGAvC,EAAAzD,QAAAiW,EAAAhW,gBAAA6wB,EAAA7wB,eAGAwD,EAAA0C,aACA1C,EAAA0C,YAAA8P,EAAA9V,YAAA2wB,EAAA3wB,YAGAsD,EAAArD,eAAA6V,EAAA5V,kBAAAywB,EAAAzwB,iBACAoD,EAAAnD,SAAA2V,EAAA1V,iBAAAuwB,EAAAvwB,gBACAkD,EAAAjD,UAAAyV,EAAAxV,aAAAqwB,EAAArwB,YACAgD,EAAA/C,YAAAuV,EAAAtV,aAAAgwB,EAAA1qB,aAGAxC,EAAAyD,YACA6pB,GAAA,EAEAvyB,EAAA,EAAiBA,EAAAiN,EAAAzK,SAAuBxC,EACxCoyB,EAAAnlB,EAAAjN,GACAmR,EAAAvS,EAAAoS,aAAA/D,EAAAjN,GACAqyB,EAAAD,EAAApb,MAGA,IAAAhX,EACAqyB,EAAAxiB,OACA5K,EAAA0D,OAAA0pB,EAAAhrB,EAAAgrB,EAAA/qB,GACAirB,EAAAvyB,IAGAmR,GAAA,IAAAohB,EAAAphB,EAAAlE,EAAAslB,GAEAF,EAAAxiB,OACA0iB,IAAAvyB,EAAA,IAAA+L,IAAA,IAAAwmB,EAEAttB,EAAA0D,OAAA0pB,EAAAhrB,EAAAgrB,EAAA/qB,GAGA1I,EAAAoJ,OAAAY,OAAA3D,EAAAkM,EAAA6F,MAAAob,EAAApb,OAEAub,EAAAvyB,IAKAiF,EAAA4D,SACA5D,EAAAmD,gDCtFA,IAAA3J,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACAmzB,QAAA,KAQAhpB,EAAAC,QAAA,CAKAgpB,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAH,GACA,IAAAI,EAAA1yB,KAAAuyB,SACA,GAAAnB,OAAAkB,GAAAvf,QAAA,SAAA4f,IACA,IAAAD,EAAA5e,QAAA6e,IACAD,EAAAvwB,KAAAwwB,KAIA3yB,KAAAwyB,YAOAI,WAAA,SAAAN,GACA,IAAAI,EAAA1yB,KAAAuyB,SACA,GAAAnB,OAAAkB,GAAAvf,QAAA,SAAA4f,GACA,IAAAE,EAAAH,EAAA5e,QAAA6e,IACA,IAAAE,GACAH,EAAA3e,OAAA8e,EAAA,KAIA7yB,KAAAwyB,YAOAxQ,MAAA,WACAhiB,KAAAuyB,SAAA,GACAvyB,KAAAwyB,YAQApd,MAAA,WACA,OAAApV,KAAAuyB,SAAAlwB,QAQAywB,OAAA,WACA,OAAA9yB,KAAAuyB,UAYAQ,OAAA,SAAA9yB,EAAA+yB,EAAA1f,GACA,IAEAvS,EAAAkyB,EAAAN,EAAAO,EAAAjgB,EAFAkgB,EAAAnzB,KAAAmzB,YAAAlzB,GACA0K,EAAAwoB,EAAA9wB,OAGA,IAAAtB,EAAA,EAAaA,EAAA4J,IAAU5J,EAIvB,GAHAkyB,EAAAE,EAAApyB,GACA4xB,EAAAM,EAAAN,OACA1f,EAAA0f,EAAAK,GACA,oBAAA/f,IACAigB,EAAA,CAAAjzB,GAAAmxB,OAAA9d,GAAA,IACA4f,EAAA/wB,KAAA8wB,EAAAzuB,UACA,IAAAyO,EAAAS,MAAAif,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAAlzB,GACA,IAAAmzB,EAAAnzB,EAAAozB,WAAApzB,EAAAozB,SAAA,IACA,GAAAD,EAAAhxB,KAAApC,KAAAwyB,SACA,OAAAY,EAAAD,YAGA,IAAAb,EAAA,GACAa,EAAA,GACAzwB,EAAAzC,KAAAyC,QAAA,GACA8B,EAAA9B,EAAA8B,SAAA9B,EAAA8B,QAAA8tB,SAAA,GA2BA,OAzBAtyB,KAAAuyB,SAAAnB,OAAA1uB,EAAA4vB,SAAA,IAAAvf,QAAA,SAAA4f,GACA,IAAAE,EAAAP,EAAAxe,QAAA6e,GACA,QAAAE,EAAA,CAIA,IAAAzwB,EAAAuwB,EAAAvwB,GACAyC,EAAAL,EAAApC,IACA,IAAAyC,KAIA,IAAAA,IACAA,EAAApG,EAAAqY,MAAAxY,EAAA0G,OAAAstB,QAAAlwB,KAGAkwB,EAAAnwB,KAAAwwB,GACAQ,EAAAhxB,KAAA,CACAwwB,SACAnuB,QAAAK,GAAA,SAIAuuB,EAAAD,cACAC,EAAAhxB,GAAApC,KAAAwyB,SACAW,GASAG,YAAA,SAAArzB,UACAA,EAAAozB,mCCrKA,IAAAnnB,EAAY3N,EAAQ,QAARA,GAEZ2N,EAAAzN,QAAgBF,EAAQ,QAGxBA,EAAQ,OAARA,CAA6B2N,GAE7BA,EAAAqnB,UAAkBh1B,EAAQ,QAC1B2N,EAAAsnB,iBAAyBj1B,EAAQ,QACjC2N,EAAA5N,SAAiBC,EAAQ,QACzB2N,EAAA1N,QAAgBD,EAAQ,QACxB2N,EAAAvF,SAAiBpI,EAAQ,QACzB2N,EAAAunB,YAAoBl1B,EAAQ,QAC5B2N,EAAAxN,QAAgBH,EAAQ,QACxB2N,EAAAwnB,SAAiBn1B,EAAQ,QACzB2N,EAAAomB,QAAgB/zB,EAAQ,QACxB2N,EAAAoM,MAAc/Z,EAAQ,QACtB2N,EAAAqM,aAAqBha,EAAQ,QAC7B2N,EAAAynB,MAAcp1B,EAAQ,QACtB2N,EAAA0nB,QAAgBr1B,EAAQ,QAExBA,EAAQ,OAARA,CAAgC2N,GAChC3N,EAAQ,OAARA,CAAuC2N,GAEvC3N,EAAQ,OAARA,CAAmC2N,GACnC3N,EAAQ,OAARA,CAAiC2N,GACjC3N,EAAQ,OAARA,CAA+B2N,GAC/B3N,EAAQ,OAARA,CAAoC2N,GACpC3N,EAAQ,QAARA,CAAqC2N,GACrC3N,EAAQ,OAARA,CAA6B2N,GAI7B3N,EAAQ,QAARA,CAAsC2N,GACtC3N,EAAQ,OAARA,CAAyC2N,GACzC3N,EAAQ,OAARA,CAA2C2N,GAC3C3N,EAAQ,OAARA,CAAuC2N,GACvC3N,EAAQ,OAARA,CAA4C2N,GAC5C3N,EAAQ,OAARA,CAAwC2N,GACxC3N,EAAQ,OAARA,CAA0C2N,GAE1C3N,EAAQ,OAARA,CAA4B2N,GAC5B3N,EAAQ,OAARA,CAA+B2N,GAC/B3N,EAAQ,OAARA,CAAiC2N,GACjC3N,EAAQ,OAARA,CAA6B2N,GAC7B3N,EAAQ,OAARA,CAAkC2N,GAClC3N,EAAQ,OAARA,CAA8B2N,GAC9B3N,EAAQ,OAARA,CAAgC2N,GAGhC,IAAAomB,EAAc/zB,EAAQ,QACtB,QAAAkmB,KAAA6N,EACAA,EAAA/b,eAAAkO,IACAvY,EAAAomB,QAAAG,SAAAH,EAAA7N,IAIAvY,EAAAwnB,SAAAjxB,aAEA6G,EAAAC,QAAA2C,EACA,qBAAAmM,SACAA,OAAAnM,SAYAA,EAAA3J,OAAA+vB,EAAAlzB,OAAAoK,SASA0C,EAAA2nB,MAAAvB,EAAAwB,MAAAtqB,SASA0C,EAAA6nB,cAAA7nB,EAAAomB,QAUApmB,EAAA8nB,WAAA9nB,EAAA1N,QAAAgE,OAAA,IASA0J,EAAA+nB,cAAA/nB,EAAAzN,QAAAoJ,OASAqE,EAAAgoB,cAAAhoB,EAAAxN,6CCxHA,IAAAJ,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,YACAg1B,UAAA,CAEAC,eAAA,EAEAC,cAAA,GAEAxoB,MAAA,CACAC,KAAA,UAEA5J,eAAA,SAAAjC,GACA,IAAAe,EAAA,GACAA,EAAAmB,KAAA,cAAAlC,EAAAmC,GAAA,aAEA,IAAA/B,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAG,EAAAJ,EAAAI,OAEA,GAAAH,EAAA+B,OACA,QAAAtB,EAAA,EAAkBA,EAAAT,EAAA,GAAAD,KAAAgC,SAA6BtB,EAC/CC,EAAAmB,KAAA,qCAAA7B,EAAA,GAAAa,gBAAAJ,GAAA,aACAN,EAAAM,IACAC,EAAAmB,KAAA1B,EAAAM,IAEAC,EAAAmB,KAAA,SAKA,OADAnB,EAAAmB,KAAA,SACAnB,EAAAsB,KAAA,KAEAlD,OAAA,CACAqB,OAAA,CACAE,eAAA,SAAAV,GACA,IAAAI,EAAAJ,EAAAI,KACA,OAAAA,EAAAI,OAAA4B,QAAAhC,EAAAC,SAAA+B,OACAhC,EAAAI,OAAAI,IAAA,SAAAI,EAAAF,GACA,IAAAb,EAAAD,EAAAE,eAAA,GACAwP,EAAAtP,EAAAC,SAAA,GACAyiB,EAAA7iB,EAAAG,KAAAU,GACA6L,EAAAmW,KAAAnW,QAAA,GACAwB,EAAA3P,EAAA2P,sBACAkmB,EAAAr0B,EAAAuE,QAAAmC,SAAAoc,IACArV,EAAAd,EAAAzL,gBAAAyL,EAAAzL,gBAAAiN,EAAAuB,EAAAxO,gBAAAJ,EAAAuzB,EAAAnzB,iBACAuH,EAAAkE,EAAA5K,YAAA4K,EAAA5K,YAAAoM,EAAAuB,EAAA3N,YAAAjB,EAAAuzB,EAAAtyB,aACAuyB,EAAA3nB,EAAA9K,YAAA8K,EAAA9K,YAAAsM,EAAAuB,EAAA7N,YAAAf,EAAAuzB,EAAAxyB,aAEA,OACAd,KAAAC,EACAC,UAAAwM,EACA3L,YAAA2G,EACA7G,UAAA0yB,EACAn0B,OAAAgH,MAAAuI,EAAAtP,KAAAU,KAAAb,EAAAG,KAAAU,GAAAX,OAGAP,MAAAkB,KAIA,KAIArB,QAAA,SAAAC,EAAAC,GACA,IAEAmB,EAAA4J,EAAAzK,EAFAL,EAAAD,EAAAC,MACAI,EAAAD,KAAAC,MAGA,IAAAc,EAAA,EAAA4J,GAAA1K,EAAAI,KAAAC,UAAA,IAAA+B,OAAyDtB,EAAA4J,IAAU5J,EACnEb,EAAAD,EAAAE,eAAAY,GAEAb,EAAAG,KAAAR,KACAK,EAAAG,KAAAR,GAAAO,QAAAF,EAAAG,KAAAR,GAAAO,QAIAH,EAAAM,WAKAi0B,iBAAA,GAGA7lB,UAAA,GAAA3P,KAAAiZ,GAGAwc,cAAA,EAAAz1B,KAAAiZ,GAGAsZ,SAAA,CACAmD,UAAA,CACAZ,MAAA,WACA,UAEA7yB,MAAA,SAAA0zB,EAAAt0B,GACA,IAAAu0B,EAAAv0B,EAAAI,OAAAk0B,EAAA90B,OACAiK,EAAA,KAAAzJ,EAAAC,SAAAq0B,EAAA70B,cAAAO,KAAAs0B,EAAA90B,OAWA,OATApB,EAAAmC,QAAAg0B,IAGAA,IAAAxhB,QACAwhB,EAAA,IAAA9qB,GAEA8qB,GAAA9qB,EAGA8qB,OAMAt2B,EAAAa,KAAA,MAAAV,EAAAqY,MAAAxY,EAAAmxB,WACAnxB,EAAAa,KAAA,OACAq1B,iBAAA,IAGAlrB,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAAojB,SAAAvjB,EAAAG,YAAAwoB,IAAA3oB,EAAAI,kBAAA9J,OAAA,CAEAiK,gBAAA9F,EAAAmuB,IAEA9gB,WAAAvV,EAAAE,KAGAo2B,aAAA,SAAAj1B,GAGA,IAFA,IAAAk1B,EAAA,EAEAjW,EAAA,EAAkBA,EAAAjf,IAAkBif,EACpC/e,KAAAC,MAAAmB,iBAAA2d,MACAiW,EAIA,OAAAA,GAGAz0B,OAAA,SAAAoM,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAsQ,EAAAtQ,EAAAsQ,UACA1L,EAAA5E,EAAAuE,QACA8vB,EAAAzvB,EAAA8B,SAAAoc,IACAkS,EAAA1kB,EAAAvM,MAAAuM,EAAAxM,KAAAuwB,EAAAxyB,YACAozB,EAAA3kB,EAAApM,OAAAoM,EAAArM,IAAAowB,EAAAxyB,YACA8B,EAAA5E,KAAA0R,IAAAukB,EAAAC,GACA9Z,EAAA,CAAiBlU,EAAA,EAAAC,EAAA,GACjBjH,EAAA+C,EAAA4J,UACA2nB,EAAA3vB,EAAA2vB,iBACAC,EAAA5vB,EAAA4vB,cAGA,GAAAA,EAAA,EAAAz1B,KAAAiZ,GAAA,CACA,IAAAkd,EAAAtwB,EAAA8J,UAAA,EAAA3P,KAAAiZ,IACAkd,GAAA,EAAAn2B,KAAAiZ,IAAAkd,GAAAn2B,KAAAiZ,IAAA,EAAAkd,GAAAn2B,KAAAiZ,GAAA,KACA,IAAAmd,EAAAD,EAAAV,EACAtf,EAAA,CAAiBjO,EAAAlI,KAAAuiB,IAAA4T,GAAAhuB,EAAAnI,KAAAyiB,IAAA0T,IACjBE,EAAA,CAAenuB,EAAAlI,KAAAuiB,IAAA6T,GAAAjuB,EAAAnI,KAAAyiB,IAAA2T,IACfE,EAAAH,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAn2B,KAAAiZ,IAAA,EAAAjZ,KAAAiZ,IAAAmd,EACAG,EAAAJ,GAAA,GAAAn2B,KAAAiZ,IAAA,GAAAjZ,KAAAiZ,IAAAmd,GAAAD,GAAA,IAAAn2B,KAAAiZ,IAAA,IAAAjZ,KAAAiZ,IAAAmd,EACAI,EAAAL,IAAAn2B,KAAAiZ,KAAAjZ,KAAAiZ,IAAAmd,GAAAD,GAAAn2B,KAAAiZ,IAAAjZ,KAAAiZ,IAAAmd,EACAK,EAAAN,GAAA,IAAAn2B,KAAAiZ,IAAA,IAAAjZ,KAAAiZ,IAAAmd,GAAAD,GAAA,IAAAn2B,KAAAiZ,IAAA,IAAAjZ,KAAAiZ,IAAAmd,EACAM,EAAAlB,EAAA,IACA9jB,EAAA,CAAexJ,EAAAsuB,GAAA,EAAAx2B,KAAA0R,IAAAyE,EAAAjO,GAAAiO,EAAAjO,EAAA,IAAAwuB,GAAAL,EAAAnuB,GAAAmuB,EAAAnuB,EAAA,IAAAwuB,IAAAvuB,EAAAsuB,GAAA,EAAAz2B,KAAA0R,IAAAyE,EAAAhO,GAAAgO,EAAAhO,EAAA,IAAAuuB,GAAAL,EAAAluB,GAAAkuB,EAAAluB,EAAA,IAAAuuB,KACflvB,EAAA,CAAeU,EAAAouB,EAAA,EAAAt2B,KAAAwH,IAAA2O,EAAAjO,GAAAiO,EAAAjO,EAAA,IAAAwuB,GAAAL,EAAAnuB,GAAAmuB,EAAAnuB,EAAA,IAAAwuB,IAAAvuB,EAAAouB,EAAA,EAAAv2B,KAAAwH,IAAA2O,EAAAhO,GAAAgO,EAAAhO,EAAA,IAAAuuB,GAAAL,EAAAluB,GAAAkuB,EAAAluB,EAAA,IAAAuuB,KACf3rB,EAAA,CAAgBjG,MAAA,IAAA0C,EAAAU,EAAAwJ,EAAAxJ,GAAAjD,OAAA,IAAAuC,EAAAW,EAAAuJ,EAAAvJ,IAChBvD,EAAA5E,KAAA0R,IAAAukB,EAAAlrB,EAAAjG,MAAAoxB,EAAAnrB,EAAA9F,QACAmX,EAAA,CAAclU,GAAA,IAAAV,EAAAU,EAAAwJ,EAAAxJ,GAAAC,GAAA,IAAAX,EAAAW,EAAAuJ,EAAAvJ,IAGdlH,EAAA6B,YAAAmB,EAAA0yB,kBAAAz1B,EAAAG,MACAJ,EAAA21B,YAAA52B,KAAAwH,KAAA5C,EAAA3D,EAAA6B,aAAA,KACA7B,EAAA41B,YAAA72B,KAAAwH,IAAAguB,EAAAv0B,EAAA21B,YAAA,WACA31B,EAAA61B,cAAA71B,EAAA21B,YAAA31B,EAAA41B,aAAA51B,EAAA81B,yBACA91B,EAAA+1B,QAAA5a,EAAAlU,EAAAjH,EAAA21B,YACA31B,EAAAg2B,QAAA7a,EAAAjU,EAAAlH,EAAA21B,YAEA11B,EAAAg2B,MAAAjzB,EAAAkzB,iBAEAlzB,EAAA2yB,YAAA31B,EAAA21B,YAAA31B,EAAA61B,aAAA7yB,EAAA8xB,aAAA9xB,EAAApD,OACAoD,EAAA4yB,YAAA72B,KAAAwH,IAAAvD,EAAA2yB,YAAA31B,EAAA61B,aAAA,GAEAr3B,EAAAsH,KAAA7F,EAAAG,KAAA,SAAA0iB,EAAAljB,GACAoD,EAAA8K,cAAAgV,EAAAljB,EAAA8M,MAIAoB,cAAA,SAAAgV,EAAAljB,EAAA8M,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAsQ,EAAAtQ,EAAAsQ,UACA1L,EAAA5E,EAAAuE,QACA4xB,EAAAvxB,EAAAsvB,UACAxsB,GAAA4I,EAAAxM,KAAAwM,EAAAvM,OAAA,EACA4D,GAAA2I,EAAArM,IAAAqM,EAAApM,QAAA,EACAgxB,EAAAtwB,EAAA8J,SACAymB,EAAAvwB,EAAA8J,SACA7N,EAAAmC,EAAAkK,aACAsnB,EAAA9nB,GAAAypB,EAAAhC,cAAA,EAAArR,EAAA3iB,OAAA,EAAA6C,EAAAozB,uBAAAv1B,EAAAT,KAAAR,KAAAgF,EAAA4vB,eAAA,EAAAz1B,KAAAiZ,KACA4d,EAAAlpB,GAAAypB,EAAA/B,aAAA,EAAApxB,EAAA4yB,YACAD,EAAAjpB,GAAAypB,EAAA/B,aAAA,EAAApxB,EAAA2yB,YACAxnB,EAAA3P,EAAA2P,sBAEA3P,EAAA+D,OAAAugB,EAAA,CAEAxV,cAAAtK,EAAApD,MACA4P,OAAA5P,EAGA4N,OAAA,CACAvG,EAAAS,EAAA1H,EAAA+1B,QACA7uB,EAAAS,EAAA3H,EAAAg2B,QACAd,aACAC,WACAX,gBACAmB,cACAC,cACA50B,MAAAmN,EAAAtN,EAAAG,MAAApB,EAAAI,EAAAI,KAAAI,OAAAZ,OAIA,IAAAuQ,EAAA2S,EAAAtV,OAGAb,EAAAmW,EAAAnW,QAAA,GACA3H,EAAAxG,EAAA2P,sBACAkoB,EAAAt2B,KAAAC,MAAAuE,QAAAmC,SAAAoc,IACA3S,EAAAjP,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA8D,EAAAnE,EAAAK,gBAAAtB,EAAAy2B,EAAAn1B,iBACAiP,EAAApO,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAiD,EAAAnE,EAAAkB,YAAAnC,EAAAy2B,EAAAt0B,aACAoO,EAAAtO,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAmD,EAAAnE,EAAAgB,YAAAjC,EAAAy2B,EAAAx0B,aAGA6K,GAAAypB,EAAAhC,gBAEAhkB,EAAA+kB,WADA,IAAAt1B,EACAgF,EAAA8J,SAEA1L,EAAA4J,UAAAxM,KAAAR,EAAA,GAAA4N,OAAA2nB,SAGAhlB,EAAAglB,SAAAhlB,EAAA+kB,WAAA/kB,EAAAqkB,eAGA1R,EAAAjV,SAGAqoB,eAAA,WACA,IAGArsB,EAHAhJ,EAAAd,KAAAmN,aACAjN,EAAAF,KAAA6M,UACAqpB,EAAA,EAcA,OAXAz3B,EAAAsH,KAAA7F,EAAAG,KAAA,SAAAqR,EAAA7R,GACAiK,EAAAhJ,EAAAT,KAAAR,GACAuH,MAAA0C,IAAA4H,EAAAtR,SACA81B,GAAAl3B,KAAAuY,IAAAzN,MAQAosB,GAGAG,uBAAA,SAAAvsB,GACA,IAAAosB,EAAAl2B,KAAA6M,UAAAqpB,MACA,OAAAA,EAAA,IAAA9uB,MAAA0C,GACA,EAAA9K,KAAAiZ,IAAAjZ,KAAAuY,IAAAzN,GAAAosB,GAEA,GAIAP,kBAAA,SAAAY,GAOA,IANA,IAGAz0B,EACA00B,EAJAhwB,EAAA,EACA3G,EAAAG,KAAAH,MACAwC,EAAAk0B,EAAAl0B,OAIAtB,EAAA,EAAkBA,EAAAsB,EAAYtB,IAC9Be,EAAAy0B,EAAAx1B,GAAA0M,OAAA8oB,EAAAx1B,GAAA0M,OAAA3L,YAAA,EACA00B,EAAAD,EAAAx1B,GAAAwT,OAAAgiB,EAAAx1B,GAAAwT,OAAA7R,OAAArC,KAAAC,SAAAT,GAAAoS,iBAAA,EAEAzL,EAAA1E,EAAA0E,EAAA1E,EAAA0E,EACAA,EAAAgwB,EAAAhwB,EAAAgwB,EAAAhwB,EAEA,OAAAA,2CCvSA,IAAAlI,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACAwH,SAAA,CACAoc,IAAA,CACA5hB,gBAAA7C,EAAA0G,OAAAsC,aACAtF,YAAA,OACAF,YAAA,MAKAwH,EAAAC,QAAA/K,EAAAgE,OAAA,CACAoV,aAAA,SAAAP,GACA,IAAAC,EAAAtX,KAAA6W,MAEA,QAAAS,GACAtY,KAAA2Y,IAAAN,EAAAC,EAAApQ,EAAA,GAAAlI,KAAA2Y,IAAAL,EAAA7P,OAAA6P,EAAAnF,YAAA,IAKAuF,QAAA,SAAA+e,EAAAC,GACA,IAAApf,EAAAtX,KAAA6W,MAEA,GAAAS,EAAA,CACA,IAAAqf,EAAAl4B,EAAAm4B,kBAAAtf,EAAA,CAA8DpQ,EAAAuvB,EAAAtvB,EAAAuvB,IAC9DvV,EAAAwV,EAAAxV,MACA0V,EAAAF,EAAAE,SAGA1B,EAAA7d,EAAA6d,WACAC,EAAA9d,EAAA8d,SACA,MAAAA,EAAAD,EACAC,GAAA,EAAAp2B,KAAAiZ,GAEA,MAAAkJ,EAAAiU,EACAjU,GAAA,EAAAniB,KAAAiZ,GAEA,MAAAkJ,EAAAgU,EACAhU,GAAA,EAAAniB,KAAAiZ,GAIA,IAAA6e,EAAA3V,GAAAgU,GAAAhU,GAAAiU,EACA2B,EAAAF,GAAAvf,EAAAue,aAAAgB,GAAAvf,EAAAse,YAEA,OAAAkB,GAAAC,EAEA,UAGAhf,eAAA,WACA,IAAAT,EAAAtX,KAAA6W,MACAmgB,GAAA1f,EAAA6d,WAAA7d,EAAA8d,UAAA,EACA6B,GAAA3f,EAAAue,YAAAve,EAAAse,aAAA,EACA,OACA1uB,EAAAoQ,EAAApQ,EAAAlI,KAAAuiB,IAAAyV,GAAAC,EACA9vB,EAAAmQ,EAAAnQ,EAAAnI,KAAAyiB,IAAAuV,GAAAC,IAIAjf,QAAA,WACA,IAAAV,EAAAtX,KAAA6W,MACA,OAAA7X,KAAAiZ,KAAAX,EAAA8d,SAAA9d,EAAA6d,aAAA,EAAAn2B,KAAAiZ,MAAAjZ,KAAA2Y,IAAAL,EAAAse,YAAA,GAAA52B,KAAA2Y,IAAAL,EAAAue,YAAA,KAGA7e,gBAAA,WACA,IAAAM,EAAAtX,KAAA6W,MACAqgB,EAAA5f,EAAA6d,YAAA7d,EAAA8d,SAAA9d,EAAA6d,YAAA,EACAgC,GAAA7f,EAAAse,YAAAte,EAAAue,aAAA,EAAAve,EAAAue,YAEA,OACA3uB,EAAAoQ,EAAApQ,EAAAlI,KAAAuiB,IAAA2V,GAAAC,EACAhwB,EAAAmQ,EAAAnQ,EAAAnI,KAAAyiB,IAAAyV,GAAAC,IAIA1wB,KAAA,WACA,IAAA3B,EAAA9E,KAAAuU,OAAAzP,IACAwS,EAAAtX,KAAA6W,MACAugB,EAAA9f,EAAA6d,WACAkC,EAAA/f,EAAA8d,SAEAtwB,EAAAyD,YAEAzD,EAAAie,IAAAzL,EAAApQ,EAAAoQ,EAAAnQ,EAAAmQ,EAAAse,YAAAwB,EAAAC,GACAvyB,EAAAie,IAAAzL,EAAApQ,EAAAoQ,EAAAnQ,EAAAmQ,EAAAue,YAAAwB,EAAAD,GAAA,GAEAtyB,EAAAud,YACAvd,EAAA/C,YAAAuV,EAAAtV,YACA8C,EAAAjD,UAAAyV,EAAAxV,YAEAgD,EAAA5D,UAAAoW,EAAAnW,gBAEA2D,EAAA4I,OACA5I,EAAAnD,SAAA,QAEA2V,EAAAxV,aACAgD,EAAA4D,iDCrGA,IAAApK,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtBga,EAAmBha,EAAQ,QAC3Bo1B,EAAYp1B,EAAQ,QAEpB+K,EAAAC,QAAA,SAAA2C,GAEA,IAAAgS,EAAA,CACA5e,SAAA,OACAkd,MAAA,CACA9X,SAAAivB,EAAA2D,WAAAC,SAIAC,EAAAtrB,EAAAurB,gBAAAj1B,OAAA,CAEAsc,oBAAA,WACA,IAAA7b,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAvE,EAAAgD,EAAAhD,MACAI,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAuD,EAAAZ,EAAAY,eACA6zB,EAAA,EACAC,EAAA,EAEA,SAAAC,EAAA13B,GACA,OAAA2D,EAAA3D,EAAA4O,UAAA7L,EAAAb,GAAAlC,EAAAgN,UAAAjK,EAAAb,GAIAa,EAAAyN,IAAA,KACAzN,EAAAuD,IAAA,KAEA,IAAAqxB,EAAAhzB,EAAAkL,QAeA,QAdAnF,IAAAitB,GACAp5B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAA+3B,EAAA,CAIA,IAAA33B,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA83B,EAAA13B,SACA0K,IAAA1K,EAAA43B,QACAD,GAAA,MAKAhzB,EAAAkL,SAAA8nB,EAAA,CACA,IAAAE,EAAA,GAEAt5B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAkT,EAAA,CACA9S,EAAA0I,UAEAgC,IAAA/F,EAAAkL,cAAAnF,IAAA1K,EAAA43B,MAAAh4B,EAAA,GACAI,EAAA43B,OACAx1B,KAAA,UAEAsI,IAAAmtB,EAAA/kB,KACA+kB,EAAA/kB,GAAA,CACAglB,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAA/kB,GAAAglB,eACAC,EAAAF,EAAA/kB,GAAAilB,eAEAh4B,EAAAmB,iBAAAtB,IAAA83B,EAAA13B,IACAzB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAwe,EAAAhf,GACA,IAAAiK,GAAA7G,EAAAiN,cAAA2O,GACAzX,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,SAIA43B,EAAAn4B,GAAAm4B,EAAAn4B,IAAA,EACAo4B,EAAAp4B,GAAAo4B,EAAAp4B,IAAA,EAEAgF,EAAAqzB,eACAF,EAAAn4B,GAAA,IACQiK,EAAA,EACRmuB,EAAAp4B,IAAAiK,EAEAkuB,EAAAn4B,IAAAiK,OAMArL,EAAAsH,KAAAgyB,EAAA,SAAAI,GACA,IAAA1sB,EAAA0sB,EAAAH,eAAA5G,OAAA+G,EAAAF,gBACAG,EAAA35B,EAAAiS,IAAAjF,GACA4sB,EAAA55B,EAAA+H,IAAAiF,GACAxI,EAAAyN,IAAA,OAAAzN,EAAAyN,IAAA0nB,EAAAp5B,KAAA0R,IAAAzN,EAAAyN,IAAA0nB,GACAn1B,EAAAuD,IAAA,OAAAvD,EAAAuD,IAAA6xB,EAAAr5B,KAAAwH,IAAAvD,EAAAuD,IAAA6xB,UAIA55B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA83B,EAAA13B,IACAzB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAwe,EAAAhf,GACA,IAAAiK,GAAA7G,EAAAiN,cAAA2O,GACAzX,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,SAIA,OAAA6C,EAAAyN,IACAzN,EAAAyN,IAAA5G,EACQA,EAAA7G,EAAAyN,MACRzN,EAAAyN,IAAA5G,GAGA,OAAA7G,EAAAuD,IACAvD,EAAAuD,IAAAsD,EACQA,EAAA7G,EAAAuD,MACRvD,EAAAuD,IAAAsD,QAOA7G,EAAAyN,IAAAiG,SAAA1T,EAAAyN,OAAAtJ,MAAAnE,EAAAyN,KAAAzN,EAAAyN,IAAAgnB,EACAz0B,EAAAuD,IAAAmQ,SAAA1T,EAAAuD,OAAAY,MAAAnE,EAAAuD,KAAAvD,EAAAuD,IAAAmxB,EAGA33B,KAAAs4B,0BAEAC,aAAA,WACA,IAAAC,EACAv1B,EAAAjD,KACAugB,EAAAtd,EAAAuB,QAAAgY,MAEA,GAAAvZ,EAAAY,eACA20B,EAAAx5B,KAAA0R,IAAA6P,EAAAkY,cAAAlY,EAAAkY,cAAA,GAAAz5B,KAAAod,KAAAnZ,EAAAa,MAAA,SACI,CAEJ,IAAA4d,EAAAjjB,EAAAwG,eAAAsb,EAAAzhB,SAAAR,EAAA0G,OAAAE,iBACAszB,EAAAx5B,KAAA0R,IAAA6P,EAAAkY,cAAAlY,EAAAkY,cAAA,GAAAz5B,KAAAod,KAAAnZ,EAAAgB,QAAA,EAAAyd,KAGA,OAAA8W,GAGAE,yBAAA,WACA14B,KAAA6D,gBAEA7D,KAAAwc,MAAAhd,WAGAqgB,iBAAA,SAAAhgB,EAAAC,GACA,OAAAE,KAAAkQ,cAAAlQ,KAAAC,MAAAI,KAAAC,SAAAR,GAAAO,KAAAR,KAGAsP,iBAAA,SAAArF,GAGA,IAIAiX,EAJA9d,EAAAjD,KACAmV,EAAAlS,EAAAkS,MAEAhF,GAAAlN,EAAAiN,cAAApG,GAEAmR,EAAAhY,EAAAoyB,IAAAlgB,EAOA,OAJA4L,EADA9d,EAAAY,eACAZ,EAAAc,KAAAd,EAAAa,MAAAmX,GAAA9K,EAAAgF,GAEAlS,EAAAkB,OAAAlB,EAAAgB,OAAAgX,GAAA9K,EAAAgF,GAEA4L,GAEAD,iBAAA,SAAAC,GACA,IAAA9d,EAAAjD,KACA6D,EAAAZ,EAAAY,eACA80B,EAAA90B,EAAAZ,EAAAa,MAAAb,EAAAgB,OACAmX,GAAAvX,EAAAkd,EAAA9d,EAAAc,KAAAd,EAAAkB,OAAA4c,GAAA4X,EACA,OAAA11B,EAAAkS,OAAAlS,EAAAoyB,IAAApyB,EAAAkS,OAAAiG,GAEAwF,gBAAA,SAAA/gB,GACA,OAAAG,KAAAmP,iBAAAnP,KAAA44B,eAAA/4B,OAIA0Y,EAAAwJ,kBAAA,SAAAyV,EAAAtZ,uCC5LA,IAAAzf,EAAcF,EAAQ,QACtB+Z,EAAY/Z,EAAQ,QACpBga,EAAmBha,EAAQ,QAC3Bo1B,EAAYp1B,EAAQ,QAQpB,SAAAs6B,EAAAC,EAAAC,GACA,IAWAC,EAAAC,EAXAzc,EAAA,GACAvX,EAAAxG,EAAAwG,eAMAi0B,EAAAj0B,EAAA6zB,EAAApoB,IAAA1R,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAJ,EAAAroB,QAEA0oB,EAAAp6B,KAAA8iB,MAAArjB,EAAA06B,MAAAJ,EAAAvyB,MACA6yB,EAAAr6B,KAAAod,KAAA2c,EAAAvyB,IAAAxH,KAAA2Y,IAAA,GAAAyhB,IAGA,IAAAF,GACAF,EAAAh6B,KAAA8iB,MAAArjB,EAAA06B,MAAAJ,EAAAO,aACAL,EAAAj6B,KAAA8iB,MAAAiX,EAAAO,WAAAt6B,KAAA2Y,IAAA,GAAAqhB,IAEAxc,EAAAra,KAAA+2B,GACAA,EAAAD,EAAAj6B,KAAA2Y,IAAA,GAAAqhB,KAEAA,EAAAh6B,KAAA8iB,MAAArjB,EAAA06B,MAAAD,IACAD,EAAAj6B,KAAA8iB,MAAAoX,EAAAl6B,KAAA2Y,IAAA,GAAAqhB,KAEA,IAAAO,EAAAP,EAAA,EAAAh6B,KAAA2Y,IAAA,GAAA3Y,KAAAuY,IAAAyhB,IAAA,EAEA,GACAxc,EAAAra,KAAA+2B,KAEAD,EACA,KAAAA,IACAA,EAAA,IACAD,EACAO,EAAAP,GAAA,IAAAO,GAGAL,EAAAl6B,KAAAub,MAAA0e,EAAAj6B,KAAA2Y,IAAA,GAAAqhB,GAAAO,WACEP,EAAAI,GAAAJ,IAAAI,GAAAH,EAAAI,GAEF,IAAAG,EAAAv0B,EAAA6zB,EAAAtyB,IAAA0yB,GAGA,OAFA1c,EAAAra,KAAAq3B,GAEAhd,EAIAlT,EAAAC,QAAA,SAAA2C,GAEA,IAAAgS,EAAA,CACA5e,SAAA,OAGAkd,MAAA,CACA9X,SAAAivB,EAAA2D,WAAAmC,cAIAC,EAAAphB,EAAA9V,OAAA,CACAsc,oBAAA,WACA,IAAA7b,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAvE,EAAAgD,EAAAhD,MACAI,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAuD,EAAAZ,EAAAY,eACA,SAAA+zB,EAAA13B,GACA,OAAA2D,EAAA3D,EAAA4O,UAAA7L,EAAAb,GAAAlC,EAAAgN,UAAAjK,EAAAb,GAIAa,EAAAyN,IAAA,KACAzN,EAAAuD,IAAA,KACAvD,EAAAq2B,WAAA,KAEA,IAAAzB,EAAAhzB,EAAAkL,QAeA,QAdAnF,IAAAitB,GACAp5B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAA+3B,EAAA,CAIA,IAAA33B,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA83B,EAAA13B,SACA0K,IAAA1K,EAAA43B,QACAD,GAAA,MAKAhzB,EAAAkL,SAAA8nB,EAAA,CACA,IAAAE,EAAA,GAEAt5B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAkT,EAAA,CACA9S,EAAA0I,UAEAgC,IAAA/F,EAAAkL,cAAAnF,IAAA1K,EAAA43B,MAAAh4B,EAAA,GACAI,EAAA43B,OACAx1B,KAAA,KAEArC,EAAAmB,iBAAAtB,IAAA83B,EAAA13B,UACA0K,IAAAmtB,EAAA/kB,KACA+kB,EAAA/kB,GAAA,IAGAvU,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAwe,EAAAhf,GACA,IAAA4L,EAAAssB,EAAA/kB,GACAlJ,GAAA7G,EAAAiN,cAAA2O,GAEAzX,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,QAAA0J,EAAA,IAGA2B,EAAA5L,GAAA4L,EAAA5L,IAAA,EACA4L,EAAA5L,IAAAiK,QAKArL,EAAAsH,KAAAgyB,EAAA,SAAAI,GACA,GAAAA,EAAA91B,OAAA,GACA,IAAA+1B,EAAA35B,EAAAiS,IAAAynB,GACAE,EAAA55B,EAAA+H,IAAA2xB,GACAl1B,EAAAyN,IAAA,OAAAzN,EAAAyN,IAAA0nB,EAAAp5B,KAAA0R,IAAAzN,EAAAyN,IAAA0nB,GACAn1B,EAAAuD,IAAA,OAAAvD,EAAAuD,IAAA6xB,EAAAr5B,KAAAwH,IAAAvD,EAAAuD,IAAA6xB,WAKA55B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA83B,EAAA13B,IACAzB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAwe,EAAAhf,GACA,IAAAiK,GAAA7G,EAAAiN,cAAA2O,GAEAzX,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,QAAA0J,EAAA,IAIA,OAAA7G,EAAAyN,IACAzN,EAAAyN,IAAA5G,EACQA,EAAA7G,EAAAyN,MACRzN,EAAAyN,IAAA5G,GAGA,OAAA7G,EAAAuD,IACAvD,EAAAuD,IAAAsD,EACQA,EAAA7G,EAAAuD,MACRvD,EAAAuD,IAAAsD,GAGA,IAAAA,IAAA,OAAA7G,EAAAq2B,YAAAxvB,EAAA7G,EAAAq2B,cACAr2B,EAAAq2B,WAAAxvB,QAQA9J,KAAAs4B,0BAEAA,uBAAA,WACA,IAAAr1B,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA+b,EAAA1b,EAAA2X,MACAvX,EAAAxG,EAAAwG,eACAyyB,EAAA,EACAC,EAAA,GAEA10B,EAAAyN,IAAAzL,EAAAsb,EAAA7P,IAAAzN,EAAAyN,KACAzN,EAAAuD,IAAAvB,EAAAsb,EAAA/Z,IAAAvD,EAAAuD,KAEAvD,EAAAyN,MAAAzN,EAAAuD,MACA,IAAAvD,EAAAyN,KAAA,OAAAzN,EAAAyN,KACAzN,EAAAyN,IAAA1R,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAl2B,EAAAyN,MAAA,GACAzN,EAAAuD,IAAAxH,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAl2B,EAAAuD,MAAA,KAEAvD,EAAAyN,IAAAgnB,EACAz0B,EAAAuD,IAAAmxB,IAGA,OAAA10B,EAAAyN,MACAzN,EAAAyN,IAAA1R,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAl2B,EAAAuD,MAAA,IAEA,OAAAvD,EAAAuD,MACAvD,EAAAuD,IAAA,IAAAvD,EAAAyN,IACA1R,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAl2B,EAAAyN,MAAA,GACAinB,GAEA,OAAA10B,EAAAq2B,aACAr2B,EAAAyN,IAAA,EACAzN,EAAAq2B,WAAAr2B,EAAAyN,IACKzN,EAAAuD,IAAA,EACLvD,EAAAq2B,WAAAt6B,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAl2B,EAAAuD,OAEAvD,EAAAq2B,WAAA5B,IAIAnY,WAAA,WACA,IAAAtc,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA+b,EAAA1b,EAAA2X,MACAhd,GAAAyD,EAAAY,eAEAi1B,EAAA,CACApoB,IAAA6P,EAAA7P,IACAlK,IAAA+Z,EAAA/Z,KAEAgW,EAAAvZ,EAAAuZ,MAAAqc,EAAAC,EAAA71B,GAIAA,EAAAuD,IAAA/H,EAAA+H,IAAAgW,GACAvZ,EAAAyN,IAAAjS,EAAAiS,IAAA8L,GAEA+D,EAAA/gB,SACAA,KACAyD,EAAAkS,MAAAlS,EAAAuD,IACAvD,EAAAoyB,IAAApyB,EAAAyN,MAEAzN,EAAAkS,MAAAlS,EAAAyN,IACAzN,EAAAoyB,IAAApyB,EAAAuD,KAEAhH,GACAgd,EAAAhd,WAGAkhB,qBAAA,WACA1gB,KAAA25B,WAAA35B,KAAAwc,MAAApJ,QAEAkF,EAAAjN,UAAAqV,qBAAA1X,KAAAhJ,OAGA6f,iBAAA,SAAAhgB,EAAAC,GACA,OAAAE,KAAAkQ,cAAAlQ,KAAAC,MAAAI,KAAAC,SAAAR,GAAAO,KAAAR,KAEA+gB,gBAAA,SAAA/gB,GACA,OAAAG,KAAAmP,iBAAAnP,KAAA25B,WAAA95B,KAQA+5B,mBAAA,SAAA9vB,GACA,IAAAkvB,EAAAh6B,KAAA8iB,MAAArjB,EAAA06B,MAAArvB,IACAmvB,EAAAj6B,KAAA8iB,MAAAhY,EAAA9K,KAAA2Y,IAAA,GAAAqhB,IAEA,OAAAC,EAAAj6B,KAAA2Y,IAAA,GAAAqhB,IAEA7pB,iBAAA,SAAArF,GACA,IAKA6uB,EAAA5X,EAAA5L,EAAAkgB,EAAAwE,EALA52B,EAAAjD,KACAR,EAAAyD,EAAAuB,QAAAgY,MAAAhd,QACA25B,EAAA16B,EAAA06B,MACAW,EAAA72B,EAAA22B,mBAAA32B,EAAAq2B,YACAle,EAAA,EAmCA,OAhCAtR,GAAA7G,EAAAiN,cAAApG,GACAtK,GACA2V,EAAAlS,EAAAoyB,IACAA,EAAApyB,EAAAkS,MACA0kB,GAAA,IAEA1kB,EAAAlS,EAAAkS,MACAkgB,EAAApyB,EAAAoyB,IACAwE,EAAA,GAEA52B,EAAAY,gBACA80B,EAAA11B,EAAAa,MACAid,EAAAvhB,EAAAyD,EAAAe,MAAAf,EAAAc,OAEA40B,EAAA11B,EAAAgB,OACA41B,IAAA,EACA9Y,EAAAvhB,EAAAyD,EAAAiB,IAAAjB,EAAAkB,QAEA2F,IAAAqL,IACA,IAAAA,IACAiG,EAAA3c,EAAA8mB,kBACAtiB,EAAAuB,QAAAgY,MAAA1d,SACAoN,EAAA5N,SAAA0G,OAAAE,iBAEAyzB,GAAAvd,EACAjG,EAAA2kB,GAEA,IAAAhwB,IACAsR,GAAAud,GAAAQ,EAAA9D,GAAA8D,EAAAhkB,KAAAgkB,EAAArvB,GAAAqvB,EAAAhkB,KAEA4L,GAAA8Y,EAAAze,GAEA2F,GAEAD,iBAAA,SAAAC,GACA,IAIA4X,EAAAxjB,EAAAkgB,EAAAvrB,EAJA7G,EAAAjD,KACAR,EAAAyD,EAAAuB,QAAAgY,MAAAhd,QACA25B,EAAA16B,EAAA06B,MACAW,EAAA72B,EAAA22B,mBAAA32B,EAAAq2B,YAiBA,GAdA95B,GACA2V,EAAAlS,EAAAoyB,IACAA,EAAApyB,EAAAkS,QAEAA,EAAAlS,EAAAkS,MACAkgB,EAAApyB,EAAAoyB,KAEApyB,EAAAY,gBACA80B,EAAA11B,EAAAa,MACAgG,EAAAtK,EAAAyD,EAAAe,MAAA+c,IAAA9d,EAAAc,OAEA40B,EAAA11B,EAAAgB,OACA6F,EAAAtK,EAAAuhB,EAAA9d,EAAAiB,IAAAjB,EAAAkB,OAAA4c,GAEAjX,IAAAqL,EAAA,CACA,OAAAA,EAAA,CACA,IAAAiG,EAAA3c,EAAA8mB,kBACAtiB,EAAAuB,QAAAgY,MAAA1d,SACAoN,EAAA5N,SAAA0G,OAAAE,iBAEA4E,GAAAsR,EACAud,GAAAvd,EACAjG,EAAA2kB,EAEAhwB,GAAAqvB,EAAA9D,GAAA8D,EAAAhkB,GACArL,GAAA6uB,EACA7uB,EAAA9K,KAAA2Y,IAAA,GAAAwhB,EAAAhkB,GAAArL,GAEA,OAAAA,KAIAyO,EAAAwJ,kBAAA,cAAA2X,EAAAxb,wCCzVA,IAAA5f,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAiGtB,SAAAw7B,EAAA/sB,EAAAgtB,GACA,IAEA5f,EAAAC,EAAAtZ,EAAA4J,EAFA+F,EAAA1D,EAAAnJ,eAAAmJ,EAAAlJ,MAAAkJ,EAAA/I,OACAuY,EAAAxP,EAAA6T,WAGA,IAAA9f,EAAA,EAAA4J,EAAAqvB,EAAA33B,OAAkCtB,EAAA4J,IAAU5J,EAC5C2P,EAAA1R,KAAA0R,MAAAspB,EAAAj5B,GAAAi5B,EAAAj5B,EAAA,IAGA,IAAAA,EAAA,EAAA4J,EAAA6R,EAAAna,OAAiCtB,EAAA4J,IAAU5J,EAC3CsZ,EAAArN,EAAA4T,gBAAA7f,GACA2P,EAAA3P,EAAA,EAAA/B,KAAA0R,MAAA2J,EAAAD,GAAA1J,EACA0J,EAAAC,EAGA,OAAA3J,EASA,SAAAupB,EAAAp6B,EAAAq6B,EAAA11B,GACA,IAGAuF,EAAAoR,EAHAgf,EAAA31B,EAAA41B,aACAhlB,EAAA8kB,EAAAG,WACAhgB,EAAA6f,EAAAF,OAAAn6B,GAcA,OAXApB,EAAAkd,cAAAwe,IACApwB,EAAAmwB,EAAAxpB,IAAAlM,EAAA81B,mBACAnf,EAAA3W,EAAA+1B,gBAKAxwB,EAAAowB,EAAA/kB,EACA+F,EAAA,GAGA,CACAqf,MAAAzwB,EAAAqL,EACA+F,QACAhG,MAAAkF,EAAAtQ,EAAA,GAUA,SAAA0wB,EAAA56B,EAAAq6B,EAAA11B,GACA,IAKA2Q,EAAApL,EALAiwB,EAAAE,EAAAF,OACA3f,EAAA2f,EAAAn6B,GACAua,EAAAva,EAAA,EAAAm6B,EAAAn6B,EAAA,QACAsR,EAAAtR,EAAAm6B,EAAA33B,OAAA,EAAA23B,EAAAn6B,EAAA,QACA66B,EAAAl2B,EAAA81B,mBAiBA,OAdA,OAAAlgB,IAGAA,EAAAC,GAAA,OAAAlJ,EAAA+oB,EAAA7E,IAAAhb,EAAAlJ,EAAAkJ,IAGA,OAAAlJ,IAEAA,EAAAkJ,IAAAD,GAGAjF,EAAAkF,KAAAD,GAAA,EAAAsgB,EACA3wB,GAAAoH,EAAAiJ,GAAA,EAAAsgB,EAEA,CACAF,MAAAzwB,EAAAmwB,EAAAG,WACAlf,MAAA3W,EAAA+1B,cACAplB,SA9KA7W,EAAAa,KAAA,OACA0M,MAAA,CACAC,KAAA,SAGAC,OAAA,CACAC,MAAA,EACApD,KAAA,WAGA0xB,mBAAA,GACAC,cAAA,GAGAnf,QAAA,EAGAoW,UAAA,CACAmJ,iBAAA,KAIA1uB,MAAA,EACArD,KAAA,cAKAtK,EAAAa,KAAA,iBACA0M,MAAA,CACAC,KAAA,QACA8uB,KAAA,KAGA7uB,OAAA,CACAC,MAAA,EACApD,KAAA,SACAtJ,SAAA,WAGA2M,MAAA,EACA3M,SAAA,OACAsJ,KAAA,WAGA0xB,mBAAA,GACAC,cAAA,GAGAnf,QAAA,EAGAoW,UAAA,CACAmJ,iBAAA,MAKAh0B,SAAA,CACAk0B,UAAA,CACAC,cAAA,SAIAvJ,SAAA,CACAmD,UAAA,CACAZ,MAAA,SAAAlvB,EAAAvE,GAEA,IAAAyzB,EAAA,GAUA,OARAlvB,EAAAvC,OAAA,IACAuC,EAAA,GAAAm2B,OACAjH,EAAAlvB,EAAA,GAAAm2B,OACM16B,EAAAI,OAAA4B,OAAA,GAAAuC,EAAA,GAAA/E,MAAAQ,EAAAI,OAAA4B,SACNyxB,EAAAzzB,EAAAI,OAAAmE,EAAA,GAAA/E,SAIAi0B,GAGA7yB,MAAA,SAAA2D,EAAAvE,GACA,IAAA26B,EAAA36B,EAAAC,SAAAsE,EAAA9E,cAAAmB,OAAA,GACA,OAAA+5B,EAAA,KAAAp2B,EAAAq2B,SAGAnvB,KAAA,QACA8uB,KAAA,OA2FAtxB,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAAkjB,IAAArjB,EAAAI,kBAAA9J,OAAA,CAEAiK,gBAAA9F,EAAAu0B,UAEAz4B,WAAA,WACA,IACAvC,EADA+C,EAAAjD,KAGAkM,EAAAI,kBAAAjB,UAAA5I,WAAAiR,MAAAzQ,EAAAuQ,WAEAtT,EAAA+C,EAAA4J,UACA3M,EAAA43B,MAAA70B,EAAAkK,aAAA2qB,MACA53B,EAAAqvB,KAAA,GAGAhvB,OAAA,SAAAoM,GACA,IAEA5L,EAAA4J,EAFA1H,EAAAjD,KACAm7B,EAAAl4B,EAAA4J,UAAAxM,KAKA,IAFA4C,EAAAm4B,OAAAn4B,EAAAo4B,WAEAt6B,EAAA,EAAA4J,EAAAwwB,EAAA94B,OAAmCtB,EAAA4J,IAAU5J,EAC7CkC,EAAA8K,cAAAotB,EAAAp6B,KAAA4L,IAIAoB,cAAA,SAAA8sB,EAAAh7B,EAAA8M,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACA/L,EAAAmC,EAAAkK,aACAP,EAAAiuB,EAAAjuB,QAAA,GACA0uB,EAAAr7B,EAAAuE,QAAAmC,SAAAk0B,UAEAA,EAAAtrB,QAAAtM,EAAAgK,cAAA/M,EAAA4O,SACA+rB,EAAArrB,QAAAvM,EAAAgK,cAAA/M,EAAAgN,SACA2tB,EAAAttB,cAAAtK,EAAApD,MACAg7B,EAAAprB,OAAA5P,EAEAg7B,EAAAptB,OAAA,CACAutB,aAAAl6B,EAAAG,MACAA,MAAAhB,EAAAI,KAAAI,OAAAZ,GACAi7B,cAAAluB,EAAAkuB,cAAAluB,EAAAkuB,cAAAQ,EAAAR,cACA35B,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA1C,EAAA2P,sBAAAtN,EAAAK,gBAAAtB,EAAAy7B,EAAAn6B,iBACAa,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAvD,EAAA2P,sBAAAtN,EAAAkB,YAAAnC,EAAAy7B,EAAAt5B,aACAF,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAArD,EAAA2P,sBAAAtN,EAAAgB,YAAAjC,EAAAy7B,EAAAx5B,cAGAmB,EAAAs4B,sBAAAV,EAAAh7B,EAAA8M,GAEAkuB,EAAA/sB,SAMAytB,sBAAA,SAAAV,EAAAh7B,EAAA8M,GACA,IAAA1J,EAAAjD,KACAoQ,EAAAyqB,EAAAptB,OACA+tB,EAAAv4B,EAAAw4B,gBACApoB,EAAAmoB,EAAAnsB,eACAqsB,EAAAF,EAAA33B,eACAq2B,EAAAj3B,EAAAm4B,QAAAn4B,EAAAo4B,WACAM,EAAA14B,EAAA24B,wBAAA34B,EAAApD,SACAg8B,EAAA54B,EAAA64B,wBAAA74B,EAAApD,QAAAq6B,GAEA9pB,EAAAsrB,aACAtrB,EAAAiD,KAAA1G,EAAA0G,EAAAsoB,EAAAtoB,KACAjD,EAAAlJ,EAAAw0B,EAAA/uB,EAAA0G,EAAAsoB,EAAAI,KAAAF,EAAAG,OACA5rB,EAAAjJ,EAAAu0B,EAAAG,EAAAG,OAAArvB,EAAA0G,EAAAsoB,EAAAI,KACA3rB,EAAAnM,OAAAy3B,EAAAG,EAAA9xB,UAAAa,EACAwF,EAAAtM,MAAA43B,OAAA9wB,EAAAixB,EAAA9xB,MAMAkyB,gBAAA,WACA,OAAAj8B,KAAA6M,UAAAK,SAMAgvB,gBAAA,WACA,OAAAl8B,KAAA6M,UAAAiC,SAMA2sB,cAAA,WACA,OAAAz7B,KAAAiN,cAAAjN,KAAAi8B,oBAMAE,cAAA,WACA,OAAAn8B,KAAAiN,cAAAjN,KAAAk8B,oBASAE,WAAA,SAAA5e,GACA,IAMAzc,EAAAb,EANA+C,EAAAjD,KACAC,EAAAgD,EAAAhD,MACA+M,EAAA/J,EAAAk5B,gBACApsB,EAAA/C,EAAAxI,QAAAuL,QACApF,OAAAC,IAAA4S,EAAAvd,EAAAI,KAAAC,SAAA+B,OAAAmb,EAAA,EACA6e,EAAA,GAGA,IAAAt7B,EAAA,EAAcA,EAAA4J,IAAU5J,EACxBb,EAAAD,EAAAE,eAAAY,GACAb,EAAAqvB,KAAAtvB,EAAAmB,iBAAAL,MACA,IAAAgP,IACA,IAAAA,IAAA,IAAAssB,EAAAvoB,QAAA5T,EAAA43B,aACAltB,IAAAmF,SAAAnF,IAAA1K,EAAA43B,QAAA,IAAAuE,EAAAvoB,QAAA5T,EAAA43B,UACAuE,EAAAl6B,KAAAjC,EAAA43B,OAIA,OAAAuE,GAOAC,cAAA,WACA,OAAAt8B,KAAAo8B,aAAA/5B,QAUAk6B,cAAA,SAAAz8B,EAAAswB,GACA,IAAAiM,EAAAr8B,KAAAo8B,WAAAt8B,GACAD,OAAA+K,IAAAwlB,EACAiM,EAAAvoB,QAAAsc,IACA,EAEA,WAAAvwB,EACAw8B,EAAAh6B,OAAA,EACAxC,GAMAw7B,SAAA,WACA,IAQAt6B,EAAA4J,EAAA+F,EARAzN,EAAAjD,KACAgN,EAAA/J,EAAAk5B,gBACA9B,EAAAp3B,EAAAq5B,gBACAx8B,EAAAmD,EAAApD,MACAgE,EAAAmJ,EAAAnJ,eACAsR,EAAAtR,EAAAmJ,EAAAjJ,KAAAiJ,EAAA9I,IACAmxB,EAAAlgB,GAAAtR,EAAAmJ,EAAAlJ,MAAAkJ,EAAA/I,QACA+1B,EAAA,GAGA,IAAAj5B,EAAA,EAAA4J,EAAA1H,EAAA4J,UAAAxM,KAAAgC,OAA+CtB,EAAA4J,IAAU5J,EACzDi5B,EAAA73B,KAAA6K,EAAAmC,iBAAA,KAAApO,EAAAjB,IAOA,OAJA4Q,EAAAjS,EAAAkd,cAAA3O,EAAAxI,QAAA41B,cACAL,EAAA/sB,EAAAgtB,IACA,EAEA,CACAtpB,MACAspB,SACA7kB,QACAkgB,MACAgF,aACArtB,UAQA4uB,wBAAA,SAAA97B,EAAAD,GACA,IASAkB,EAAAy7B,EAAAC,EAAAppB,EAAA0oB,EAAAhyB,EATA9G,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACAG,EAAA/J,EAAAw4B,gBACAn7B,EAAAL,EAAAI,KAAAC,SACAwJ,EAAAkD,EAAAkD,cAAA5P,EAAAR,GAAAO,KAAAR,IACAkQ,EAAA/C,EAAAxI,QAAAuL,QACA+nB,EAAA53B,EAAA43B,MACA3iB,EAAA,EAGA,GAAApF,QAAAnF,IAAAmF,QAAAnF,IAAAktB,EACA,IAAA/2B,EAAA,EAAeA,EAAAjB,IAAkBiB,EACjCy7B,EAAAv8B,EAAAE,eAAAY,GAEAy7B,EAAAjN,KACAiN,EAAA1E,WACA0E,EAAAE,WAAAT,oBAAAjvB,EAAA5K,IACAnC,EAAAmB,iBAAAL,KAEA07B,EAAAzvB,EAAAkD,cAAA5P,EAAAS,GAAAV,KAAAR,KACAiK,EAAA,GAAA2yB,EAAA,GAAA3yB,GAAA,GAAA2yB,EAAA,KACAtnB,GAAAsnB,IAUA,OAJAppB,EAAArG,EAAAmC,iBAAAgG,GACA4mB,EAAA/uB,EAAAmC,iBAAAgG,EAAArL,GACAC,GAAAgyB,EAAA1oB,GAAA,EAEA,CACAtJ,OACAsJ,OACA0oB,OACAC,OAAAD,EAAAhyB,EAAA,IAOA+xB,wBAAA,SAAAh8B,EAAAD,EAAAq6B,GACA,IAAAj3B,EAAAjD,KACAwE,EAAA01B,EAAAltB,MAAAxI,QACAyW,EAAA,SAAAzW,EAAA41B,aACAK,EAAA56B,EAAAq6B,EAAA11B,GACAy1B,EAAAp6B,EAAAq6B,EAAA11B,GAEAm4B,EAAA15B,EAAAs5B,cAAAz8B,EAAAmD,EAAA4J,UAAAirB,OACAkE,EAAA/gB,EAAA9F,MAAA8F,EAAAuf,MAAAmC,EAAA1hB,EAAAuf,MAAA,EACAzwB,EAAA/K,KAAA0R,IACAjS,EAAAwG,eAAAT,EAAAo4B,gBAAAC,KACA5hB,EAAAuf,MAAAvf,EAAAE,OAEA,OACA9H,KAAA2oB,EAAAjyB,EAAA,EACAgyB,KAAAC,EAAAjyB,EAAA,EACAiyB,SACAjyB,SAIAtD,KAAA,WACA,IAAAxD,EAAAjD,KACAC,EAAAgD,EAAAhD,MACA+M,EAAA/J,EAAAw4B,gBACAN,EAAAl4B,EAAA4J,UAAAxM,KACAS,EAAAmC,EAAAkK,aACAxC,EAAAwwB,EAAA94B,OACAtB,EAAA,EAIA,IAFAtC,EAAAoJ,OAAA0J,SAAAtR,EAAA6E,IAAA7E,EAAAsQ,WAESxP,EAAA4J,IAAU5J,EACnBqG,MAAA4F,EAAAkD,cAAApP,EAAAT,KAAAU,MACAo6B,EAAAp6B,GAAA0F,OAIAhI,EAAAoJ,OAAA2J,WAAAvR,EAAA6E,QAIAoH,EAAAG,YAAAujB,cAAA1jB,EAAAG,YAAAkjB,IAAA/sB,OAAA,CAIAy5B,gBAAA,WACA,OAAAj8B,KAAA6M,UAAAiC,SAMAotB,gBAAA,WACA,OAAAl8B,KAAA6M,UAAAK,iDC3dA,IAAA5O,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,SACA6N,MAAA,CACApE,KAAA,gBAEAjC,SAAA,CACAC,KAAA,CACAwG,QAAA,MAKA9D,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAAsjB,MAAAzjB,EAAAI,kBAAA9J,OAAA,CAEA+J,mBAAA5F,EAAA6F,KAEAC,gBAAA9F,EAAA+F,MAEAsH,WAAAvV,EAAAE,KAEA4B,OAAA,SAAAoM,GACA,IAAA1J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAjG,EAAA1G,EAAAY,QACAgM,EAAA5M,EAAAG,KACAuM,EAAAhG,EAAAgG,QAAA,GACA9L,EAAAmC,EAAAkK,aACAJ,EAAA9J,EAAAhD,MAAAuE,QAAAmC,SAAAC,KACAoG,EAAA/J,EAAAhD,MAAA+M,WAGApC,IAAA9J,EAAAsM,cAAAxC,IAAA9J,EAAAuM,cACAvM,EAAAuM,YAAAvM,EAAAsM,SAGA3O,EAAA+D,OAAAtC,EAAAY,QAAA,CAEAyM,cAAAtK,EAAApD,MACAyN,OAAAN,EAEAQ,UAAAV,EACAulB,OAAA,EAEA5kB,OAAA,CAEAL,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAA3O,EAAAwG,eAAAnE,EAAAuM,YAAAN,EAAAK,SACAjM,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAAL,EAAAK,iBAAA4L,EAAA5L,gBACAW,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAhB,EAAAgB,aAAAiL,EAAAjL,YACAE,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAlB,EAAAkB,aAAA+K,EAAA/K,YACA0L,KAAAd,EAAAc,KAAAd,EAAAc,UAAA9C,IAAA9J,EAAA4M,KAAA5M,EAAA4M,KAAAX,EAAAW,KACApM,eAAAsL,EAAAtL,eAAAsL,EAAAtL,eAAAR,EAAAQ,gBAAAyL,EAAAzL,eACAE,WAAAoL,EAAApL,WAAAoL,EAAApL,WAAAV,EAAAU,YAAAuL,EAAAvL,WACAE,iBAAAkL,EAAAlL,iBAAAkL,EAAAlL,iBAAAZ,EAAAY,kBAAAqL,EAAArL,iBACAE,gBAAAgL,EAAAhL,gBAAAgL,EAAAhL,gBAAAd,EAAAc,iBAAAmL,EAAAnL,mBAIA1B,EAAAY,QAAAgN,QAGArP,EAAAsH,KAAA+G,EAAA,SAAAoB,EAAArO,GACAoD,EAAA8K,cAAAG,EAAArO,EAAA8M,IACI1J,GAGJA,EAAA+K,6BAEAD,cAAA,SAAAG,EAAArO,EAAA8M,GACA,IAAA1J,EAAAjD,KACA4M,EAAAsB,EAAAtB,QAAA,GACA9L,EAAAmC,EAAAkK,aACAH,EAAA/J,EAAAhD,MAAA+M,MACA8vB,EAAA75B,EAAAhD,MAAAuE,QAAAmC,SAAAuH,MACA6uB,EAAA/vB,EAAAgwB,yBAAAn9B,EAAAiB,EAAAT,KAAAR,SAGA+K,IAAA9J,EAAA2G,aAAAmD,IAAA9J,EAAAkO,cACAlO,EAAAkO,YAAAlO,EAAA2G,aAEAmD,IAAA9J,EAAAmO,gBAAArE,IAAA9J,EAAAoO,iBACApO,EAAAoO,eAAApO,EAAAmO,WAGAxQ,EAAA+D,OAAA0L,EAAA,CAEAX,cAAAtK,EAAApD,MACA4P,OAAA5P,EACAyN,OAAAN,EAGAS,OAAA,CACAvG,EAAAyF,EAAAK,EAAAiwB,QAAAF,EAAA71B,EACAC,EAAAwF,EAAAK,EAAAkwB,QAAAH,EAAA51B,EAGAiG,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAA3O,EAAAwG,eAAAnE,EAAAuM,YAAApK,EAAAhD,MAAAuE,QAAAmC,SAAAC,KAAAwG,SACA3F,OAAAmF,EAAAnF,OAAAmF,EAAAnF,OAAAhJ,EAAA2P,sBAAAtN,EAAAkO,YAAAnP,EAAAi9B,EAAAr1B,QACAtG,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA1C,EAAA2P,sBAAAtN,EAAAqN,qBAAAtO,EAAAi9B,EAAA37B,iBACAa,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAvD,EAAA2P,sBAAAtN,EAAAwN,iBAAAzO,EAAAi9B,EAAA96B,aACAF,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAArD,EAAA2P,sBAAAtN,EAAA0N,iBAAA3O,EAAAi9B,EAAAh7B,aACAG,WAAA2K,EAAA3K,WAAA2K,EAAA3K,WAAAxD,EAAA2P,sBAAAtN,EAAAmB,WAAApC,EAAAi9B,EAAA76B,YACA0M,SAAA/B,EAAA+B,SAAA/B,EAAA+B,SAAAlQ,EAAA2P,sBAAAtN,EAAA4N,cAAA7O,EAAAi9B,EAAAnuB,UAGAM,UAAArC,EAAAqC,UAAArC,EAAAqC,UAAAxQ,EAAA2P,sBAAAtN,EAAAoO,eAAArP,EAAAi9B,EAAA7tB,cAIAf,EAAAT,OAAAiC,KAAA9C,EAAA8C,KAAA9C,EAAA8C,KAAAtI,MAAA8G,EAAAT,OAAAvG,IAAAE,MAAA8G,EAAAT,OAAAtG,IAEA6G,0BAAA,WACA,IAAAuC,EAAAvQ,KAAAC,MAAAsQ,UACArQ,EAAAF,KAAA6M,UAEApO,EAAAsH,KAAA7F,EAAAG,KAAA,SAAA6N,EAAArO,GACA,IAAAuQ,EAAAlC,EAAAT,OACA4C,EAAA5R,EAAAmS,YACAnS,EAAAoS,aAAA3Q,EAAAG,KAAAR,GAAA,GAAA4N,OACA2C,EACA3R,EAAAqS,SAAA5Q,EAAAG,KAAAR,GAAA,GAAA4N,OACA2C,EAAAhD,SAIAgD,EAAAW,sBAAA/R,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAW,SAAA9J,EAAAqJ,EAAAvM,OAAAuM,EAAAxM,MACAqM,EAAAa,sBAAAjS,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAW,SAAA7J,EAAAoJ,EAAApM,QAAAoM,EAAArM,KAEAkM,EAAAc,kBAAAlS,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAc,KAAAjK,EAAAqJ,EAAAvM,OAAAuM,EAAAxM,MACAqM,EAAAgB,kBAAApS,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAc,KAAAhK,EAAAoJ,EAAApM,QAAAoM,EAAArM,KAGAgK,EAAAJ,WAIA2D,cAAA,SAAAvD,GAEA,IAAApN,EAAAd,KAAAC,MAAAI,KAAAC,SAAA4N,EAAAX,eACAX,EAAAsB,EAAAtB,QAAA,GACA/M,EAAAqO,EAAAuB,OACAW,EAAAlC,EAAAT,OAEAS,EAAAyD,eAAA,CACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,YACA2F,OAAA2I,EAAA3I,QAGA2I,EAAA3I,OAAAmF,EAAAuF,YAAAvF,EAAAuF,YAAA1T,EAAA2P,sBAAAtN,EAAAsR,iBAAAvS,EAAAG,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAiE,aACA/B,EAAAjP,gBAAAyL,EAAAgF,qBAAAhF,EAAAgF,qBAAAnT,EAAA2P,sBAAAtN,EAAA+Q,0BAAAhS,EAAApB,EAAAqT,cAAA1B,EAAAjP,kBACAiP,EAAApO,YAAA4K,EAAAmF,iBAAAnF,EAAAmF,iBAAAtT,EAAA2P,sBAAAtN,EAAAkR,sBAAAnS,EAAApB,EAAAqT,cAAA1B,EAAApO,cACAoO,EAAAtO,YAAA8K,EAAAqF,iBAAArF,EAAAqF,iBAAAxT,EAAA2P,sBAAAtN,EAAAoR,sBAAArS,EAAAuQ,EAAAtO,sDC7JA,IAAAxD,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACA0M,MAAA,CACAC,KAAA,UAGAC,OAAA,CACAC,MAAA,EACApD,KAAA,SACAtJ,SAAA,SACA8C,GAAA,aAEA6J,MAAA,EACArD,KAAA,SACAtJ,SAAA,OACA8C,GAAA,cAIAmvB,SAAA,CACAmD,UAAA,CACAZ,MAAA,WAEA,UAEA7yB,MAAA,SAAA2D,EAAAvE,GACA,IAAA26B,EAAA36B,EAAAC,SAAAsE,EAAA9E,cAAAmB,OAAA,GACAk8B,EAAA98B,EAAAC,SAAAsE,EAAA9E,cAAAO,KAAAuE,EAAA/E,OACA,OAAAm7B,EAAA,MAAAp2B,EAAAq2B,OAAA,KAAAr2B,EAAAm2B,OAAA,KAAAoC,EAAA/yB,EAAA,SAOAd,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAA+wB,OAAAlxB,EAAAI,kBAAA9J,OAAA,CAIAiK,gBAAA9F,EAAA+F,MAKAnM,OAAA,SAAAoM,GACA,IAAA1J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAC,EAAA5M,EAAAG,KAGA5B,EAAAsH,KAAA+G,EAAA,SAAAoB,EAAArO,GACAoD,EAAA8K,cAAAG,EAAArO,EAAA8M,MAOAoB,cAAA,SAAAG,EAAArO,EAAA8M,GACA,IAAA1J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAD,EAAAsB,EAAAtB,QAAA,GACAiC,EAAA5L,EAAAgK,cAAA/M,EAAA4O,SACAF,EAAA3L,EAAAgK,cAAA/M,EAAAgN,SACA1I,EAAAvB,EAAAo6B,uBAAAnvB,EAAArO,GACAQ,EAAA4C,EAAAkK,aAAA9M,KAAAR,GACAy9B,EAAAr6B,EAAApD,MAEAqH,EAAAyF,EAAAkC,EAAA0uB,mBAAA,IAAA1uB,EAAAM,iBAAA,kBAAA9O,IAAA+O,IAAAvP,EAAAy9B,GACAn2B,EAAAwF,EAAAiC,EAAAS,eAAAT,EAAAO,iBAAA9O,EAAAR,EAAAy9B,GAEApvB,EAAAqB,QAAAV,EACAX,EAAAsB,QAAAZ,EACAV,EAAAsvB,SAAAh5B,EACA0J,EAAAX,cAAA+vB,EACApvB,EAAAuB,OAAA5P,EACAqO,EAAAT,OAAA,CACAtM,gBAAAqD,EAAArD,gBACAa,YAAAwC,EAAAxC,YACAF,YAAA0C,EAAA1C,YACAmN,UAAAzK,EAAAyK,UACAhN,WAAAuC,EAAAvC,WACA0M,SAAAnK,EAAAmK,SACAlH,OAAAkF,EAAA,EAAAnI,EAAAiD,OACAiI,KAAA9C,EAAA8C,MAAAtI,MAAAF,IAAAE,MAAAD,GACAD,IACAC,KAGA+G,EAAAJ,SAMA2D,cAAA,SAAAvD,GACA,IAAAkC,EAAAlC,EAAAT,OACAjJ,EAAA0J,EAAAsvB,SACAtvB,EAAAyD,eAAA,CACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,YACA2F,OAAA2I,EAAA3I,QAEA2I,EAAAjP,gBAAA1C,EAAAwG,eAAAT,EAAAoN,qBAAAnT,EAAAqT,cAAAtN,EAAArD,kBACAiP,EAAApO,YAAAvD,EAAAwG,eAAAT,EAAAuN,iBAAAtT,EAAAqT,cAAAtN,EAAAxC,cACAoO,EAAAtO,YAAArD,EAAAwG,eAAAT,EAAAyN,iBAAAzN,EAAA1C,aACAsO,EAAA3I,OAAAjD,EAAAiD,OAAAjD,EAAA2N,aAMAkrB,uBAAA,SAAAnvB,EAAArO,GACA,IASAkB,EAAA4J,EAAAqI,EATA/P,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAK,EAAAL,EAAAI,KAAAC,SACAQ,EAAAR,EAAA2C,EAAApD,OACA+M,EAAAsB,EAAAtB,QAAA,GACApI,EAAAvE,EAAAuE,QAAAmC,SAAAuH,MACA1D,EAAA/L,EAAA+F,QAAAgG,QACAnK,EAAAS,EAAAT,KAAAR,GACA4L,EAAA,GAIAf,EAAA,CACAzK,QACAw9B,UAAA59B,EACAiB,UACAhB,aAAAmD,EAAApD,OAGAyW,EAAA,CACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAvV,EAAA,EAAA4J,EAAA2L,EAAAjU,OAAkCtB,EAAA4J,IAAU5J,EAC5CiS,EAAAsD,EAAAvV,GACA0K,EAAAuH,GAAAxI,EAAA,CACAoC,EAAAoG,GACAlS,EAAAkS,GACAxO,EAAAwO,IACAtI,EAAA7K,GAUA,OANA4L,EAAAhE,OAAA+C,EAAA,CACAoC,EAAAnF,OACApH,IAAA+J,OAAAQ,EACA9J,EAAA2G,OACAjD,EAAAiD,QACAiD,EAAA7K,GACA4L,2CCvKA,IAAAnN,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtBo1B,EAAYp1B,EAAQ,QA8DpB,SAAAm/B,EAAAlhB,GACA,IACAzb,EAAA4J,EADAlK,EAAA,GAGA,IAAAM,EAAA,EAAA4J,EAAA6R,EAAAna,OAAiCtB,EAAA4J,IAAU5J,EAC3CN,EAAA0B,KAAAqa,EAAAzb,GAAAE,OAGA,OAAAR,EAGA,SAAAk9B,EAAA3wB,EAAAnN,EAAA86B,GACA,IAAAiD,EAAA5wB,EAAA4T,gBAAA/gB,GASA,OAPA86B,IAEAiD,GADA,IAAA/9B,GACAmN,EAAA4T,gBAAA,GAAAgd,GAAA,GAEAA,EAAA5wB,EAAA4T,gBAAA/gB,EAAA,OAGA+9B,EAGA,SAAAC,EAAAnzB,EAAAsV,EAAAta,GACA,OAAAjH,EAAAmC,QAAAof,GACAvhB,EAAAq/B,YAAApzB,EAAAhF,EAAAsa,GACAtV,EAAA1E,YAAAga,GAAAlc,MAGA,SAAAi6B,EAAAv5B,GACA,IAAAS,EAAAxG,EAAAwG,eACA+sB,EAAA1zB,EAAA0G,OACA+E,EAAA9E,EAAAT,EAAA1F,SAAAkzB,EAAA9sB,iBACAqd,EAAAtd,EAAAT,EAAAW,UAAA6sB,EAAA5sB,kBACA44B,EAAA/4B,EAAAT,EAAAa,WAAA2sB,EAAA1sB,mBAEA,OACAyE,OACAwY,QACAyb,SACAt4B,KAAAjH,EAAA+G,WAAAuE,EAAAwY,EAAAyb,IAIA,SAAAC,EAAAz5B,GACA,OAAA/F,EAAA+F,QAAAqF,aACApL,EAAAwG,eAAAT,EAAA05B,WAAA,KACAz/B,EAAAwG,eAAAT,EAAA1F,SAAAR,EAAA0G,OAAAE,kBA5GA5G,EAAAa,KAAA,SACAE,SAAA,EACAC,SAAA,OACA8b,QAAA,EAGAoW,UAAA,CACAnyB,SAAA,EACAwW,MAAA,qBACAhU,UAAA,EACAs8B,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACA/D,iBAAA,EACAn5B,WAAA,GACAE,iBAAA,GAIAi9B,WAAA,CAEAt/B,SAAA,EAGAu/B,YAAA,GAGAV,WAAA,IAGAx9B,QAAA,CACAwD,IAAA,EACAC,OAAA,IAKAqY,MAAA,CACAqiB,aAAA,EACAC,YAAA,EACAzd,YAAA,GACA0d,QAAA,EACAr+B,QAAA,EACAlB,SAAA,EACAH,SAAA,EACAif,UAAA,EACA0gB,gBAAA,EACAC,YAAA,EAEAv6B,SAAAivB,EAAA2D,WAAA7rB,OACAsR,MAAA,GACAC,MAAA,MAuDA1T,EAAAC,QAAA/K,EAAAgE,OAAA,CAOA08B,WAAA,WACA,IAAAj8B,EAAAjD,KACA,OACA+D,KAAAd,EAAAmB,aAAA,EACAF,IAAAjB,EAAAoB,YAAA,EACAL,MAAAf,EAAAqB,cAAA,EACAH,OAAAlB,EAAAsB,eAAA,IAQAsc,SAAA,WACA,OAAA7gB,KAAAm/B,QAOAzgB,kBAAA,WACA,IAAAlC,EAAAxc,KAAAwE,QAAAgY,MAWA,QAAAxJ,KAVA,IAAAwJ,EAAAO,QACAP,EAAAO,MAAA,CACA1d,SAAA,KAGA,IAAAmd,EAAAQ,QACAR,EAAAQ,MAAA,CACA3d,SAAA,IAGAmd,EACA,UAAAxJ,GAAA,UAAAA,IACA,qBAAAwJ,EAAAO,MAAA/J,KACAwJ,EAAAO,MAAA/J,GAAAwJ,EAAAxJ,IAEA,qBAAAwJ,EAAAQ,MAAAhK,KACAwJ,EAAAQ,MAAAhK,GAAAwJ,EAAAxJ,MAKAnQ,aAAA,WACApE,EAAAiG,SAAA1E,KAAAwE,QAAA3B,aAAA,CAAA7C,QAGAO,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IACAjC,EAAA4J,EAAAlK,EAAAQ,EAAAub,EAAAwD,EADA/c,EAAAjD,KAwDA,IApDAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,QAAAvE,EAAA+D,OAAA,CACAuB,KAAA,EACAC,MAAA,EACAE,IAAA,EACAC,OAAA,GACGnB,GACHC,EAAAm8B,iBAAAn8B,EAAAm8B,kBAAA,GAGAn8B,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAGAH,EAAAo8B,mBACAp8B,EAAA6b,sBACA7b,EAAAq8B,kBASAr8B,EAAAs8B,mBAIA/iB,EAAAvZ,EAAAsc,cAAA,GAEAtc,EAAAu8B,kBAEAv8B,EAAAw8B,8BAKAh/B,EAAAwC,EAAAyd,qBAAAlE,IAAAvZ,EAAAuZ,MAEAvZ,EAAAy8B,6BAEAz8B,EAAAuZ,MAAA/b,EAKAM,EAAA,EAAA4J,EAAAlK,EAAA4B,OAAmCtB,EAAA4J,IAAU5J,EAC7CE,EAAAR,EAAAM,GACAif,EAAAxD,EAAAzb,GACAif,EAMAA,EAAA/e,QALAub,EAAAra,KAAA6d,EAAA,CACA/e,QACA+b,OAAA,IAoBA,OAbA/Z,EAAAk8B,OAAA3iB,EAGAvZ,EAAA08B,8BACA18B,EAAA28B,wBACA38B,EAAA48B,6BAEA58B,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAGAD,YAAA,WACAlF,EAAAiG,SAAA1E,KAAAwE,QAAAb,YAAA,CAAA3D,QAKAkD,oBAAA,WACAzE,EAAAiG,SAAA1E,KAAAwE,QAAAtB,oBAAA,CAAAlD,QAEAmD,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,GAEAnB,mBAAA,WACA3E,EAAAiG,SAAA1E,KAAAwE,QAAApB,mBAAA,CAAApD,QAIAq/B,iBAAA,WACA5gC,EAAAiG,SAAA1E,KAAAwE,QAAA66B,iBAAA,CAAAr/B,QAEA8e,oBAAArgB,EAAAE,KACA2gC,gBAAA,WACA7gC,EAAAiG,SAAA1E,KAAAwE,QAAA86B,gBAAA,CAAAt/B,QAIAu/B,iBAAA,WACA9gC,EAAAiG,SAAA1E,KAAAwE,QAAA+6B,iBAAA,CAAAv/B,QAEAuf,WAAA9gB,EAAAE,KACA6gC,gBAAA,WACA/gC,EAAAiG,SAAA1E,KAAAwE,QAAAg7B,gBAAA,CAAAx/B,QAGAy/B,4BAAA,WACAhhC,EAAAiG,SAAA1E,KAAAwE,QAAAi7B,4BAAA,CAAAz/B,QAEA0gB,qBAAA,WACA,IAAAzd,EAAAjD,KAEAugB,EAAAtd,EAAAuB,QAAAgY,MACAvZ,EAAAuZ,MAAAvZ,EAAAuZ,MAAA3b,IAAA0f,EAAAE,cAAAF,EAAA7b,SAAA1E,OAEA0/B,2BAAA,WACAjhC,EAAAiG,SAAA1E,KAAAwE,QAAAk7B,2BAAA,CAAA1/B,QAKA2/B,4BAAA,WACAlhC,EAAAiG,SAAA1E,KAAAwE,QAAAm7B,4BAAA,CAAA3/B,QAEA4/B,sBAAA,WACA,IAAA38B,EAAAjD,KACA0K,EAAAzH,EAAA6B,IACAyb,EAAAtd,EAAAuB,QAAAgY,MACA/b,EAAAi9B,EAAAz6B,EAAAk8B,QAIAW,EAAA/B,EAAAxd,GACA7V,EAAAhF,KAAAo6B,EAAAp6B,KAEA,IAAAq6B,EAAAxf,EAAAue,aAAA,EAEA,GAAAr+B,EAAA4B,QAAAY,EAAAuB,QAAAnF,SAAA4D,EAAAY,eAAA,CACA,IAEAyd,EAAAE,EAFAwe,EAAAvhC,EAAAq/B,YAAApzB,EAAAo1B,EAAAp6B,KAAAjF,EAAAwC,EAAAm8B,kBACAa,EAAAD,EAIAE,EAAAj9B,EAAA2d,gBAAA,GAAA3d,EAAA2d,gBAAA,KAGA,MAAAqf,EAAAC,GAAAH,EAAAxf,EAAAc,YAAA,CACA,IAAA8e,EAAA1hC,EAAA2iB,UAAA2e,GAIA,GAHAze,EAAAtiB,KAAAuiB,IAAA4e,GACA3e,EAAAxiB,KAAAyiB,IAAA0e,GAEA3e,EAAAwe,EAAA/8B,EAAAF,UAAA,CAEAg9B,IACA,MAGAA,IACAE,EAAA3e,EAAA0e,GAIA/8B,EAAA88B,iBAEAF,2BAAA,WACAphC,EAAAiG,SAAA1E,KAAAwE,QAAAq7B,2BAAA,CAAA7/B,QAKAwD,UAAA,WACA/E,EAAAiG,SAAA1E,KAAAwE,QAAAhB,UAAA,CAAAxD,QAEAyD,IAAA,WACA,IAAAR,EAAAjD,KAEA4D,EAAAX,EAAAW,QAAA,CACAE,MAAA,EACAG,OAAA,GAGAxD,EAAAi9B,EAAAz6B,EAAAk8B,QAEAt6B,EAAA5B,EAAAuB,QACA+b,EAAA1b,EAAA2X,MACA4jB,EAAAv7B,EAAA85B,WACA0B,EAAAx7B,EAAA2sB,UACAnyB,EAAAwF,EAAAxF,QACAwE,EAAAZ,EAAAY,eAEAi8B,EAAA/B,EAAAxd,GACA+d,EAAAz5B,EAAA2sB,UAAA8M,eAkBA,GAbA16B,EAAAE,MAFAD,EAEAZ,EAAAq9B,cAAAr9B,EAAAH,SAAAG,EAAAD,QAAAe,KAAAd,EAAAD,QAAAgB,MAAAf,EAAAH,SAEAzD,GAAAghC,EAAAhC,UAAAC,EAAA,EAKA16B,EAAAK,OADAJ,EACAxE,GAAAghC,EAAAhC,UAAAC,EAAA,EAEAr7B,EAAAF,UAIAq9B,EAAA/gC,WAAA,CACA,IAAAkhC,EAAAtC,EAAAmC,GACAI,EAAA/hC,EAAA+F,QAAA0F,UAAAk2B,EAAA1/B,SACA+/B,EAAAF,EAAAC,EAAAv8B,OAEAJ,EACAD,EAAAK,QAAAw8B,EAEA78B,EAAAE,OAAA28B,EAKA,GAAAlgB,EAAAlhB,WAAA,CACA,IAAAqhC,EAAAjiC,EAAAq/B,YAAA76B,EAAA6B,IAAAg7B,EAAAp6B,KAAAjF,EAAAwC,EAAAm8B,kBACAuB,EAAAliC,EAAAmiC,mBAAAngC,GACAogC,EAAA,GAAAf,EAAA/1B,KACA+2B,EAAA79B,EAAAuB,QAAAgY,MAAA9b,QAEA,GAAAmD,EAAA,CAEAZ,EAAA89B,kBAAAL,EAEA,IAAAP,EAAA1hC,EAAA2iB,UAAAne,EAAA88B,eACAze,EAAAtiB,KAAAuiB,IAAA4e,GACA3e,EAAAxiB,KAAAyiB,IAAA0e,GAGAa,EAAAxf,EAAAkf,EACAZ,EAAA/1B,KAAA42B,EACAE,GAAAF,EAAA,GACAE,EAEAj9B,EAAAK,OAAAjF,KAAA0R,IAAAzN,EAAAF,UAAAa,EAAAK,OAAA+8B,EAAAF,GAEA79B,EAAA6B,IAAAY,KAAAo6B,EAAAp6B,KACA,IAAAu7B,EAAApD,EAAA56B,EAAA6B,IAAArE,EAAA,GAAAq/B,EAAAp6B,MACAw7B,EAAArD,EAAA56B,EAAA6B,IAAArE,IAAA4B,OAAA,GAAAy9B,EAAAp6B,MAIA,IAAAzC,EAAA88B,eACA98B,EAAAmB,YAAA,WAAAS,EAAAvF,SAAAgiB,EAAA2f,EAAA,EAAA3f,EAAAuf,EAAA,EACA59B,EAAAqB,aAAA,WAAAO,EAAAvF,SAAAgiB,EAAAuf,EAAA,EAAAvf,EAAA4f,EAAA,IAEAj+B,EAAAmB,YAAA68B,EAAA,IACAh+B,EAAAqB,aAAA48B,EAAA,UAKA3gB,EAAAwe,OACA2B,EAAA,EAIAA,GAAAI,EAAAD,EAGAj9B,EAAAE,MAAA9E,KAAA0R,IAAAzN,EAAAH,SAAAc,EAAAE,MAAA48B,GAEAz9B,EAAAoB,WAAAy7B,EAAA/1B,KAAA,EACA9G,EAAAsB,cAAAu7B,EAAA/1B,KAAA,EAIA9G,EAAAk+B,gBAEAl+B,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAOAk9B,cAAA,WACA,IAAAl+B,EAAAjD,KACAiD,EAAAD,UACAC,EAAAmB,YAAApF,KAAAwH,IAAAvD,EAAAmB,YAAAnB,EAAAD,QAAAe,KAAA,GACAd,EAAAoB,WAAArF,KAAAwH,IAAAvD,EAAAoB,WAAApB,EAAAD,QAAAkB,IAAA,GACAjB,EAAAqB,aAAAtF,KAAAwH,IAAAvD,EAAAqB,aAAArB,EAAAD,QAAAgB,MAAA,GACAf,EAAAsB,cAAAvF,KAAAwH,IAAAvD,EAAAsB,cAAAtB,EAAAD,QAAAmB,OAAA,KAIAT,SAAA,WACAjF,EAAAiG,SAAA1E,KAAAwE,QAAAd,SAAA,CAAA1D,QAIA6D,aAAA,WACA,cAAA7D,KAAAwE,QAAAlF,UAAA,WAAAU,KAAAwE,QAAAlF,UAEAghC,YAAA,WACA,OAAAtgC,KAAAwE,QAAA,WAIA0L,cAAA,SAAA2O,GAEA,GAAApgB,EAAAkd,cAAAkD,GACA,OAAAzP,IAGA,qBAAAyP,IAAAlI,SAAAkI,GACA,OAAAzP,IAGA,GAAAyP,EACA,GAAA7e,KAAA6D,gBACA,QAAA+G,IAAAiU,EAAA3X,EACA,OAAAlH,KAAAkQ,cAAA2O,EAAA3X,QAEI,QAAA0D,IAAAiU,EAAA1X,EACJ,OAAAnH,KAAAkQ,cAAA2O,EAAA1X,GAKA,OAAA0X,GAQAgB,iBAAAphB,EAAAE,KASAwQ,iBAAA1Q,EAAAE,KAOAmiB,iBAAAriB,EAAAE,KAMAiiB,gBAAA,SAAA/gB,GACA,IAAAoD,EAAAjD,KACAob,EAAAnY,EAAAuB,QAAA4W,OACA,GAAAnY,EAAAY,eAAA,CACA,IAAAge,EAAA5e,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,cACA47B,EAAAre,EAAA7iB,KAAAwH,IAAAvD,EAAAk8B,OAAA98B,QAAA+Y,EAAA,QACA2F,EAAAmf,EAAArgC,EAAAoD,EAAAmB,YAEAgX,IACA2F,GAAAmf,EAAA,GAGA,IAAAkB,EAAAn+B,EAAAc,KAAA/E,KAAAub,MAAAwG,GAEA,OADAqgB,GAAAn+B,EAAAq9B,cAAAr9B,EAAAD,QAAAe,KAAA,EACAq9B,EAEA,IAAAC,EAAAp+B,EAAAgB,QAAAhB,EAAAoB,WAAApB,EAAAsB,eACA,OAAAtB,EAAAiB,IAAArE,GAAAwhC,GAAAp+B,EAAAk8B,OAAA98B,OAAA,KAOAk7B,mBAAA,SAAA+D,GACA,IAAAr+B,EAAAjD,KACA,GAAAiD,EAAAY,eAAA,CACA,IAAAge,EAAA5e,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,cACAi9B,EAAA1f,EAAAyf,EAAAr+B,EAAAmB,YAEAg9B,EAAAn+B,EAAAc,KAAA/E,KAAAub,MAAAgnB,GAEA,OADAH,GAAAn+B,EAAAq9B,cAAAr9B,EAAAD,QAAAe,KAAA,EACAq9B,EAEA,OAAAn+B,EAAAiB,IAAAo9B,EAAAr+B,EAAAgB,QAOAoL,aAAA,WACA,OAAArP,KAAAmP,iBAAAnP,KAAAwhC,iBAGAA,aAAA,WACA,IAAAv+B,EAAAjD,KACA0Q,EAAAzN,EAAAyN,IACAlK,EAAAvD,EAAAuD,IAEA,OAAAvD,EAAA47B,YAAA,EACAnuB,EAAA,GAAAlK,EAAA,EAAAA,EACAkK,EAAA,GAAAlK,EAAA,EAAAkK,EACA,GAOA+wB,UAAA,SAAAjlB,GACA,IAAAklB,EASA3gC,EAAAif,EAAA2hB,EAGAnJ,EAXAv1B,EAAAjD,KACA6D,EAAAZ,EAAAY,eACA+9B,EAAA3+B,EAAAuB,QAAAgY,MAAAO,MACA8kB,EAAArlB,EAAAna,OACAy/B,EAAArjC,EAAA2iB,UAAAne,EAAA88B,eACAze,EAAAtiB,KAAAuiB,IAAAugB,GACAC,EAAA9+B,EAAA89B,kBAAAzf,EACA0gB,EAAA,GAuBA,IAlBAJ,EAAAnJ,gBACAD,EAAAoJ,EAAAnJ,eAGA50B,IACA69B,GAAA,GAEAK,EAAAH,EAAA5C,iBAAA6C,EAAA5+B,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,gBACAo9B,EAAA,EAAA1iC,KAAA8iB,OAAAigB,EAAAH,EAAA5C,iBAAA6C,GAAA5+B,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,iBAKAk0B,GAAAqJ,EAAArJ,IACAkJ,EAAA1iC,KAAAwH,IAAAk7B,EAAA1iC,KAAA8iB,MAAA+f,EAAArJ,MAIAz3B,EAAA,EAAaA,EAAA8gC,EAAe9gC,IAC5Bif,EAAAxD,EAAAzb,GAGA4gC,EAAAD,EAAA,GAAA3gC,EAAA2gC,EAAA,GAAA3gC,EAAA2gC,IAAA,GAAA3gC,EAAA2gC,GAAAG,EACAF,GAAA5gC,IAAA8gC,EAAA,UAEA7hB,EAAA/e,MAEA+gC,EAAA7/B,KAAA6d,GAEA,OAAAgiB,GAKAv7B,KAAA,SAAA8J,GACA,IAAAtN,EAAAjD,KACAwE,EAAAvB,EAAAuB,QACA,GAAAA,EAAAnF,QAAA,CAIA,IAAAqL,EAAAzH,EAAA6B,IACAktB,EAAA1zB,EAAA0G,OACA48B,EAAAp9B,EAAAgY,MAAAO,MACAklB,EAAAz9B,EAAAgY,MAAAQ,OAAA4kB,EACApQ,EAAAhtB,EAAAgtB,UACAmN,EAAAn6B,EAAAm6B,WAEAuD,EAAA,IAAAj/B,EAAA88B,cACAl8B,EAAAZ,EAAAY,eAEA2Y,EAAAolB,EAAAtjB,SAAArb,EAAAw+B,UAAAx+B,EAAA4d,YAAA5d,EAAA4d,WACAshB,EAAA1jC,EAAAwG,eAAA28B,EAAA76B,UAAAirB,EAAAhrB,kBACA84B,EAAA/B,EAAA6D,GACAQ,EAAA3jC,EAAAwG,eAAAg9B,EAAAl7B,UAAAirB,EAAAhrB,kBACAq7B,EAAAtE,EAAAkE,GAEAK,EAAA9Q,EAAA6M,UAAA7M,EAAA8M,eAAA,EAEAiE,EAAA9jC,EAAAwG,eAAA05B,EAAA53B,UAAAirB,EAAAhrB,kBACAw7B,EAAAzE,EAAAY,GACA6B,EAAA/hC,EAAA+F,QAAA0F,UAAAy0B,EAAAj+B,SACAohC,EAAArjC,EAAA2iB,UAAAne,EAAA88B,eAEA0C,EAAA,GAEAC,EAAAz/B,EAAAuB,QAAAgtB,UAAA3vB,UACA8gC,EAAA,UAAAn+B,EAAAlF,SAAA2D,EAAAc,KAAAd,EAAAe,MAAA0+B,EAAAJ,EACAM,EAAA,UAAAp+B,EAAAlF,SAAA2D,EAAAc,KAAAu+B,EAAAr/B,EAAAe,MACA6+B,EAAA,WAAAr+B,EAAAlF,SAAA2D,EAAAiB,IAAAw+B,EAAAz/B,EAAAkB,OAAAm+B,EAAAI,EACAI,EAAA,WAAAt+B,EAAAlF,SAAA2D,EAAAiB,IAAAw+B,EAAAJ,EAAAr/B,EAAAkB,OAAAu+B,EAqKA,GAnKAjkC,EAAAsH,KAAAyW,EAAA,SAAAwD,EAAAngB,GAEA,IAAApB,EAAAkd,cAAAqE,EAAA/e,OAAA,CAIA,IACAY,EAAAkhC,EAAAvhC,EAAAE,EAeAshC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAhBAxiC,EAAA+e,EAAA/e,MAEApB,IAAAoD,EAAAygC,eAAAl/B,EAAA4W,SAAAoW,EAAAmJ,iBAEA94B,EAAA2vB,EAAA+M,cACAwE,EAAAvR,EAAAgN,cACAh9B,EAAAgwB,EAAAiN,mBACA/8B,EAAA8vB,EAAAkN,2BAEA78B,EAAApD,EAAA2P,sBAAAojB,EAAA3vB,UAAAhC,GACAkjC,EAAAtkC,EAAA2P,sBAAAojB,EAAA3b,MAAAhW,GACA2B,EAAA/C,EAAAwG,eAAAusB,EAAAhwB,WAAAwwB,EAAAxwB,YACAE,EAAAjD,EAAAwG,eAAAusB,EAAA9vB,iBAAAswB,EAAAtwB,mBAKA,IAAAmE,EAAA,SACAC,EAAA,SACAg7B,EAAAc,EAAAlhC,QAEA,GAAAmD,EAAA,CACA,IAAA8/B,EAAArB,EAAAxB,EAEA,WAAAt8B,EAAAlF,UAEAwG,EAAAo8B,EAAA,eACAr8B,EAAAq8B,EAAA,iBACAuB,EAAAxgC,EAAAiB,IAAAy/B,IAGA79B,EAAAo8B,EAAA,kBACAr8B,EAAAq8B,EAAA,gBACAuB,EAAAxgC,EAAAkB,OAAAw/B,GAGA,IAAAC,EAAAjG,EAAA16B,EAAApD,EAAA2xB,EAAAmJ,iBAAAne,EAAAna,OAAA,GACAuhC,EAAA3gC,EAAAc,OACAg/B,EAAA,iBAEAa,GAAAnlC,EAAAolC,WAAAhiC,GAEA2hC,EAAAvgC,EAAA2d,gBAAA/gB,GAAA+hC,EAAA3C,YAEA+D,EAAAE,EAAAE,EAAAE,EAAAM,EACAX,EAAAJ,EACAM,EAAAL,EACAO,EAAA9yB,EAAArM,IACAq/B,EAAAhzB,EAAApM,OAAAu+B,MACI,CACJ,IACAoB,EADAC,EAAA,SAAAv/B,EAAAlF,SAGAsiC,EAAA7C,QACAl5B,EAAAk+B,EAAA,eACAD,EAAAhD,IAEAj7B,EAAAk+B,EAAA,eACAD,EAAAxB,EAAAxB,GAGA0C,EAAAO,EAAA9gC,EAAAe,MAAA8/B,EAAA7gC,EAAAc,KAAA+/B,EAEA,IAAAE,EAAArG,EAAA16B,EAAApD,EAAA2xB,EAAAmJ,iBAAAne,EAAAna,OAAA,GACA2hC,EAAA/gC,EAAAiB,MACA6+B,EAAA,iBAEAiB,GAAAvlC,EAAAolC,WAAAhiC,GAEA4hC,EAAAxgC,EAAA2d,gBAAA/gB,GAAA+hC,EAAA3C,YAEA+D,EAAAL,EACAO,EAAAN,EACAQ,EAAA7yB,EAAAxM,KACAu/B,EAAA/yB,EAAAvM,MAAA0+B,EACAO,EAAAE,EAAAE,EAAAE,EAAAS,EAGAvB,EAAAtgC,KAAA,CACA6gC,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAC,SACAC,SACAQ,QAAApiC,EACAqiC,QAAAnB,EACAoB,aAAA3iC,EACA4iC,mBAAA1iC,EACAiN,UAAA,EAAAmzB,EACA7gC,QACA+b,MAAAgD,EAAAhD,MACAlX,eACAD,iBAKApH,EAAAsH,KAAA08B,EAAA,SAAA4B,GA0BA,GAzBA7S,EAAAnyB,UACAqL,EAAArD,OACAqD,EAAA7I,UAAAwiC,EAAAJ,QACAv5B,EAAA3I,YAAAsiC,EAAAH,QACAx5B,EAAAlD,cACAkD,EAAAlD,YAAA68B,EAAAF,cACAz5B,EAAAjJ,eAAA4iC,EAAAD,oBAGA15B,EAAAnC,YAEAipB,EAAA6M,YACA3zB,EAAAlC,OAAA67B,EAAArB,IAAAqB,EAAApB,KACAv4B,EAAAjC,OAAA47B,EAAAnB,IAAAmB,EAAAlB,MAGA3R,EAAA4M,kBACA1zB,EAAAlC,OAAA67B,EAAAjB,GAAAiB,EAAAhB,IACA34B,EAAAjC,OAAA47B,EAAAf,GAAAe,EAAAd,KAGA74B,EAAAhC,SACAgC,EAAAzC,WAGA25B,EAAAviC,QAAA,CAEAqL,EAAArD,OACAqD,EAAAmY,UAAAwhB,EAAAb,OAAAa,EAAAZ,QACA/4B,EAAAoY,OAAAuhB,EAAA11B,UACAjE,EAAAhF,KAAA2+B,EAAArnB,MAAAqlB,EAAA38B,KAAAo6B,EAAAp6B,KACAgF,EAAAxJ,UAAAmjC,EAAArnB,MAAAolB,EAAAD,EACAz3B,EAAA5E,aAAAu+B,EAAAv+B,aACA4E,EAAA7E,UAAAw+B,EAAAx+B,UAEA,IAAA5E,EAAAojC,EAAApjC,MACA,GAAAxC,EAAAmC,QAAAK,GAKA,IAJA,IAAAqjC,EAAArjC,EAAAoB,OACA67B,EAAA,IAAA4B,EAAA/1B,KACA5C,EAAAlE,EAAAY,eAAA,GAAAq6B,GAAAoG,EAAA,KAEAvjC,EAAA,EAAoBA,EAAAujC,IAAevjC,EAEnC2J,EAAAxC,SAAA,GAAAjH,EAAAF,GAAA,EAAAoG,GAEAA,GAAA+2B,OAGAxzB,EAAAxC,SAAAjH,EAAA,KAEAyJ,EAAAzC,aAIA02B,EAAAt/B,QAAA,CAEA,IAAAklC,EACAC,EACA71B,EAAA,EACA81B,EAAAxG,EAAAU,GAAA,EAEA,GAAA96B,EACA0gC,EAAAthC,EAAAc,MAAAd,EAAAe,MAAAf,EAAAc,MAAA,EACAygC,EAAA,WAAAhgC,EAAAlF,SACA2D,EAAAkB,OAAAsgC,EAAAjE,EAAAr8B,OACAlB,EAAAiB,IAAAugC,EAAAjE,EAAAt8B,QACI,CACJ,IAAA6/B,EAAA,SAAAv/B,EAAAlF,SACAilC,EAAAR,EACA9gC,EAAAc,KAAA0gC,EAAAjE,EAAAt8B,IACAjB,EAAAe,MAAAygC,EAAAjE,EAAAt8B,IACAsgC,EAAAvhC,EAAAiB,KAAAjB,EAAAkB,OAAAlB,EAAAiB,KAAA,EACAyK,EAAAo1B,GAAA,GAAA/kC,KAAAiZ,GAAA,GAAAjZ,KAAAiZ,GAGAvN,EAAArD,OACAqD,EAAAmY,UAAA0hB,EAAAC,GACA95B,EAAAoY,OAAAnU,GACAjE,EAAA7E,UAAA,SACA6E,EAAA5E,aAAA,SACA4E,EAAAxJ,UAAAqhC,EACA73B,EAAAhF,KAAA88B,EAAA98B,KACAgF,EAAAxC,SAAAy2B,EAAAC,YAAA,KACAl0B,EAAAzC,UAGA,GAAAupB,EAAA2M,WAAA,CAEAzzB,EAAA7I,UAAApD,EAAA2P,sBAAAojB,EAAA3vB,UAAA,GACA6I,EAAA3I,YAAAtD,EAAA2P,sBAAAojB,EAAA3b,MAAA,GACA,IAAAutB,EAAAngC,EAAAc,KACAu/B,EAAArgC,EAAAe,MAAA0+B,EACAW,EAAApgC,EAAAiB,IACAq/B,EAAAtgC,EAAAkB,OAAAu+B,EAEAmB,EAAAplC,EAAAolC,WAAAn5B,EAAA7I,WACAgC,GACAw/B,EAAAE,EAAA,QAAA/+B,EAAAlF,SAAA2D,EAAAkB,OAAAlB,EAAAiB,IACAm/B,GAAAQ,EACAN,GAAAM,IAEAT,EAAAE,EAAA,SAAA9+B,EAAAlF,SAAA2D,EAAAe,MAAAf,EAAAc,KACAq/B,GAAAS,EACAP,GAAAO,GAGAn5B,EAAAnC,YACAmC,EAAAlC,OAAA46B,EAAAC,GACA34B,EAAAjC,OAAA66B,EAAAC,GACA74B,EAAAhC,iDC/5BA,IAAApK,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACAg1B,UAAA,CACA1X,SAAA,IACA1R,OAAA,eACA25B,WAAAjmC,EAAAE,KACAgmC,WAAAlmC,EAAAE,QAIA2K,EAAAC,QAAA,CACAq7B,cAAA,GACAC,WAAA,GACAC,WAAA,EACAC,QAAA,KAQAC,aAAA,SAAA/kC,EAAAk0B,EAAA1X,EAAAwoB,GACA,IACAlkC,EAAA4J,EADAk6B,EAAA7kC,KAAA6kC,WASA,IANA1Q,EAAAl0B,QAEAglC,IACAhlC,EAAAilC,WAAA,GAGAnkC,EAAA,EAAA4J,EAAAk6B,EAAAxiC,OAAuCtB,EAAA4J,IAAU5J,EACjD,GAAA8jC,EAAA9jC,GAAAd,UAEA,YADA4kC,EAAA9jC,GAAAozB,GAKA0Q,EAAA1iC,KAAAgyB,GAGA,IAAA0Q,EAAAxiC,QACArC,KAAAmlC,yBAIAC,gBAAA,SAAAnlC,GACA,IAAAJ,EAAApB,EAAA4mC,UAAArlC,KAAA6kC,WAAA,SAAA1Q,GACA,OAAAA,EAAAl0B,aAGA,IAAAJ,IACAG,KAAA6kC,WAAA9wB,OAAAlU,EAAA,GACAI,EAAAilC,WAAA,IAIAC,sBAAA,WACA,IAAAliC,EAAAjD,KACA,OAAAiD,EAAA8hC,UAIA9hC,EAAA8hC,QAAAtmC,EAAA6mC,iBAAAt8B,KAAAqP,OAAA,WACApV,EAAA8hC,QAAA,KACA9hC,EAAAsiC,kBAQAA,YAAA,WACA,IAAAtiC,EAAAjD,KACAwlC,EAAAC,KAAAC,MACAC,EAAA,EAEA1iC,EAAA6hC,WAAA,IACAa,EAAA3mC,KAAA8iB,MAAA7e,EAAA6hC,YACA7hC,EAAA6hC,WAAA7hC,EAAA6hC,WAAA,GAGA7hC,EAAA2iC,QAAA,EAAAD,GAEA,IAAAE,EAAAJ,KAAAC,MAEAziC,EAAA6hC,aAAAe,EAAAL,GAAAviC,EAAA2hC,cAGA3hC,EAAA4hC,WAAAxiC,OAAA,GACAY,EAAAkiC,yBAOAS,QAAA,SAAAxwB,GACA,IACA+e,EAAAl0B,EADA4kC,EAAA7kC,KAAA6kC,WAEA9jC,EAAA,EAEA,MAAAA,EAAA8jC,EAAAxiC,OACA8xB,EAAA0Q,EAAA9jC,GACAd,EAAAk0B,EAAAl0B,MAEAk0B,EAAAtpB,aAAAspB,EAAAtpB,aAAA,GAAAuK,EACA+e,EAAAtpB,YAAA7L,KAAA0R,IAAAyjB,EAAAtpB,YAAAspB,EAAArpB,UAEArM,EAAAiG,SAAAyvB,EAAAnpB,OAAA,CAAA/K,EAAAk0B,GAAAl0B,GACAxB,EAAAiG,SAAAyvB,EAAAlpB,oBAAA,CAAAkpB,GAAAl0B,GAEAk0B,EAAAtpB,aAAAspB,EAAArpB,UACArM,EAAAiG,SAAAyvB,EAAAjpB,oBAAA,CAAAipB,GAAAl0B,GACAA,EAAAilC,WAAA,EACAL,EAAA9wB,OAAAhT,EAAA,MAEAA,kEC1HA,IAAAtC,EAAcF,EAAQ,QAEtB,SAAAunC,EAAArzB,EAAAnT,GACA,OAAAb,EAAAsnC,MAAAtzB,EAAA,SAAAuzB,GACA,OAAAA,EAAA1mC,eAIA,SAAA2mC,EAAAxzB,EAAAjT,GACAiT,EAAAM,QAAA,SAAAizB,EAAAjlC,GAEA,OADAilC,EAAAE,WAAAnlC,EACAilC,IAEAvzB,EAAAyM,KAAA,SAAAxF,EAAArP,GACA,IAAAia,EAAA9kB,EAAA6K,EAAAqP,EACA6K,EAAA/kB,EAAAka,EAAArP,EACA,OAAAia,EAAA7kB,SAAA8kB,EAAA9kB,OACA6kB,EAAA4hB,WAAA3hB,EAAA2hB,WACA5hB,EAAA7kB,OAAA8kB,EAAA9kB,SAEAgT,EAAAM,QAAA,SAAAizB,UACAA,EAAAE,aAwBA58B,EAAAC,QAAA,CACAjL,SAAA,GAQA+K,OAAA,SAAApJ,EAAA2E,GACA3E,EAAAkmC,QACAlmC,EAAAkmC,MAAA,IAIAvhC,EAAArF,UAAAqF,EAAArF,YAAA,EACAqF,EAAAtF,SAAAsF,EAAAtF,UAAA,MACAsF,EAAAnF,OAAAmF,EAAAnF,QAAA,EAEAQ,EAAAkmC,MAAAhkC,KAAAyC,IAQA+E,UAAA,SAAA1J,EAAAmmC,GACA,IAAAvmC,EAAAI,EAAAkmC,MAAAlmC,EAAAkmC,MAAAryB,QAAAsyB,IAAA,GACA,IAAAvmC,GACAI,EAAAkmC,MAAApyB,OAAAlU,EAAA,IAUAuJ,UAAA,SAAAnJ,EAAA2E,EAAAJ,GAMA,IALA,IAGA6hC,EAHAhW,EAAA,kCACA1lB,EAAA0lB,EAAAhuB,OACAtB,EAAA,EAGQA,EAAA4J,IAAU5J,EAClBslC,EAAAhW,EAAAtvB,GACAyD,EAAA+R,eAAA8vB,KACAzhC,EAAAyhC,GAAA7hC,EAAA6hC,KAYA9lC,OAAA,SAAAN,EAAA6D,EAAAG,GACA,GAAAhE,EAAA,CAIA,IAAAqmC,EAAArmC,EAAAuE,QAAA+hC,QAAA,GACA7lC,EAAAjC,EAAA+F,QAAA0F,UAAAo8B,EAAA5lC,SACA8lC,EAAA9lC,EAAAqD,KACA0iC,EAAA/lC,EAAAsD,MACA0iC,EAAAhmC,EAAAwD,IACAyiC,EAAAjmC,EAAAyD,OAEAyiC,EAAAd,EAAA7lC,EAAAkmC,MAAA,QACAU,EAAAf,EAAA7lC,EAAAkmC,MAAA,SACAW,EAAAhB,EAAA7lC,EAAAkmC,MAAA,OACAY,EAAAjB,EAAA7lC,EAAAkmC,MAAA,UACAa,EAAAlB,EAAA7lC,EAAAkmC,MAAA,aAGAF,EAAAW,GAAA,GACAX,EAAAY,GAAA,GACAZ,EAAAa,GAAA,GACAb,EAAAc,GAAA,GAwCA,IAAAE,EAAAnjC,EAAA0iC,EAAAC,EACAS,EAAAjjC,EAAAyiC,EAAAC,EACAQ,EAAAF,EAAA,EACAG,EAAAF,EAAA,EAGAG,GAAAvjC,EAAAqjC,IAAAP,EAAAvkC,OAAAwkC,EAAAxkC,QAGAilC,GAAArjC,EAAAmjC,IAAAN,EAAAzkC,OAAA0kC,EAAA1kC,QAGAklC,EAAAN,EACAO,EAAAN,EACAO,EAAA,GAqBAhpC,EAAAsH,KAAA6gC,EAAAxV,OAAAyV,EAAAC,EAAAC,GAAAW,GAGA,IAAAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEArpC,EAAAsH,KAAA+gC,EAAA1V,OAAA2V,GAAA,SAAAgB,GACA,GAAAA,EAAA7I,WAAA,CACA,IAAA8I,EAAAD,EAAA7I,aACAyI,EAAA3oC,KAAAwH,IAAAmhC,EAAAK,EAAAjkC,MACA6jC,EAAA5oC,KAAAwH,IAAAohC,EAAAI,EAAAhkC,UAIAvF,EAAAsH,KAAA6gC,EAAAxV,OAAAyV,GAAA,SAAAoB,GACA,GAAAA,EAAA/I,WAAA,CACA,IAAA8I,EAAAC,EAAA/I,aACA2I,EAAA7oC,KAAAwH,IAAAqhC,EAAAG,EAAA9jC,KACA4jC,EAAA9oC,KAAAwH,IAAAshC,EAAAE,EAAA7jC,WAOA,IAAA+jC,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EA2BAloC,EAAAsH,KAAA6gC,EAAAxV,OAAAyV,GAAAyB,GAEA7pC,EAAAsH,KAAA6gC,EAAA,SAAA2B,GACAL,GAAAK,EAAAzkC,QAGArF,EAAAsH,KAAA8gC,EAAA,SAAA0B,GACAJ,GAAAI,EAAAzkC,QAIArF,EAAAsH,KAAA+gC,EAAA1V,OAAA2V,GAAAuB,GAGA7pC,EAAAsH,KAAA+gC,EAAA,SAAAyB,GACAH,GAAAG,EAAAtkC,SAGAxF,EAAAsH,KAAAghC,EAAA,SAAAwB,GACAF,GAAAE,EAAAtkC,SAqBAxF,EAAAsH,KAAA6gC,EAAAxV,OAAAyV,GAAA2B,GAGAN,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EAEAloC,EAAAsH,KAAA6gC,EAAA,SAAA2B,GACAL,GAAAK,EAAAzkC,QAGArF,EAAAsH,KAAA8gC,EAAA,SAAA0B,GACAJ,GAAAI,EAAAzkC,QAGArF,EAAAsH,KAAA+gC,EAAA,SAAAyB,GACAH,GAAAG,EAAAtkC,SAEAxF,EAAAsH,KAAAghC,EAAA,SAAAwB,GACAF,GAAAE,EAAAtkC,SAIA,IAAAwkC,EAAAzpC,KAAAwH,IAAAmhC,EAAAO,EAAA,GACAA,GAAAO,EACAN,GAAAnpC,KAAAwH,IAAAohC,EAAAO,EAAA,GAEA,IAAAO,EAAA1pC,KAAAwH,IAAAqhC,EAAAO,EAAA,GACAA,GAAAM,EACAL,GAAArpC,KAAAwH,IAAAshC,EAAAO,EAAA,GAKA,IAAAM,EAAA1kC,EAAAmkC,EAAAC,EACAO,EAAA9kC,EAAAokC,EAAAC,EAEAS,IAAArB,GAAAoB,IAAAnB,IACA/oC,EAAAsH,KAAA6gC,EAAA,SAAA2B,GACAA,EAAAtkC,OAAA0kC,IAGAlqC,EAAAsH,KAAA8gC,EAAA,SAAA0B,GACAA,EAAAtkC,OAAA0kC,IAGAlqC,EAAAsH,KAAA+gC,EAAA,SAAAyB,GACAA,EAAAhpC,YACAgpC,EAAAzkC,MAAA8kC,KAIAnqC,EAAAsH,KAAAghC,EAAA,SAAAwB,GACAA,EAAAhpC,YACAgpC,EAAAzkC,MAAA8kC,KAIApB,EAAAmB,EACApB,EAAAqB,GAIA,IAAA7kC,EAAAyiC,EAAAiC,EACAvkC,EAAAwiC,EAAAgC,EAwBAjqC,EAAAsH,KAAA6gC,EAAAxV,OAAA0V,GAAA+B,GAGA9kC,GAAAwjC,EACArjC,GAAAsjC,EAEA/oC,EAAAsH,KAAA8gC,EAAAgC,GACApqC,EAAAsH,KAAAghC,EAAA8B,GAGA5oC,EAAAsQ,UAAA,CACAxM,KAAAmkC,EACAhkC,IAAAkkC,EACApkC,MAAAkkC,EAAAX,EACApjC,OAAAikC,EAAAZ,GAIA/oC,EAAAsH,KAAAihC,EAAA,SAAAuB,GACAA,EAAAxkC,KAAA9D,EAAAsQ,UAAAxM,KACAwkC,EAAArkC,IAAAjE,EAAAsQ,UAAArM,IACAqkC,EAAAvkC,MAAA/D,EAAAsQ,UAAAvM,MACAukC,EAAApkC,OAAAlE,EAAAsQ,UAAApM,OAEAokC,EAAAhoC,OAAAgnC,EAAAC,KArOA,SAAAE,EAAAa,GACA,IAAA3kC,EACAC,EAAA0kC,EAAA1kC,eAEAA,GACAD,EAAA2kC,EAAAhoC,OAAAgoC,EAAAhpC,UAAA0nC,EAAAM,EAAAD,GACAE,GAAA5jC,EAAAK,SAEAL,EAAA2kC,EAAAhoC,OAAA8mC,EAAAG,GACAD,GAAA3jC,EAAAE,OAGA2jC,EAAAtlC,KAAA,CACAu5B,WAAA73B,EACAD,UACA2kC,QAqCA,SAAAD,EAAAC,GACA,IAAAO,EAAArqC,EAAAsqC,cAAAtB,EAAA,SAAAuB,GACA,OAAAA,EAAAT,UAGA,GAAAO,EACA,GAAAP,EAAA1kC,eAAA,CACA,IAAAolC,EAAA,CACAllC,KAAA/E,KAAAwH,IAAA0hC,EAAAP,GACA3jC,MAAAhF,KAAAwH,IAAA2hC,EAAAP,GACA1jC,IAAA,EACAC,OAAA,GAKAokC,EAAAhoC,OAAAgoC,EAAAhpC,UAAA0nC,EAAAM,EAAAL,EAAA,EAAA+B,QAEAV,EAAAhoC,OAAAuoC,EAAAllC,QAAAE,MAAA0jC,GA4BA,SAAAgB,EAAAD,GACA,IAAAO,EAAArqC,EAAAsqC,cAAAtB,EAAA,SAAA7jC,GACA,OAAAA,EAAA2kC,UAGAU,EAAA,CACAllC,KAAA,EACAC,MAAA,EACAE,IAAAkkC,EACAjkC,OAAAkkC,GAGAS,GACAP,EAAAhoC,OAAAuoC,EAAAllC,QAAAE,MAAA0jC,EAAAyB,GAwEA,SAAAJ,EAAAN,GACAA,EAAA1kC,gBACA0kC,EAAAxkC,KAAAwkC,EAAAhpC,UAAAinC,EAAA0B,EACAK,EAAAvkC,MAAAukC,EAAAhpC,UAAAuE,EAAA2iC,EAAAyB,EAAAX,EACAgB,EAAArkC,MACAqkC,EAAApkC,OAAAD,EAAAqkC,EAAAtkC,OAGAC,EAAAqkC,EAAApkC,SAIAokC,EAAAxkC,OACAwkC,EAAAvkC,MAAAD,EAAAwkC,EAAAzkC,MACAykC,EAAArkC,IAAAkkC,EACAG,EAAApkC,OAAAikC,EAAAZ,EAGAzjC,EAAAwkC,EAAAvkC,+CCjYA,IAAAvF,EAAcF,EAAQ,QAMtB+K,EAAAC,QAAA,CAKA+tB,WAAA,CAOA7rB,OAAA,SAAA3B,GACA,OAAArL,EAAAmC,QAAAkJ,KAAA,GAAAA,GAWAytB,OAAA,SAAA2R,EAAArpC,EAAA2c,GAEA,IAAA2sB,EAAA3sB,EAAAna,OAAA,EAAAma,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGAxd,KAAAuY,IAAA4xB,GAAA,GACAD,IAAAlqC,KAAA8iB,MAAAonB,KAEAC,EAAAD,EAAAlqC,KAAA8iB,MAAAonB,IAIA,IAAAE,EAAA3qC,EAAA06B,MAAAn6B,KAAAuY,IAAA4xB,IACAE,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAAtqC,KAAAwH,IAAAxH,KAAAuY,IAAAiF,EAAA,IAAAxd,KAAAuY,IAAAiF,IAAAna,OAAA,KACA,GAAAinC,EAAA,MACA,IAAAC,EAAA9qC,EAAA06B,MAAAn6B,KAAAuY,IAAA2xB,IACAG,EAAAH,EAAAM,cAAAxqC,KAAA8iB,MAAAynB,GAAAvqC,KAAA8iB,MAAAsnB,QACK,CACL,IAAAK,GAAA,EAAAzqC,KAAA8iB,MAAAsnB,GACAK,EAAAzqC,KAAAwH,IAAAxH,KAAA0R,IAAA+4B,EAAA,OACAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAGA5P,YAAA,SAAAyP,EAAArpC,EAAA2c,GACA,IAAAmtB,EAAAT,EAAAlqC,KAAA2Y,IAAA,GAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAA+P,KAEA,WAAAA,EACA,IACI,IAAAS,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA9pC,OAAA2c,EAAAna,OAAA,EACJ6mC,EAAAM,gBAEA,2CCtEA,IAAA/qC,EAAcF,EAAQ,QACtBqrC,EAAYrrC,EAAQ,QACpBsrC,EAAUtrC,EAAQ,QAGlBurC,EAAAD,EAAAE,SAAAF,EAAAD,EAOAtgC,EAAAC,QAAA9K,EAAA+D,OAAA,CAIAC,WAAA,aASA4P,eAAA,aAQA23B,eAAA,aASAC,iBAAA,aAQAC,oBAAA,cAECJ,sCCpDDxgC,EAAAC,QAAA,SAAA2C,GAEAA,EAAAi+B,MAAA,SAAAz/B,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,QAEA,IAAAsD,EAAAxB,EAAAhI,0CCLA4G,EAAAC,QAAA,GACAD,EAAAC,QAAA6gC,OAAwB7rC,EAAQ,QAChC+K,EAAAC,QAAAnK,OAAwBb,EAAQ,QAChC+K,EAAAC,QAAAuqB,MAAuBv1B,EAAQ,yDCJ/B,IAAA8rC,EAAiB9rC,EAAQ,QAqBzB,SAAA+rC,EAAAC,GACA,GAAAA,EAAA,CAGA,IAAAC,EAAA,yBACAC,EAAA,wCACAC,EAAA,2FACAC,EAAA,6GACAC,EAAA,QAEAC,EAAA,QACAnxB,EAAA,EACAzP,EAAAsgC,EAAAtgC,MAAAugC,GACAM,EAAA,GACA,GAAA7gC,EAAA,CACAA,IAAA,GACA6gC,EAAA7gC,EAAA,GACA,QAAAlJ,EAAA,EAAqBA,EAAA8pC,EAAAxoC,OAAgBtB,IACrC8pC,EAAA9pC,GAAAgqC,SAAA9gC,EAAAlJ,GAAAkJ,EAAAlJ,GAAA,IAEA+pC,IACApxB,EAAA1a,KAAAub,MAAAwwB,SAAAD,IAAA,uBAGA,GAAA7gC,EAAAsgC,EAAAtgC,MAAAwgC,GAAA,CACAK,EAAA7gC,EAAA,GACAA,IAAA,GACA,IAAAlJ,EAAA,EAAqBA,EAAA8pC,EAAAxoC,OAAgBtB,IACrC8pC,EAAA9pC,GAAAgqC,SAAA9gC,EAAAmJ,MAAA,EAAArS,EAAA,EAAAA,EAAA,OAEA+pC,IACApxB,EAAA1a,KAAAub,MAAAwwB,SAAAD,EAAA,uBAGA,GAAA7gC,EAAAsgC,EAAAtgC,MAAAygC,GAAA,CACA,IAAA3pC,EAAA,EAAqBA,EAAA8pC,EAAAxoC,OAAgBtB,IACrC8pC,EAAA9pC,GAAAgqC,SAAA9gC,EAAAlJ,EAAA,IAEA2Y,EAAAsxB,WAAA/gC,EAAA,SAEA,GAAAA,EAAAsgC,EAAAtgC,MAAA0gC,GAAA,CACA,IAAA5pC,EAAA,EAAqBA,EAAA8pC,EAAAxoC,OAAgBtB,IACrC8pC,EAAA9pC,GAAA/B,KAAAub,MAAA,KAAAywB,WAAA/gC,EAAAlJ,EAAA,KAEA2Y,EAAAsxB,WAAA/gC,EAAA,SAEA,GAAAA,EAAAsgC,EAAAtgC,MAAA2gC,GAAA,CACA,kBAAA3gC,EAAA,GACA,gBAGA,GADA4gC,EAAAR,EAAApgC,EAAA,KACA4gC,EACA,OAIA,IAAA9pC,EAAA,EAAkBA,EAAA8pC,EAAAxoC,OAAgBtB,IAClC8pC,EAAA9pC,GAAAiM,EAAA69B,EAAA9pC,GAAA,OASA,OAHA2Y,EAJAA,GAAA,GAAAA,EAIA1M,EAAA0M,EAAA,KAHA,EAKAmxB,EAAA,GAAAnxB,EACAmxB,GAGA,SAAAI,EAAAV,GACA,GAAAA,EAAA,CAGA,IAAAW,EAAA,2GACAjhC,EAAAsgC,EAAAtgC,MAAAihC,GACA,GAAAjhC,EAAA,CACA,IAAAkhC,EAAAH,WAAA/gC,EAAA,IACAmhC,EAAAp+B,EAAA+9B,SAAA9gC,EAAA,WACAohC,EAAAr+B,EAAAg+B,WAAA/gC,EAAA,WACAK,EAAA0C,EAAAg+B,WAAA/gC,EAAA,WACAyP,EAAA1M,EAAA5F,MAAA+jC,GAAA,EAAAA,EAAA,KACA,OAAAC,EAAAC,EAAA/gC,EAAAoP,KAIA,SAAA4xB,EAAAf,GACA,GAAAA,EAAA,CAGA,IAAAgB,EAAA,yGACAthC,EAAAsgC,EAAAtgC,MAAAshC,GACA,GAAAthC,EAAA,CACA,IAAAkhC,EAAAH,WAAA/gC,EAAA,IACAmhC,EAAAp+B,EAAA+9B,SAAA9gC,EAAA,WACAuhC,EAAAx+B,EAAAg+B,WAAA/gC,EAAA,WACAI,EAAA2C,EAAAg+B,WAAA/gC,EAAA,WACAyP,EAAA1M,EAAA5F,MAAA+jC,GAAA,EAAAA,EAAA,KACA,OAAAC,EAAAI,EAAAnhC,EAAAqP,KAIA,SAAA+xB,EAAAlB,GACA,IAAAG,EAAAJ,EAAAC,GACA,OAAAG,KAAAt3B,MAAA,KAGA,SAAAs4B,EAAAnB,GACA,IAAAoB,EAAAV,EAAAV,GACA,OAAAoB,KAAAv4B,MAAA,KAGA,SAAAw4B,EAAArB,GACA,IAAAsB,EAAAvB,EAAAC,GACA,OAAAsB,EACAA,EAAA,IAEAA,EAAAZ,EAAAV,IACAsB,EAAA,IAEAA,EAAAP,EAAAf,IACAsB,EAAA,QADA,EAMA,SAAAC,EAAApB,EAAAhxB,GACAA,OAAA9O,IAAA8O,GAAA,IAAAgxB,EAAAroC,OAAAqX,EAAAgxB,EAAA,GACA,UAAAqB,EAAArB,EAAA,IACAqB,EAAArB,EAAA,IACAqB,EAAArB,EAAA,KAEAhxB,GAAA,GAAAA,EAAA,EACAqyB,EAAA/sC,KAAAub,MAAA,IAAAb,IACA,IAIA,SAAAhD,EAAAg0B,EAAAS,GACA,OAAAA,EAAA,GAAAT,EAAA,IAAAA,EAAA,KACAsB,EAAAtB,EAAAS,GAEA,OAAAT,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAGA,SAAAsB,EAAAtB,EAAAS,GAIA,YAHAvgC,IAAAugC,IACAA,OAAAvgC,IAAA8/B,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAS,EAAA,IAGA,SAAAc,EAAAvB,EAAAS,GACA,GAAAA,EAAA,GAAAT,EAAA,IAAAA,EAAA,KACA,OAAAwB,EAAAxB,EAAAS,GAEA,IAAA/gC,EAAApL,KAAAub,MAAAmwB,EAAA,YACAyB,EAAAntC,KAAAub,MAAAmwB,EAAA,YACArgC,EAAArL,KAAAub,MAAAmwB,EAAA,YAEA,aAAAtgC,EAAA,MAAA+hC,EAAA,MAAA9hC,EAAA,KAGA,SAAA6hC,EAAAxB,EAAAS,GACA,IAAA/gC,EAAApL,KAAAub,MAAAmwB,EAAA,YACAyB,EAAAntC,KAAAub,MAAAmwB,EAAA,YACArgC,EAAArL,KAAAub,MAAAmwB,EAAA,YACA,cAAAtgC,EAAA,MAAA+hC,EAAA,MAAA9hC,EAAA,OAAA8gC,GAAAT,EAAA,WAGA,SAAA0B,EAAAT,EAAAR,GACA,OAAAA,EAAA,GAAAQ,EAAA,IAAAA,EAAA,KACAU,EAAAV,EAAAR,GAEA,OAAAQ,EAAA,QAAAA,EAAA,SAAAA,EAAA,QAGA,SAAAU,EAAAV,EAAAR,GAIA,YAHAvgC,IAAAugC,IACAA,OAAAvgC,IAAA+gC,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAR,EAAA,IAKA,SAAAmB,EAAAf,EAAAJ,GAIA,YAHAvgC,IAAAugC,IACAA,OAAAvgC,IAAA2gC,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACA3gC,IAAAugC,GAAA,IAAAA,EAAA,KAAAA,EAAA,QAGA,SAAAP,EAAAC,GACA,OAAA0B,EAAA1B,EAAAz3B,MAAA,MAIA,SAAApG,EAAAw/B,EAAA97B,EAAAlK,GACA,OAAAxH,KAAA0R,IAAA1R,KAAAwH,IAAAkK,EAAA87B,GAAAhmC,GAGA,SAAAulC,EAAAS,GACA,IAAAC,EAAAD,EAAA7pB,SAAA,IAAAxP,cACA,OAAAs5B,EAAApqC,OAAA,MAAAoqC,IAjOAnjC,EAAAC,QAAA,CACA+gC,UACAW,UACAQ,SACAC,SACAJ,SACAM,WAEAE,YACAp1B,YACAs1B,aACAC,gBACAC,iBACAE,YACAC,aACAC,YACA1B,WAsNA,IAAA2B,EAAA,GACA,QAAAnc,KAAAia,EACAkC,EAAAlC,EAAAja,2CCzOA,IAAA9xB,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtBI,EAAAF,EAAAE,KAEAL,EAAAa,KAAA,UACA20B,MAAA,CACAz0B,SAAA,EACA8F,UAAA,OACA5F,WAAA,EACA2+B,WAAA,IACAx9B,QAAA,GACApB,SAAA,MACA0B,KAAA,GACAvB,OAAA,OAOA,IAAAo0B,EAAAr1B,EAAAgE,OAAA,CACAC,WAAA,SAAAC,GACA,IAAAO,EAAAjD,KACAvB,EAAA+D,OAAAS,EAAAP,GAGAO,EAAAN,eAAA,IAKAE,aAAAlE,EACA4B,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IAAAC,EAAAjD,KA0BA,OAvBAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,UAGAC,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAEAH,EAAAI,oBACAJ,EAAAK,cACAL,EAAAM,mBAGAN,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAGAD,YAAAhF,EAIAuE,oBAAAvE,EACAwE,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,EAGAtB,EAAAW,QAAA,CACAE,MAAA,EACAG,OAAA,IAGAb,mBAAAzE,EAIA0E,kBAAA1E,EACA2E,YAAA3E,EACA4E,iBAAA5E,EAIA6E,UAAA7E,EACA8E,IAAA,WACA,IAAAR,EAAAjD,KACAiF,EAAAxG,EAAAwG,eACAJ,EAAA5B,EAAAuB,QACAnF,EAAAwF,EAAAxF,QACAP,EAAAmG,EAAAJ,EAAA/F,SAAAR,EAAA0G,OAAAE,iBACAtB,EAAAX,EAAAW,QACA0gC,EAAA7lC,EAAAmC,QAAAiE,EAAA7D,MAAA6D,EAAA7D,KAAAqB,OAAA,EACA67B,EAAAz/B,EAAA+F,QAAAqF,aAAAhF,EAAAq5B,WAAAp/B,GACA4tC,EAAArtC,EAAAilC,EAAApG,EAAA,EAAAr5B,EAAAnE,QAAA,EAEAuC,EAAAY,gBACAD,EAAAE,MAAAb,EAAAH,SACAc,EAAAK,OAAAyoC,IAEA9oC,EAAAE,MAAA4oC,EACA9oC,EAAAK,OAAAhB,EAAAF,WAGAE,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAGAP,SAAA/E,EAGAkF,aAAA,WACA,IAAAsW,EAAAna,KAAAwE,QAAAlF,SACA,cAAA6a,GAAA,WAAAA,GAIA1T,KAAA,WACA,IAAAxD,EAAAjD,KACA8E,EAAA7B,EAAA6B,IACAG,EAAAxG,EAAAwG,eACAJ,EAAA5B,EAAAuB,QACAwtB,EAAA1zB,EAAA0G,OAEA,GAAAH,EAAAxF,QAAA,CACA,IAWAyD,EAAA6pC,EAAAC,EAXA9tC,EAAAmG,EAAAJ,EAAA/F,SAAAkzB,EAAA9sB,iBACAC,EAAAF,EAAAJ,EAAAM,UAAA6sB,EAAA5sB,kBACAC,EAAAJ,EAAAJ,EAAAQ,WAAA2sB,EAAA1sB,mBACAunC,EAAApuC,EAAA+G,WAAA1G,EAAAqG,EAAAE,GACA64B,EAAAz/B,EAAA+F,QAAAqF,aAAAhF,EAAAq5B,WAAAp/B,GACAsc,EAAA8iB,EAAA,EAAAr5B,EAAAnE,QACAiO,EAAA,EACAzK,EAAAjB,EAAAiB,IACAH,EAAAd,EAAAc,KACAI,EAAAlB,EAAAkB,OACAH,EAAAf,EAAAe,MAGAc,EAAA5D,UAAA+D,EAAAJ,EAAAkC,UAAAirB,EAAAhrB,kBACAlC,EAAAY,KAAAmnC,EAGA5pC,EAAAY,gBACA8oC,EAAA5oC,GAAAC,EAAAD,GAAA,EACA6oC,EAAA1oC,EAAAkX,EACAtY,EAAAkB,EAAAD,IAEA4oC,EAAA,SAAA9nC,EAAAvF,SAAAyE,EAAAqX,EAAApX,EAAAoX,EACAwxB,EAAA1oC,GAAAC,EAAAD,GAAA,EACApB,EAAAqB,EAAAD,EACAyK,EAAA3P,KAAAiZ,IAAA,SAAApT,EAAAvF,UAAA,QAGAwF,EAAAuC,OACAvC,EAAA+d,UAAA8pB,EAAAC,GACA9nC,EAAAge,OAAAnU,GACA7J,EAAAe,UAAA,SACAf,EAAAgB,aAAA,SAEA,IAAA9E,EAAA6D,EAAA7D,KACA,GAAAvC,EAAAmC,QAAAI,GAEA,IADA,IAAAmG,EAAA,EACApG,EAAA,EAAmBA,EAAAC,EAAAqB,SAAiBtB,EACpC+D,EAAAoD,SAAAlH,EAAAD,GAAA,EAAAoG,EAAArE,GACAqE,GAAA+2B,OAGAp5B,EAAAoD,SAAAlH,EAAA,IAAA8B,GAGAgC,EAAAmD,cAKA,SAAA6kC,EAAA7sC,EAAA8sC,GACA,IAAAjZ,EAAA,IAAAD,EAAA,CACA/uB,IAAA7E,EAAA6E,IACAN,QAAAuoC,EACA9sC,UAGAvB,EAAA0K,UAAAnJ,EAAA6zB,EAAAiZ,GACAruC,EAAA2K,OAAApJ,EAAA6zB,GACA7zB,EAAA+sC,WAAAlZ,EAGAxqB,EAAAC,QAAA,CACAnH,GAAA,QASAoH,SAAAqqB,EAEApqB,WAAA,SAAAxJ,GACA,IAAA8sC,EAAA9sC,EAAAuE,QAAAsvB,MAEAiZ,GACAD,EAAA7sC,EAAA8sC,IAIAlqC,aAAA,SAAA5C,GACA,IAAA8sC,EAAA9sC,EAAAuE,QAAAsvB,MACAkZ,EAAA/sC,EAAA+sC,WAEAD,GACAtuC,EAAAiL,QAAAqjC,EAAAzuC,EAAA0G,OAAA8uB,OAEAkZ,GACAtuC,EAAA0K,UAAAnJ,EAAA+sC,EAAAD,GACAC,EAAAxoC,QAAAuoC,GAEAD,EAAA7sC,EAAA8sC,IAEGC,IACHtuC,EAAAiL,UAAA1J,EAAA+sC,UACA/sC,EAAA+sC,mDCtPA,IAAAvuC,EAAcF,EAAQ,QAQtB,SAAA0uC,EAAAttC,EAAAM,GACA,OAAAN,EAAAsJ,OACA,CACA/B,EAAAvH,EAAAuH,EACAC,EAAAxH,EAAAwH,GAIA1I,EAAAwuC,oBAAAttC,EAAAM,GAQA,SAAAitC,EAAAjtC,EAAAktC,GACA,IACAjtC,EAAAa,EAAAge,EAAApU,EAAAqU,EADA1e,EAAAL,EAAAI,KAAAC,SAGA,IAAAS,EAAA,EAAA4J,EAAArK,EAAA+B,OAAoCtB,EAAA4J,IAAU5J,EAC9C,GAAAd,EAAAmB,iBAAAL,GAKA,IADAb,EAAAD,EAAAE,eAAAY,GACAge,EAAA,EAAAC,EAAA9e,EAAAG,KAAAgC,OAAsC0c,EAAAC,IAAUD,EAAA,CAChD,IAAArN,EAAAxR,EAAAG,KAAA0e,GACArN,EAAAmF,MAAAnH,MACAy9B,EAAAz7B,IAYA,SAAA07B,EAAAntC,EAAAX,GACA,IAAAqH,EAAA,GAQA,OANAumC,EAAAjtC,EAAA,SAAAyR,GACAA,EAAAgG,QAAApY,EAAA4H,EAAA5H,EAAA6H,IACAR,EAAAxE,KAAAuP,KAIA/K,EAWA,SAAA0mC,EAAAptC,EAAAX,EAAAguC,EAAAC,GACA,IAAAC,EAAAv9B,OAAAw9B,kBACAC,EAAA,GAmBA,OAjBAR,EAAAjtC,EAAA,SAAAyR,GACA,IAAA47B,GAAA57B,EAAAgG,QAAApY,EAAA4H,EAAA5H,EAAA6H,GAAA,CAIA,IAAA60B,EAAAtqB,EAAAqG,iBACA8e,EAAA0W,EAAAjuC,EAAA08B,GAEAnF,EAAA2W,GACAE,EAAA,CAAAh8B,GACA87B,EAAA3W,GACGA,IAAA2W,GAEHE,EAAAvrC,KAAAuP,MAIAg8B,EAQA,SAAAC,EAAA/S,GACA,IAAAgT,GAAA,IAAAhT,EAAA9mB,QAAA,KACA+5B,GAAA,IAAAjT,EAAA9mB,QAAA,KAEA,gBAAAg6B,EAAAC,GACA,IAAAC,EAAAJ,EAAA5uC,KAAAuY,IAAAu2B,EAAA5mC,EAAA6mC,EAAA7mC,GAAA,EACA+mC,EAAAJ,EAAA7uC,KAAAuY,IAAAu2B,EAAA3mC,EAAA4mC,EAAA5mC,GAAA,EACA,OAAAnI,KAAAgkB,KAAAhkB,KAAA2Y,IAAAq2B,EAAA,GAAAhvC,KAAA2Y,IAAAs2B,EAAA,KAIA,SAAAC,EAAAjuC,EAAAN,EAAA6E,GACA,IAAAlF,EAAA2tC,EAAAttC,EAAAM,GAEAuE,EAAAo2B,KAAAp2B,EAAAo2B,MAAA,IACA,IAAA2S,EAAAI,EAAAnpC,EAAAo2B,MACAhhB,EAAApV,EAAA8oC,UAAAF,EAAAntC,EAAAX,GAAA+tC,EAAAptC,EAAAX,GAAA,EAAAiuC,GACA5mC,EAAA,GAEA,OAAAiT,EAAAvX,QAIApC,EAAAI,KAAAC,SAAAyS,QAAA,SAAAjS,EAAAhB,GACA,GAAAG,EAAAmB,iBAAAtB,GAAA,CACA,IAAAI,EAAAD,EAAAE,eAAAL,GACA4R,EAAAxR,EAAAG,KAAAuZ,EAAA,GAAAnK,QAGAiC,MAAAmF,MAAAnH,MACA/I,EAAAxE,KAAAuP,MAKA/K,GAfA,GA+BA2C,EAAAC,QAAA,CAEA4kC,MAAA,CACAC,OAAA,SAAAnuC,EAAAN,GACA,IAAAL,EAAA2tC,EAAAttC,EAAAM,GACA0G,EAAA,GASA,OAPAumC,EAAAjtC,EAAA,SAAAyR,GACA,GAAAA,EAAAgG,QAAApY,EAAA4H,EAAA5H,EAAA6H,GAEA,OADAR,EAAAxE,KAAAuP,GACA/K,IAIAA,EAAAyM,MAAA,MASAnS,MAAAitC,EAYAruC,MAAAquC,EAWAptC,QAAA,SAAAb,EAAAN,EAAA6E,GACA,IAAAlF,EAAA2tC,EAAAttC,EAAAM,GACAuE,EAAAo2B,KAAAp2B,EAAAo2B,MAAA,KACA,IAAA2S,EAAAI,EAAAnpC,EAAAo2B,MACAhhB,EAAApV,EAAA8oC,UAAAF,EAAAntC,EAAAX,GAAA+tC,EAAAptC,EAAAX,GAAA,EAAAiuC,GAMA,OAJA3zB,EAAAvX,OAAA,IACAuX,EAAA3Z,EAAAE,eAAAyZ,EAAA,GAAArM,eAAAlN,MAGAuZ,GASAy0B,SAAA,SAAApuC,EAAAN,GACA,OAAAuuC,EAAAjuC,EAAAN,EAAA,CAA+B2tC,WAAA,KAW/Bp/B,MAAA,SAAAjO,EAAAN,GACA,IAAAL,EAAA2tC,EAAAttC,EAAAM,GACA,OAAAmtC,EAAAntC,EAAAX,IAWAgvC,QAAA,SAAAruC,EAAAN,EAAA6E,GACA,IAAAlF,EAAA2tC,EAAAttC,EAAAM,GACAuE,EAAAo2B,KAAAp2B,EAAAo2B,MAAA,KACA,IAAA2S,EAAAI,EAAAnpC,EAAAo2B,MACA8S,EAAAL,EAAAptC,EAAAX,EAAAkF,EAAA8oC,UAAAC,GAmBA,OAhBAG,EAAArrC,OAAA,GACAqrC,EAAAxuB,KAAA,SAAAxF,EAAArP,GACA,IAAAkkC,EAAA70B,EAAA1B,UACAw2B,EAAAnkC,EAAA2N,UACAy2B,EAAAF,EAAAC,EAOA,OALA,IAAAC,IAEAA,EAAA/0B,EAAAnM,cAAAlD,EAAAkD,eAGAkhC,IAKAf,EAAAt6B,MAAA,MAWAlM,EAAA,SAAAjH,EAAAN,EAAA6E,GACA,IAAAlF,EAAA2tC,EAAAttC,EAAAM,GACA2Z,EAAA,GACA80B,GAAA,EAiBA,OAfAxB,EAAAjtC,EAAA,SAAAyR,GACAA,EAAAmG,SAAAvY,EAAA4H,IACA0S,EAAAzX,KAAAuP,GAGAA,EAAAgG,QAAApY,EAAA4H,EAAA5H,EAAA6H,KACAunC,GAAA,KAMAlqC,EAAA8oC,YAAAoB,IACA90B,EAAA,IAEAA,GAWAzS,EAAA,SAAAlH,EAAAN,EAAA6E,GACA,IAAAlF,EAAA2tC,EAAAttC,EAAAM,GACA2Z,EAAA,GACA80B,GAAA,EAiBA,OAfAxB,EAAAjtC,EAAA,SAAAyR,GACAA,EAAAoG,SAAAxY,EAAA6H,IACAyS,EAAAzX,KAAAuP,GAGAA,EAAAgG,QAAApY,EAAA4H,EAAA5H,EAAA6H,KACAunC,GAAA,KAMAlqC,EAAA8oC,YAAAoB,IACA90B,EAAA,IAEAA,0CClUA,IAAA/D,EAAYtX,EAAQ,QACpBD,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtBga,EAAmBha,EAAQ,QAE3B+K,EAAAC,QAAA,WA4ZA,SAAAolC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAYA,MAXA,kBAAAH,GACAG,EAAAhE,SAAA6D,EAAA,KAEA,IAAAA,EAAA96B,QAAA,OAEAi7B,IAAA,IAAAF,EAAAG,WAAAF,KAGAC,EAAAH,EAGAG,EAOA,SAAAE,EAAAnlC,GACA,YAAAc,IAAAd,GAAA,OAAAA,GAAA,SAAAA,EAQA,SAAAolC,EAAAC,EAAAC,EAAAC,GACA,IAAAt5B,EAAAya,SAAA8e,YACAN,EAAAvwC,EAAA8wC,eAAAJ,GACAK,EAAAz5B,EAAA05B,iBAAAN,GAAAC,GACAM,EAAA35B,EAAA05B,iBAAAT,GAAAI,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAA5/B,OAAAw9B,kBAEA,OAAAkC,GAAAC,EACA5wC,KAAA0R,IACAi/B,EAAAhB,EAAAa,EAAAL,EAAAE,GAAAQ,EACAD,EAAAjB,EAAAe,EAAAV,EAAAK,GAAAQ,GAGA,OApcApxC,EAAAqxC,YAAA,WACA,OAAArxC,EAAAiN,MAAAjN,EAAAqY,MAAAtD,UAAA,OAAAJ,MAAApK,KAAAwK,UAAA,IACAsR,OAAA,SAAA9R,EAAAmD,EAAAoI,EAAA/Z,GACA,IAAAmgB,EAAAxO,EAAAnD,IAAA,GACA+H,EAAAwD,EAAAvL,GAEA,WAAAA,EAEAmD,EAAAnD,GAAAvU,EAAAsxC,WAAAprB,EAAA5J,GACK,UAAA/H,EAELmD,EAAAnD,GAAAvU,EAAAiN,MAAAiZ,EAAA,CAAApM,EAAAy3B,iBAAAj1B,EAAAnS,MAAAmS,IAEAtc,EAAAimB,QAAA1R,EAAAmD,EAAAoI,EAAA/Z,OAMA/F,EAAAsxC,WAAA,WACA,OAAAtxC,EAAAiN,MAAAjN,EAAAqY,MAAAtD,UAAA,OAAAJ,MAAApK,KAAAwK,UAAA,IACAsR,OAAA,SAAA9R,EAAAmD,EAAAoI,EAAA/Z,GACA,aAAAwO,GAAA,UAAAA,EAAA,CACA,IACAjS,EAAA6H,EAAAoE,EADAijC,EAAA1xB,EAAAvL,GAAA3Q,OAOA,IAJA8T,EAAAnD,KACAmD,EAAAnD,GAAA,IAGAjS,EAAA,EAAgBA,EAAAkvC,IAAUlvC,EAC1BiM,EAAAuR,EAAAvL,GAAAjS,GACA6H,EAAAnK,EAAAwG,eAAA+H,EAAApE,KAAA,UAAAoK,EAAA,qBAEAjS,GAAAoV,EAAAnD,GAAA3Q,QACA8T,EAAAnD,GAAA7Q,KAAA,KAGAgU,EAAAnD,GAAAjS,GAAA6H,MAAAoE,EAAApE,MAAAoE,EAAApE,OAAAuN,EAAAnD,GAAAjS,GAAA6H,KAGAnK,EAAAiN,MAAAyK,EAAAnD,GAAAjS,GAAA,CAAAwX,EAAAy3B,iBAAApnC,GAAAoE,IAGAvO,EAAAiN,MAAAyK,EAAAnD,GAAAjS,GAAAiM,QAIAvO,EAAAimB,QAAA1R,EAAAmD,EAAAoI,EAAA/Z,OAMA/F,EAAAsnC,MAAA,SAAAmK,EAAAC,GACA,GAAA1xC,EAAAmC,QAAAsvC,IAAA38B,MAAAlI,UAAA1G,OACA,OAAAurC,EAAAvrC,OAAAwrC,GAEA,IAAAC,EAAA,GAQA,OANA3xC,EAAAsH,KAAAmqC,EAAA,SAAAtrC,GACAurC,EAAAvrC,IACAwrC,EAAAjuC,KAAAyC,KAIAwrC,GAEA3xC,EAAA4mC,UAAA9xB,MAAAlI,UAAAg6B,UACA,SAAA5yB,EAAA/N,EAAA8G,GACA,OAAAiH,EAAA4yB,UAAA3gC,EAAA8G,IAEA,SAAAiH,EAAA/N,EAAA8G,GACAA,OAAAZ,IAAAY,EAAAiH,EAAAjH,EACA,QAAAzK,EAAA,EAAA4J,EAAA8H,EAAApQ,OAAuCtB,EAAA4J,IAAU5J,EACjD,GAAA2D,EAAAsE,KAAAwC,EAAAiH,EAAA1R,KAAA0R,GACA,OAAA1R,EAGA,UAEAtC,EAAAsqC,cAAA,SAAAsH,EAAAF,EAAAG,GAEA7xC,EAAAkd,cAAA20B,KACAA,GAAA,GAEA,QAAAvvC,EAAAuvC,EAAA,EAA8BvvC,EAAAsvC,EAAAhuC,OAA0BtB,IAAA,CACxD,IAAAwvC,EAAAF,EAAAtvC,GACA,GAAAovC,EAAAI,GACA,OAAAA,IAIA9xC,EAAA+xC,kBAAA,SAAAH,EAAAF,EAAAG,GAEA7xC,EAAAkd,cAAA20B,KACAA,EAAAD,EAAAhuC,QAEA,QAAAtB,EAAAuvC,EAAA,EAA8BvvC,GAAA,EAAQA,IAAA,CACtC,IAAAwvC,EAAAF,EAAAtvC,GACA,GAAAovC,EAAAI,GACA,OAAAA,IAMA9xC,EAAAyY,SAAA,SAAAwM,GACA,OAAAtc,MAAA4jC,WAAAtnB,KAAA/M,SAAA+M,IAEAjlB,EAAAgyC,aAAA,SAAAvpC,EAAAC,EAAAgb,GACA,OAAAnjB,KAAAuY,IAAArQ,EAAAC,GAAAgb,GAEA1jB,EAAAiyC,YAAA,SAAAxpC,EAAAib,GACA,IAAAwuB,EAAA3xC,KAAAub,MAAArT,GACA,OAAAypC,EAAAxuB,EAAAjb,GAAAypC,EAAAxuB,EAAAjb,GAEAzI,EAAA+H,IAAA,SAAAiM,GACA,OAAAA,EAAAm+B,OAAA,SAAApqC,EAAAsD,GACA,OAAA1C,MAAA0C,GAGAtD,EAFAxH,KAAAwH,MAAAsD,IAGGmG,OAAA4gC,oBAEHpyC,EAAAiS,IAAA,SAAA+B,GACA,OAAAA,EAAAm+B,OAAA,SAAAlgC,EAAA5G,GACA,OAAA1C,MAAA0C,GAGA4G,EAFA1R,KAAA0R,MAAA5G,IAGGmG,OAAAw9B,oBAEHhvC,EAAAo7B,KAAA76B,KAAA66B,KACA,SAAA3yB,GACA,OAAAlI,KAAA66B,KAAA3yB,IAEA,SAAAA,GAEA,OADAA,KACA,IAAAA,GAAAE,MAAAF,GACAA,EAEAA,EAAA,QAEAzI,EAAA06B,MAAAn6B,KAAAm6B,MACA,SAAAjyB,GACA,OAAAlI,KAAAm6B,MAAAjyB,IAEA,SAAAA,GACA,IAAA4pC,EAAA9xC,KAAA+xC,IAAA7pC,GAAAlI,KAAAgyC,OAGAC,EAAAjyC,KAAAub,MAAAu2B,GACAI,EAAAhqC,IAAAlI,KAAA2Y,IAAA,GAAAs5B,GAEA,OAAAC,EAAAD,EAAAH,GAEAryC,EAAA2iB,UAAA,SAAA+vB,GACA,OAAAA,GAAAnyC,KAAAiZ,GAAA,MAEAxZ,EAAA2yC,UAAA,SAAAC,GACA,OAAAA,GAAA,IAAAryC,KAAAiZ,KAGAxZ,EAAAm4B,kBAAA,SAAA0a,EAAAC,GACA,IAAAC,EAAAD,EAAArqC,EAAAoqC,EAAApqC,EACAuqC,EAAAF,EAAApqC,EAAAmqC,EAAAnqC,EACAuqC,EAAA1yC,KAAAgkB,KAAAwuB,IAAAC,KAEAtwB,EAAAniB,KAAA2yC,MAAAF,EAAAD,GAMA,OAJArwB,GAAA,GAAAniB,KAAAiZ,KACAkJ,GAAA,EAAAniB,KAAAiZ,IAGA,CACAkJ,QACA0V,SAAA6a,IAGAjzC,EAAAmzC,sBAAA,SAAA9D,EAAAC,GACA,OAAA/uC,KAAAgkB,KAAAhkB,KAAA2Y,IAAAo2B,EAAA7mC,EAAA4mC,EAAA5mC,EAAA,GAAAlI,KAAA2Y,IAAAo2B,EAAA5mC,EAAA2mC,EAAA3mC,EAAA,KAEA1I,EAAAolC,WAAA,SAAAgO,GACA,OAAAA,EAAA,YAEApzC,EAAAmS,YAAA,SAAAkhC,EAAAC,EAAAC,EAAA7nC,GAMA,IAAA6G,EAAA8gC,EAAApiC,KAAAqiC,EAAAD,EACA7f,EAAA8f,EACA5gC,EAAA6gC,EAAAtiC,KAAAqiC,EAAAC,EAEAC,EAAAjzC,KAAAgkB,KAAAhkB,KAAA2Y,IAAAsa,EAAA/qB,EAAA8J,EAAA9J,EAAA,GAAAlI,KAAA2Y,IAAAsa,EAAA9qB,EAAA6J,EAAA7J,EAAA,IACA+qC,EAAAlzC,KAAAgkB,KAAAhkB,KAAA2Y,IAAAxG,EAAAjK,EAAA+qB,EAAA/qB,EAAA,GAAAlI,KAAA2Y,IAAAxG,EAAAhK,EAAA8qB,EAAA9qB,EAAA,IAEAgrC,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAGAC,EAAA/qC,MAAA+qC,GAAA,EAAAA,EACAC,EAAAhrC,MAAAgrC,GAAA,EAAAA,EAEA,IAAAC,EAAAloC,EAAAgoC,EACAG,EAAAnoC,EAAAioC,EAEA,OACAphC,SAAA,CACA9J,EAAA+qB,EAAA/qB,EAAAmrC,GAAAlhC,EAAAjK,EAAA8J,EAAA9J,GACAC,EAAA8qB,EAAA9qB,EAAAkrC,GAAAlhC,EAAAhK,EAAA6J,EAAA7J,IAEAgK,KAAA,CACAjK,EAAA+qB,EAAA/qB,EAAAorC,GAAAnhC,EAAAjK,EAAA8J,EAAA9J,GACAC,EAAA8qB,EAAA9qB,EAAAmrC,GAAAnhC,EAAAhK,EAAA6J,EAAA7J,MAIA1I,EAAA8zC,QAAAtiC,OAAAsiC,SAAA,MACA9zC,EAAAkS,oBAAA,SAAA7D,GAMA,IAUA/L,EAAAyxC,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BA9E,EAhEA+E,GAAAjmC,GAAA,IAAAjM,IAAA,SAAAqN,GACA,OACAkC,MAAAlC,EAAAT,OACAulC,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAA1wC,OAEA,IAAAtB,EAAA,EAAaA,EAAAmyC,IAAenyC,EAE5B,GADA0xC,EAAAM,EAAAhyC,IACA0xC,EAAAriC,MAAAV,KAAA,CAMA,GAFA8iC,EAAAzxC,EAAA,EAAAgyC,EAAAhyC,EAAA,QACA2xC,EAAA3xC,EAAAmyC,EAAA,EAAAH,EAAAhyC,EAAA,QACA2xC,MAAAtiC,MAAAV,KAAA,CACA,IAAAyjC,EAAAT,EAAAtiC,MAAAlJ,EAAAurC,EAAAriC,MAAAlJ,EAGAurC,EAAAO,OAAA,IAAAG,GAAAT,EAAAtiC,MAAAjJ,EAAAsrC,EAAAriC,MAAAjJ,GAAAgsC,EAAA,GAGAX,KAAApiC,MAAAV,KACA+iC,EAAAQ,GAAAR,EAAAO,QACIN,KAAAtiC,MAAAV,KACJ+iC,EAAAQ,GAAAT,EAAAQ,OACIhzC,KAAA65B,KAAA2Y,EAAAQ,UAAAhzC,KAAA65B,KAAA4Y,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAAjyC,EAAA,EAAaA,EAAAmyC,EAAA,IAAmBnyC,EAChC0xC,EAAAM,EAAAhyC,GACA2xC,EAAAK,EAAAhyC,EAAA,GACA0xC,EAAAriC,MAAAV,MAAAgjC,EAAAtiC,MAAAV,OAIAjR,EAAAgyC,aAAAgC,EAAAO,OAAA,EAAAhzC,KAAAuyC,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,OACAF,EAAA9zC,KAAA2Y,IAAAg7B,EAAA,GAAA3zC,KAAA2Y,IAAAi7B,EAAA,GACAE,GAAA,IAIAD,EAAA,EAAA7zC,KAAAgkB,KAAA8vB,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAAjyC,EAAA,EAAaA,EAAAmyC,IAAenyC,EAC5B0xC,EAAAM,EAAAhyC,GACA0xC,EAAAriC,MAAAV,OAIA8iC,EAAAzxC,EAAA,EAAAgyC,EAAAhyC,EAAA,QACA2xC,EAAA3xC,EAAAmyC,EAAA,EAAAH,EAAAhyC,EAAA,QACAyxC,MAAApiC,MAAAV,OACAs+B,GAAAyE,EAAAriC,MAAAlJ,EAAAsrC,EAAApiC,MAAAlJ,GAAA,EACAurC,EAAAriC,MAAAW,sBAAA0hC,EAAAriC,MAAAlJ,EAAA8mC,EACAyE,EAAAriC,MAAAa,sBAAAwhC,EAAAriC,MAAAjJ,EAAA6mC,EAAAyE,EAAAQ,IAEAP,MAAAtiC,MAAAV,OACAs+B,GAAA0E,EAAAtiC,MAAAlJ,EAAAurC,EAAAriC,MAAAlJ,GAAA,EACAurC,EAAAriC,MAAAc,kBAAAuhC,EAAAriC,MAAAlJ,EAAA8mC,EACAyE,EAAAriC,MAAAgB,kBAAAqhC,EAAAriC,MAAAjJ,EAAA6mC,EAAAyE,EAAAQ,MAIAx0C,EAAAqS,SAAA,SAAAo/B,EAAArwC,EAAAuzC,GACA,OAAAA,EACAvzC,GAAAqwC,EAAA7tC,OAAA,EAAA6tC,EAAA,GAAAA,EAAArwC,EAAA,GAEAA,GAAAqwC,EAAA7tC,OAAA,EAAA6tC,IAAA7tC,OAAA,GAAA6tC,EAAArwC,EAAA,IAEApB,EAAAoS,aAAA,SAAAq/B,EAAArwC,EAAAuzC,GACA,OAAAA,EACAvzC,GAAA,EAAAqwC,IAAA7tC,OAAA,GAAA6tC,EAAArwC,EAAA,GAEAA,GAAA,EAAAqwC,EAAA,GAAAA,EAAArwC,EAAA,IAGApB,EAAA40C,QAAA,SAAAp4B,EAAAV,GACA,IAEA+4B,EAFAxC,EAAA9xC,KAAA8iB,MAAArjB,EAAA06B,MAAAle,IACAs4B,EAAAt4B,EAAAjc,KAAA2Y,IAAA,GAAAm5B,GAuBA,OAlBAwC,EAFA/4B,EACAg5B,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,GAGAD,EAAAt0C,KAAA2Y,IAAA,GAAAm5B,IAGAryC,EAAA6mC,iBAAA,WACA,2BAAAjtB,OACA,SAAA3T,GACAA,KAGA2T,OAAA8sB,uBACA9sB,OAAAm7B,6BACAn7B,OAAAo7B,0BACAp7B,OAAAq7B,wBACAr7B,OAAAs7B,yBACA,SAAAjvC,GACA,OAAA2T,OAAAu7B,WAAAlvC,EAAA,SAZA,GAgBAjG,EAAAwuC,oBAAA,SAAA4G,EAAA5zC,GACA,IAAAoX,EAAAI,EACA9X,EAAAk0C,EAAAC,eAAAD,EACAhsC,EAAAgsC,EAAA19B,QAAA09B,EAAAE,WACAC,EAAAnsC,EAAAosC,wBAEAC,EAAAv0C,EAAAu0C,QACAA,KAAA7xC,OAAA,GACAgV,EAAA68B,EAAA,GAAAC,QACA18B,EAAAy8B,EAAA,GAAAE,UAGA/8B,EAAA1X,EAAAw0C,QACA18B,EAAA9X,EAAAy0C,SAMA,IAAAhwC,EAAA4mC,WAAAvsC,EAAA41C,SAAAxsC,EAAA,iBACAxD,EAAA2mC,WAAAvsC,EAAA41C,SAAAxsC,EAAA,gBACAvD,EAAA0mC,WAAAvsC,EAAA41C,SAAAxsC,EAAA,kBACAtD,EAAAymC,WAAAvsC,EAAA41C,SAAAxsC,EAAA,mBACA/D,EAAAkwC,EAAAhwC,MAAAgwC,EAAAjwC,KAAAK,EAAAE,EACAL,EAAA+vC,EAAA7vC,OAAA6vC,EAAA9vC,IAAAG,EAAAE,EAOA,OAHA8S,EAAArY,KAAAub,OAAAlD,EAAA28B,EAAAjwC,KAAAK,GAAA,EAAAyD,EAAA/D,MAAA7D,EAAAq0C,yBACA78B,EAAAzY,KAAAub,OAAA9C,EAAAu8B,EAAA9vC,IAAAG,GAAA,EAAAwD,EAAA5D,OAAAhE,EAAAq0C,yBAEA,CACAptC,EAAAmQ,EACAlQ,EAAAsQ,IAqDAhZ,EAAA81C,mBAAA,SAAApF,GACA,OAAAD,EAAAC,EAAA,4BAGA1wC,EAAA+1C,oBAAA,SAAArF,GACA,OAAAD,EAAAC,EAAA,8BAKA1wC,EAAAg2C,kBAAA,SAAAC,EAAAh0C,EAAAi0C,GAGA,OAFAj0C,EAAAjC,EAAA41C,SAAAK,EAAAh0C,GAEAA,EAAAoT,QAAA,QAAA6gC,EAAA5J,SAAArqC,EAAA,IAAAqqC,SAAArqC,EAAA,KAKAjC,EAAA8wC,eAAA,SAAAJ,GACA,IAAAyF,EAAAzF,EAAAH,WAIA,OAHA4F,KAAAC,OACAD,IAAAC,MAEAD,GAEAn2C,EAAAq2C,gBAAA,SAAA3F,GACA,IAAAuF,EAAAj2C,EAAA8wC,eAAAJ,GACA,IAAAuF,EACA,OAAAvF,EAAA4F,YAGA,IAAAA,EAAAL,EAAAK,YACA3wC,EAAA3F,EAAAg2C,kBAAAC,EAAA,eAAAK,GACAzwC,EAAA7F,EAAAg2C,kBAAAC,EAAA,gBAAAK,GAEAvJ,EAAAuJ,EAAA3wC,EAAAE,EACA0wC,EAAAv2C,EAAA81C,mBAAApF,GACA,OAAA/nC,MAAA4tC,GAAAxJ,EAAAxsC,KAAA0R,IAAA86B,EAAAwJ,IAEAv2C,EAAAw2C,iBAAA,SAAA9F,GACA,IAAAuF,EAAAj2C,EAAA8wC,eAAAJ,GACA,IAAAuF,EACA,OAAAvF,EAAA+F,aAGA,IAAAA,EAAAR,EAAAQ,aACA7wC,EAAA5F,EAAAg2C,kBAAAC,EAAA,cAAAQ,GACA3wC,EAAA9F,EAAAg2C,kBAAAC,EAAA,iBAAAQ,GAEA9J,EAAA8J,EAAA7wC,EAAAE,EACA4wC,EAAA12C,EAAA+1C,oBAAArF,GACA,OAAA/nC,MAAA+tC,GAAA/J,EAAApsC,KAAA0R,IAAA06B,EAAA+J,IAEA12C,EAAA41C,SAAA,SAAAe,EAAAC,GACA,OAAAD,EAAAE,aACAF,EAAAE,aAAAD,GACA7kB,SAAA8e,YAAAG,iBAAA2F,EAAA,MAAAG,iBAAAF,IAEA52C,EAAA+2C,YAAA,SAAAv1C,EAAAw1C,GACA,IAAAC,EAAAz1C,EAAAq0C,wBAAAmB,GAAA,qBAAAp9B,eAAAs9B,kBAAA,EACA,OAAAD,EAAA,CAIA,IAAA7tC,EAAA5H,EAAA4H,OACA5D,EAAAhE,EAAAgE,OACAH,EAAA7D,EAAA6D,MAEA+D,EAAA5D,SAAAyxC,EACA7tC,EAAA/D,QAAA4xC,EACAz1C,EAAA6E,IAAAkI,MAAA0oC,KAKA7tC,EAAA0a,MAAAte,QAAA4D,EAAA0a,MAAAze,QACA+D,EAAA0a,MAAAte,SAAA,KACA4D,EAAA0a,MAAAze,QAAA,QAIArF,EAAA+G,WAAA,SAAAowC,EAAAzwC,EAAAE,GACA,OAAAF,EAAA,IAAAywC,EAAA,MAAAvwC,GAEA5G,EAAAq/B,YAAA,SAAAh5B,EAAAY,EAAAmwC,EAAAziB,GACAA,KAAA,GACA,IAAA/yB,EAAA+yB,EAAA/yB,KAAA+yB,EAAA/yB,MAAA,GACAy1C,EAAA1iB,EAAA2iB,eAAA3iB,EAAA2iB,gBAAA,GAEA3iB,EAAA1tB,WACArF,EAAA+yB,EAAA/yB,KAAA,GACAy1C,EAAA1iB,EAAA2iB,eAAA,GACA3iB,EAAA1tB,QAGAZ,EAAAY,OACA,IAAAswC,EAAA,EACAv3C,EAAAsH,KAAA8vC,EAAA,SAAAI,QAEArrC,IAAAqrC,GAAA,OAAAA,IAAA,IAAAx3C,EAAAmC,QAAAq1C,GACAD,EAAAv3C,EAAAuH,YAAAlB,EAAAzE,EAAAy1C,EAAAE,EAAAC,GACIx3C,EAAAmC,QAAAq1C,IAGJx3C,EAAAsH,KAAAkwC,EAAA,SAAAC,QAEAtrC,IAAAsrC,GAAA,OAAAA,GAAAz3C,EAAAmC,QAAAs1C,KACAF,EAAAv3C,EAAAuH,YAAAlB,EAAAzE,EAAAy1C,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAAzzC,OAAA,EACA,GAAA8zC,EAAAN,EAAAxzC,OAAA,CACA,QAAAtB,EAAA,EAAkBA,EAAAo1C,EAAWp1C,WAC7BV,EAAAy1C,EAAA/0C,IAEA+0C,EAAA/hC,OAAA,EAAAoiC,GAEA,OAAAH,GAEAv3C,EAAAuH,YAAA,SAAAlB,EAAAzE,EAAAy1C,EAAAE,EAAAzL,GACA,IAAApiC,EAAA9H,EAAAkqC,GAQA,OAPApiC,IACAA,EAAA9H,EAAAkqC,GAAAzlC,EAAAkB,YAAAukC,GAAAzmC,MACAgyC,EAAA3zC,KAAAooC,IAEApiC,EAAA6tC,IACAA,EAAA7tC,GAEA6tC,GAEAv3C,EAAAmiC,mBAAA,SAAAiV,GACA,IAAAO,EAAA,EAQA,OAPA33C,EAAAsH,KAAA8vC,EAAA,SAAAI,GACAx3C,EAAAmC,QAAAq1C,IACAA,EAAA5zC,OAAA+zC,IACAA,EAAAH,EAAA5zC,UAIA+zC,GAGA33C,EAAAoX,QAKA,SAAA/L,GAMA,OAJAA,aAAAusC,iBACAvsC,EAAAxL,EAAA0G,OAAAsC,cAGAuO,EAAA/L,IAVA,SAAAA,GAEA,OADA6U,QAAA23B,MAAA,uBACAxsC,GAWArL,EAAAqT,cAAA,SAAAykC,GAEA,OAAAA,aAAAC,cACAD,EACA93C,EAAAoX,MAAA0gC,GAAAE,SAAA,IAAAC,OAAA,IAAAhgC,iDCrnBA,IAAAjY,EAAcF,EAAQ,QACtB+Z,EAAY/Z,EAAQ,QAQpB,SAAAs6B,EAAAC,EAAAC,GACA,IAKA9c,EACAsd,EACAod,EAPAn6B,EAAA,GASA,GAAAsc,EAAA7b,UAAA6b,EAAA7b,SAAA,EACA05B,EAAA7d,EAAA7b,aACE,CACF,IAAA25B,EAAAn4C,EAAA40C,QAAAta,EAAAvyB,IAAAuyB,EAAAroB,KAAA,GACAimC,EAAAl4C,EAAA40C,QAAAuD,GAAA9d,EAAAN,SAAA,OAEAe,EAAAT,EAAAS,eACA3uB,IAAA2uB,IAEAtd,EAAAjd,KAAA2Y,IAAA,GAAA4hB,GACAod,EAAA33C,KAAAod,KAAAu6B,EAAA16B,MAGA,IAAA46B,EAAA73C,KAAA8iB,MAAAiX,EAAAroB,IAAAimC,KACAG,EAAA93C,KAAAod,KAAA2c,EAAAvyB,IAAAmwC,KAGAl4C,EAAAkd,cAAAmd,EAAApoB,MAAAjS,EAAAkd,cAAAmd,EAAAtyB,OAAAsyB,EAAA7b,UAEAxe,EAAAiyC,aAAA5X,EAAAtyB,IAAAsyB,EAAApoB,KAAAooB,EAAA7b,SAAA05B,EAAA,OACAE,EAAA/d,EAAApoB,IACAomC,EAAAhe,EAAAtyB,KAIA,IAAAuwC,GAAAD,EAAAD,GAAAF,EAGAI,EADAt4C,EAAAgyC,aAAAsG,EAAA/3C,KAAAub,MAAAw8B,GAAAJ,EAAA,KACA33C,KAAAub,MAAAw8B,GAEA/3C,KAAAod,KAAA26B,GAGAxd,EAAA,EACAod,EAAA,IACApd,EAAAv6B,KAAA2Y,IAAA,KAAA3Y,KAAA8iB,MAAArjB,EAAA06B,MAAAwd,KACAE,EAAA73C,KAAAub,MAAAs8B,EAAAtd,KACAud,EAAA93C,KAAAub,MAAAu8B,EAAAvd,MAEA/c,EAAAra,UAAAyI,IAAAkuB,EAAApoB,IAAAooB,EAAApoB,IAAAmmC,GACA,QAAA93B,EAAA,EAAgBA,EAAAg4B,IAAeh4B,EAC/BvC,EAAAra,KAAAnD,KAAAub,OAAAs8B,EAAA93B,EAAA43B,GAAApd,MAIA,OAFA/c,EAAAra,UAAAyI,IAAAkuB,EAAAtyB,IAAAsyB,EAAAtyB,IAAAswC,GAEAt6B,EAGAlT,EAAAC,QAAA,SAAA2C,GAEA,IAAAvN,EAAAF,EAAAE,KAEAuN,EAAAurB,gBAAAnf,EAAA9V,OAAA,CACA0N,cAAA,SAAApG,GACA,wBAAAA,GACAA,EAEAwO,EAAAjN,UAAA6E,cAAAlH,KAAAhJ,KAAA8J,IAGAwuB,uBAAA,WACA,IAAAr1B,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA+b,EAAA1b,EAAA2X,MAKA,GAAA+D,EAAAse,YAAA,CACA,IAAAmY,EAAAv4C,EAAAo7B,KAAA52B,EAAAyN,KACAumC,EAAAx4C,EAAAo7B,KAAA52B,EAAAuD,KAEAwwC,EAAA,GAAAC,EAAA,EAEAh0C,EAAAuD,IAAA,EACKwwC,EAAA,GAAAC,EAAA,IAELh0C,EAAAyN,IAAA,GAIA,IAAAwmC,OAAAtsC,IAAA2V,EAAA7P,UAAA9F,IAAA2V,EAAA42B,aACAC,OAAAxsC,IAAA2V,EAAA/Z,UAAAoE,IAAA2V,EAAA82B,kBAEAzsC,IAAA2V,EAAA7P,IACAzN,EAAAyN,IAAA6P,EAAA7P,SACI9F,IAAA2V,EAAA42B,eACJ,OAAAl0C,EAAAyN,IACAzN,EAAAyN,IAAA6P,EAAA42B,aAEAl0C,EAAAyN,IAAA1R,KAAA0R,IAAAzN,EAAAyN,IAAA6P,EAAA42B,oBAIAvsC,IAAA2V,EAAA/Z,IACAvD,EAAAuD,IAAA+Z,EAAA/Z,SACIoE,IAAA2V,EAAA82B,eACJ,OAAAp0C,EAAAuD,IACAvD,EAAAuD,IAAA+Z,EAAA82B,aAEAp0C,EAAAuD,IAAAxH,KAAAwH,IAAAvD,EAAAuD,IAAA+Z,EAAA82B,eAIAH,IAAAE,GAKAn0C,EAAAyN,KAAAzN,EAAAuD,MACA0wC,EACAj0C,EAAAuD,IAAAvD,EAAAyN,IAAA,EAEAzN,EAAAyN,IAAAzN,EAAAuD,IAAA,GAKAvD,EAAAyN,MAAAzN,EAAAuD,MACAvD,EAAAuD,MAEA+Z,EAAAse,aACA57B,EAAAyN,QAIA6nB,aAAA55B,EACA+5B,yBAAA/5B,EAEA4gB,WAAA,WACA,IAAAtc,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA+b,EAAA1b,EAAA2X,MAMAgc,EAAAv1B,EAAAs1B,eACAC,EAAAx5B,KAAAwH,IAAA,EAAAgyB,GAEA,IAAA8e,EAAA,CACA9e,WACA9nB,IAAA6P,EAAA7P,IACAlK,IAAA+Z,EAAA/Z,IACA+yB,UAAAhZ,EAAAgZ,UACAtc,SAAAxe,EAAAwG,eAAAsb,EAAAg3B,cAAAh3B,EAAAtD,WAEAT,EAAAvZ,EAAAuZ,MAAAqc,EAAAye,EAAAr0C,GAEAA,EAAAy1B,2BAIAz1B,EAAAuD,IAAA/H,EAAA+H,IAAAgW,GACAvZ,EAAAyN,IAAAjS,EAAAiS,IAAA8L,GAEA+D,EAAA/gB,SACAgd,EAAAhd,UAEAyD,EAAAkS,MAAAlS,EAAAuD,IACAvD,EAAAoyB,IAAApyB,EAAAyN,MAEAzN,EAAAkS,MAAAlS,EAAAyN,IACAzN,EAAAoyB,IAAApyB,EAAAuD,MAGAka,qBAAA,WACA,IAAAzd,EAAAjD,KACAiD,EAAA21B,eAAA31B,EAAAuZ,MAAApJ,QACAnQ,EAAAygC,cAAAzgC,EAAAuZ,MAAA1I,QAAA,GAEAwE,EAAAjN,UAAAqV,qBAAA1X,KAAA/F,0CC/LAqG,EAAAC,QAAA,SAAA2C,GAEAA,EAAAsrC,UAAA,SAAA9sC,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,YAEA,IAAAsD,EAAAxB,EAAAhI,wCCDA,IAAAjE,EAAcF,EAAQ,QAEtBk5C,EAAA,WACAC,EAAA,WACAC,EAAAD,EAAA,iBACAE,EAAAF,EAAA,mBACAG,EAAA,0CAOAC,EAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,EAAA9mC,EAAA2jC,GACA,IAAAvrC,EAAArL,EAAA41C,SAAA3iC,EAAA2jC,GACArrC,EAAAF,KAAAG,MAAA,qBACA,OAAAD,EAAAiG,OAAAjG,EAAA,SAAAY,EAQA,SAAA6tC,EAAA5wC,EAAAnF,GACA,IAAA6f,EAAA1a,EAAA0a,MAIAm2B,EAAA7wC,EAAA8wC,aAAA,UACAC,EAAA/wC,EAAA8wC,aAAA,SAoBA,GAjBA9wC,EAAA4vC,GAAA,CACAoB,QAAA,CACA50C,OAAAy0C,EACA50C,MAAA80C,EACAr2B,MAAA,CACAljB,QAAAkjB,EAAAljB,QACA4E,OAAAse,EAAAte,OACAH,MAAAye,EAAAze,SAQAye,EAAAljB,QAAAkjB,EAAAljB,SAAA,QAEA,OAAAu5C,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAN,EAAA3wC,EAAA,cACA+C,IAAAkuC,IACAjxC,EAAA/D,MAAAg1C,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAA7wC,EAAA0a,MAAAte,OAIA4D,EAAA5D,OAAA4D,EAAA/D,OAAApB,EAAA8B,QAAAu0C,aAAA,OACG,CACH,IAAAC,EAAAR,EAAA3wC,EAAA,eACA+C,IAAAkuC,IACAjxC,EAAA5D,OAAA+0C,GAKA,OAAAnxC,EAQA,IAAAoxC,EAAA,WACA,IAAAC,GAAA,EACA,IACA,IAAA10C,EAAA2G,OAAAC,eAAA,GAAwC,WACxCE,IAAA,WACA4tC,GAAA,KAGA7gC,OAAA4xB,iBAAA,SAAAzlC,GACE,MAAA7E,IAGF,OAAAu5C,EAZA,GAiBAC,IAAAF,GAAA,CAA2DG,SAAA,GAE3D,SAAAnP,EAAA4E,EAAAjmC,EAAA8J,GACAm8B,EAAA5E,iBAAArhC,EAAA8J,EAAAymC,GAGA,SAAAjP,EAAA2E,EAAAjmC,EAAA8J,GACAm8B,EAAA3E,oBAAAthC,EAAA8J,EAAAymC,GAGA,SAAAE,EAAAzwC,EAAA3I,EAAAiH,EAAAC,EAAAmyC,GACA,OACA1wC,OACA3I,QACAgJ,OAAAqwC,GAAA,KACApyC,OAAA0D,IAAA1D,IAAA,KACAC,OAAAyD,IAAAzD,IAAA,MAIA,SAAAoyC,EAAAC,EAAAv5C,GACA,IAAA2I,EAAAkvC,EAAA0B,EAAA5wC,OAAA4wC,EAAA5wC,KACAuR,EAAA1b,EAAAwuC,oBAAAuM,EAAAv5C,GACA,OAAAo5C,EAAAzwC,EAAA3I,EAAAka,EAAAjT,EAAAiT,EAAAhT,EAAAqyC,GAGA,SAAAC,EAAA11B,EAAAC,GACA,IAAA01B,GAAA,EACApmC,EAAA,GAEA,kBACAA,EAAAC,MAAAlI,UAAA+H,MAAApK,KAAAwK,WACAwQ,KAAAhkB,KAEA05C,IACAA,GAAA,EACAj7C,EAAA6mC,iBAAAt8B,KAAAqP,OAAA,WACAqhC,GAAA,EACA31B,EAAArQ,MAAAsQ,EAAA1Q,OAOA,SAAAqmC,EAAAxM,GACA,IAAAyM,EAAAppB,SAAAqpB,cAAA,OACAC,EAAApC,EAAA,eACAqC,EAAA,IACAx3B,EACA,oHAUAq3B,EAAAr3B,MAAAy3B,QAAAz3B,EACAq3B,EAAAK,UAAAH,EACAF,EAAAM,UACA,eAAAJ,EAAA,mBAAAv3B,EAAA,yCAGAw3B,EAAA,aACAA,EAAA,4CAKAD,EAAA,mBAAAv3B,EAAA,qFAUA,IAAA43B,EAAAP,EAAAQ,WAAA,GACAC,EAAAT,EAAAQ,WAAA,GAEAR,EAAAU,OAAA,WACAH,EAAAI,WAAAR,EACAI,EAAAK,UAAAT,EACAM,EAAAE,WAAAR,EACAM,EAAAG,UAAAT,GAEA,IAAAU,EAAA,WACAb,EAAAU,SACAnN,KAMA,OAHAlD,EAAAkQ,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAlQ,EAAAoQ,EAAA,SAAAI,EAAAC,KAAAL,EAAA,WAEAT,EAIA,SAAAe,EAAA9L,EAAA1B,GACA,IAAAyN,EAAA/L,EAAA4I,KAAA5I,EAAA4I,GAAA,IACAoD,EAAAD,EAAAE,YAAA,SAAAn7C,GACAA,EAAAo7C,gBAAAnD,GACAzK,KAIA1uC,EAAAsH,KAAA8xC,EAAA,SAAAjvC,GACAqhC,EAAA4E,EAAAjmC,EAAAiyC,KAQAD,EAAAI,SAAAnM,EAAAoM,aAEApM,EAAAqM,UAAAz9B,IAAAk6B,GAGA,SAAAwD,EAAAtM,GACA,IAAA+L,EAAA/L,EAAA4I,IAAA,GACAoD,EAAAD,EAAAE,YAEAD,IACAp8C,EAAAsH,KAAA8xC,EAAA,SAAAjvC,GACAshC,EAAA2E,EAAAjmC,EAAAiyC,YAGAD,EAAAE,aAGAjM,EAAAqM,UAAAE,OAAAzD,GAGA,SAAA0D,EAAAxM,EAAAn8B,EAAAzS,GACA,IAAA26C,EAAA/L,EAAA4I,KAAA5I,EAAA4I,GAAA,IAGAmC,EAAAgB,EAAAhB,QAAAD,EAAAF,EAAA,WACA,GAAAmB,EAAAhB,QACA,OAAAlnC,EAAA2mC,EAAA,SAAAp5C,OAMA06C,EAAA9L,EAAA,WACA,GAAA+L,EAAAhB,QAAA,CACA,IAAAlF,EAAA7F,EAAAG,WACA0F,OAAAkF,EAAA5K,YACA0F,EAAA4G,aAAA1B,EAAAlF,EAAA6G,YAIA3B,EAAAU,YAKA,SAAAkB,EAAA3M,GACA,IAAA+L,EAAA/L,EAAA4I,IAAA,GACAmC,EAAAgB,EAAAhB,eAEAgB,EAAAhB,QACAuB,EAAAtM,GAEA+K,KAAA5K,YACA4K,EAAA5K,WAAAyM,YAAA7B,GAIA,SAAA8B,EAAAhoB,EAAAioB,GAEA,IAAAp5B,EAAAmR,EAAAkoB,QAAAprB,SAAAqpB,cAAA,SACAnmB,EAAAkoB,SACAloB,EAAAkoB,OAAAr5B,EACAo5B,EAAA,mBAAAA,EACAp5B,EAAAs5B,aAAA,mBACArrB,SAAAsrB,qBAAA,WAAAC,YAAAx5B,IAGAA,EAAAw5B,YAAAvrB,SAAAwrB,eAAAL,IAGAryC,EAAAC,QAAA,CAMAwgC,SAAA,qBAAA1xB,QAAA,qBAAAmY,SAEA/tB,WAAA,WACA,IAAAw5C,EAAA,kCAEAP,EAAA17C,KAGA,sBAAA43C,EAAA,IAAoDqE,EAAA,eACpDrE,EAAA,IAA4CqE,EAAA,KAC5CtE,EAAA,sBACAC,EAAA,qBACAA,EAAA,cAKAvlC,eAAA,SAAAzN,EAAAlC,GACA,kBAAAkC,EACAA,EAAA4rB,SAAAC,eAAA7rB,GACGA,EAAAvC,SAEHuC,IAAA,IAGAA,KAAAiD,SAEAjD,IAAAiD,QAMA,IAAA6C,EAAA9F,KAAA0N,YAAA1N,EAAA0N,WAAA,MASA,OAAA5H,KAAA7C,SAAAjD,GACA6zC,EAAA7zC,EAAAlC,GACAgI,GAGA,MAGAs/B,eAAA,SAAAt/B,GACA,IAAA7C,EAAA6C,EAAA7C,OACA,GAAAA,EAAA4vC,GAAA,CAIA,IAAAoB,EAAAhxC,EAAA4vC,GAAAoB,QACA,mBAAA9lC,QAAA,SAAAszB,GACA,IAAAv8B,EAAA+uC,EAAAxS,GACA5nC,EAAAkd,cAAA7R,GACAjC,EAAAq0C,gBAAA7V,GAEAx+B,EAAAg0C,aAAAxV,EAAAv8B,KAIArL,EAAAsH,KAAA8yC,EAAAt2B,OAAA,GAAkC,SAAAzY,EAAAkJ,GAClCnL,EAAA0a,MAAAvP,GAAAlJ,IAOAjC,EAAA/D,MAAA+D,EAAA/D,aAEA+D,EAAA4vC,KAGAxN,iBAAA,SAAAhqC,EAAA2I,EAAA8J,GACA,IAAA7K,EAAA5H,EAAA4H,OACA,cAAAe,EAAA,CAMA,IAAAgyC,EAAAloC,EAAA+kC,KAAA/kC,EAAA+kC,GAAA,IACA0E,EAAAvB,EAAAuB,UAAAvB,EAAAuB,QAAA,IACAtB,EAAAsB,EAAAl8C,EAAAmC,GAAA,IAAAwG,GAAA,SAAA4wC,GACA9mC,EAAA6mC,EAAAC,EAAAv5C,KAGAgqC,EAAApiC,EAAAe,EAAAiyC,QAVAQ,EAAAxzC,EAAA6K,EAAAzS,IAaAiqC,oBAAA,SAAAjqC,EAAA2I,EAAA8J,GACA,IAAA7K,EAAA5H,EAAA4H,OACA,cAAAe,EAAA,CAMA,IAAAgyC,EAAAloC,EAAA+kC,IAAA,GACA0E,EAAAvB,EAAAuB,SAAA,GACAtB,EAAAsB,EAAAl8C,EAAAmC,GAAA,IAAAwG,GACAiyC,GAIA3Q,EAAAriC,EAAAe,EAAAiyC,QAXAW,EAAA3zC,EAAA6K,KA0BAjU,EAAA29C,SAAAnS,EAWAxrC,EAAA49C,YAAAnS,qCCtcA,IAAA5rC,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtB+K,EAAAC,QAAA,CAGA+yC,aAAA,GAKAh+C,SAAA,GACAyjB,kBAAA,SAAAnZ,EAAA2zC,EAAAC,GACAx8C,KAAAs8C,aAAA1zC,GAAA2zC,EACAv8C,KAAA1B,SAAAsK,GAAAnK,EAAAqY,MAAA0lC,IAEAC,oBAAA,SAAA7zC,GACA,OAAA5I,KAAAs8C,aAAA/lC,eAAA3N,GAAA5I,KAAAs8C,aAAA1zC,QAAAgC,GAEAolC,iBAAA,SAAApnC,GAEA,OAAA5I,KAAA1B,SAAAiY,eAAA3N,GAAAnK,EAAAiN,MAAA,GAA8D,CAAApN,EAAA0O,MAAAhN,KAAA1B,SAAAsK,KAAA,IAE9D8zC,oBAAA,SAAA9zC,EAAA+zC,GACA,IAAA15C,EAAAjD,KACAiD,EAAA3E,SAAAiY,eAAA3N,KACA3F,EAAA3E,SAAAsK,GAAAnK,EAAA+D,OAAAS,EAAA3E,SAAAsK,GAAA+zC,KAGAC,kBAAA,SAAA38C,GAEAxB,EAAAsH,KAAA9F,EAAA8L,OAAA,SAAAiB,GAEAA,EAAAzN,UAAAyN,EAAAxI,QAAAjF,UACAyN,EAAA1N,SAAA0N,EAAAxI,QAAAlF,SACA0N,EAAAvN,OAAAuN,EAAAxI,QAAA/E,OACAf,EAAA2K,OAAApJ,EAAA+M,2BCmBA,SAAA6vC,EAAAhS,GACA,IAMAO,EAAAC,EAAA/gC,EANAF,EAAAygC,EAAA,OACAsB,EAAAtB,EAAA,OACAxgC,EAAAwgC,EAAA,OACAn6B,EAAA1R,KAAA0R,IAAAtG,EAAA+hC,EAAA9hC,GACA7D,EAAAxH,KAAAwH,IAAA4D,EAAA+hC,EAAA9hC,GACA8+B,EAAA3iC,EAAAkK,EA0BA,OAvBAlK,GAAAkK,EACA06B,EAAA,EACAhhC,GAAA5D,EACA4kC,GAAAe,EAAA9hC,GAAA8+B,EACAgD,GAAA3lC,EACA4kC,EAAA,GAAA/gC,EAAAD,GAAA++B,EACA9+B,GAAA7D,IACA4kC,EAAA,GAAAhhC,EAAA+hC,GAAAhD,GAEAiC,EAAApsC,KAAA0R,IAAA,GAAA06B,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEA9gC,GAAAoG,EAAAlK,GAAA,EAGA6kC,EADA7kC,GAAAkK,EACA,EACApG,GAAA,GACA6+B,GAAA3iC,EAAAkK,GAEAy4B,GAAA,EAAA3iC,EAAAkK,GAEA,CAAA06B,EAAA,IAAAC,EAAA,IAAA/gC,GAGA,SAAAwyC,EAAAjS,GACA,IAMAO,EAAAC,EAAArF,EANA57B,EAAAygC,EAAA,GACAsB,EAAAtB,EAAA,GACAxgC,EAAAwgC,EAAA,GACAn6B,EAAA1R,KAAA0R,IAAAtG,EAAA+hC,EAAA9hC,GACA7D,EAAAxH,KAAAwH,IAAA4D,EAAA+hC,EAAA9hC,GACA8+B,EAAA3iC,EAAAkK,EAwBA,OApBA26B,EADA,GAAA7kC,EACA,EAEA2iC,EAAA3iC,EAAA,OAEAA,GAAAkK,EACA06B,EAAA,EACAhhC,GAAA5D,EACA4kC,GAAAe,EAAA9hC,GAAA8+B,EACAgD,GAAA3lC,EACA4kC,EAAA,GAAA/gC,EAAAD,GAAA++B,EACA9+B,GAAA7D,IACA4kC,EAAA,GAAAhhC,EAAA+hC,GAAAhD,GAEAiC,EAAApsC,KAAA0R,IAAA,GAAA06B,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEApF,EAAAx/B,EAAA,WAEA,CAAA4kC,EAAAC,EAAArF,GAGA,SAAA+W,EAAAlS,GACA,IAAAzgC,EAAAygC,EAAA,GACAsB,EAAAtB,EAAA,GACAxgC,EAAAwgC,EAAA,GACAO,EAAAyR,EAAAhS,GAAA,GACAW,EAAA,MAAAxsC,KAAA0R,IAAAtG,EAAApL,KAAA0R,IAAAy7B,EAAA9hC,IACAA,EAAA,QAAArL,KAAAwH,IAAA4D,EAAApL,KAAAwH,IAAA2lC,EAAA9hC,IAEA,OAAA+gC,EAAA,IAAAI,EAAA,IAAAnhC,GAGA,SAAA2yC,EAAAnS,GACA,IAGAoS,EAAAC,EAAA/1C,EAAAsd,EAHAra,EAAAygC,EAAA,OACAsB,EAAAtB,EAAA,OACAxgC,EAAAwgC,EAAA,OAOA,OAJApmB,EAAAzlB,KAAA0R,IAAA,EAAAtG,EAAA,EAAA+hC,EAAA,EAAA9hC,GACA4yC,GAAA,EAAA7yC,EAAAqa,IAAA,EAAAA,IAAA,EACAy4B,GAAA,EAAA/Q,EAAA1nB,IAAA,EAAAA,IAAA,EACAtd,GAAA,EAAAkD,EAAAoa,IAAA,EAAAA,IAAA,EACA,KAAAw4B,EAAA,IAAAC,EAAA,IAAA/1C,EAAA,IAAAsd,GAGA,SAAA04B,EAAAtS,GACA,OAAAuS,EAAAC,KAAAC,UAAAzS,IAGA,SAAA0S,EAAA1S,GACA,IAAAzgC,EAAAygC,EAAA,OACAsB,EAAAtB,EAAA,OACAxgC,EAAAwgC,EAAA,OAGAzgC,IAAA,OAAApL,KAAA2Y,KAAAvN,EAAA,iBAAAA,EAAA,MACA+hC,IAAA,OAAAntC,KAAA2Y,KAAAw0B,EAAA,iBAAAA,EAAA,MACA9hC,IAAA,OAAArL,KAAA2Y,KAAAtN,EAAA,iBAAAA,EAAA,MAEA,IAAAnD,EAAA,MAAAkD,EAAA,MAAA+hC,EAAA,MAAA9hC,EACAlD,EAAA,MAAAiD,EAAA,MAAA+hC,EAAA,MAAA9hC,EACAmzC,EAAA,MAAApzC,EAAA,MAAA+hC,EAAA,MAAA9hC,EAEA,WAAAnD,EAAA,IAAAC,EAAA,IAAAq2C,GAGA,SAAAC,EAAA5S,GACA,IAIAvgC,EAAAoP,EAAArP,EAJAqzC,EAAAH,EAAA1S,GACA3jC,EAAAw2C,EAAA,GACAv2C,EAAAu2C,EAAA,GACAF,EAAAE,EAAA,GAeA,OAZAx2C,GAAA,OACAC,GAAA,IACAq2C,GAAA,QAEAt2C,IAAA,QAAAlI,KAAA2Y,IAAAzQ,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAnI,KAAA2Y,IAAAxQ,EAAA,WAAAA,EAAA,OACAq2C,IAAA,QAAAx+C,KAAA2Y,IAAA6lC,EAAA,WAAAA,EAAA,OAEAlzC,EAAA,IAAAnD,EAAA,GACAuS,EAAA,KAAAxS,EAAAC,GACAkD,EAAA,KAAAlD,EAAAq2C,GAEA,CAAAlzC,EAAAoP,EAAArP,GAGA,SAAAszC,EAAArqC,GACA,OAAAsqC,EAAAH,EAAAnqC,IAGA,SAAAuqC,EAAA3S,GACA,IAGA4S,EAAAC,EAAAC,EAAAnT,EAAAoT,EAHA7S,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACA5gC,EAAA4gC,EAAA,OAGA,MAAAG,EAEA,OADA4S,EAAA,IAAA3zC,EACA,CAAA2zC,OAIAF,EADAzzC,EAAA,GACAA,GAAA,EAAA+gC,GAEA/gC,EAAA+gC,EAAA/gC,EAAA+gC,EACAyS,EAAA,EAAAxzC,EAAAyzC,EAEAlT,EAAA,QACA,QAAA9pC,EAAA,EAAiBA,EAAA,EAAOA,IACxBi9C,EAAA5S,EAAA,MAAArqC,EAAA,GACAi9C,EAAA,GAAAA,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEAjT,EAAA9pC,GAAA,IAAAk9C,EAGA,OAAApT,EAGA,SAAAqT,EAAAhT,GACA,IAGAiT,EAAAnY,EAHAoF,EAAAF,EAAA,GACAG,EAAAH,EAAA,OACA5gC,EAAA4gC,EAAA,OAGA,WAAA5gC,EAGA,SAGAA,GAAA,EACA+gC,GAAA/gC,GAAA,EAAAA,EAAA,EAAAA,EACA07B,GAAA17B,EAAA+gC,GAAA,EACA8S,EAAA,EAAA9S,GAAA/gC,EAAA+gC,GACA,CAAAD,EAAA,IAAA+S,EAAA,IAAAnY,IAGA,SAAAoY,EAAA9qC,GACA,OAAAypC,EAAAc,EAAAvqC,IAGA,SAAA+qC,EAAA/qC,GACA,OAAA0pC,EAAAa,EAAAvqC,IAGA,SAAAgrC,EAAAhrC,GACA,OAAA6pC,EAAAU,EAAAvqC,IAIA,SAAAirC,EAAAC,GACA,IAAApT,EAAAoT,EAAA,MACAnT,EAAAmT,EAAA,OACAxY,EAAAwY,EAAA,OACA3jC,EAAA7b,KAAA8iB,MAAAspB,GAAA,EAEAqT,EAAArT,EAAApsC,KAAA8iB,MAAAspB,GACA1Y,EAAA,IAAAsT,GAAA,EAAAqF,GACAqT,EAAA,IAAA1Y,GAAA,EAAAqF,EAAAoT,GACAt0C,EAAA,IAAA67B,GAAA,EAAAqF,GAAA,EAAAoT,IACAzY,GAAA,IAEA,OAAAnrB,GACA,OACA,OAAAmrB,EAAA77B,EAAAuoB,GACA,OACA,OAAAgsB,EAAA1Y,EAAAtT,GACA,OACA,OAAAA,EAAAsT,EAAA77B,GACA,OACA,OAAAuoB,EAAAgsB,EAAA1Y,GACA,OACA,OAAA77B,EAAAuoB,EAAAsT,GACA,OACA,OAAAA,EAAAtT,EAAAgsB,IAIA,SAAAC,EAAAH,GACA,IAGAI,EAAAt0C,EAHA8gC,EAAAoT,EAAA,GACAnT,EAAAmT,EAAA,OACAxY,EAAAwY,EAAA,OAQA,OALAl0C,GAAA,EAAA+gC,GAAArF,EACA4Y,EAAAvT,EAAArF,EACA4Y,GAAAt0C,GAAA,EAAAA,EAAA,EAAAA,EACAs0C,KAAA,EACAt0C,GAAA,EACA,CAAA8gC,EAAA,IAAAwT,EAAA,IAAAt0C,GAGA,SAAAu0C,EAAAvrC,GACA,OAAAypC,EAAAwB,EAAAjrC,IAGA,SAAAwrC,EAAAxrC,GACA,OAAA0pC,EAAAuB,EAAAjrC,IAGA,SAAAyrC,EAAAzrC,GACA,OAAA6pC,EAAAoB,EAAAjrC,IAIA,SAAA0rC,EAAAzT,GACA,IAIAxqC,EAAAilC,EAAAyY,EAAA/6B,EAJA0nB,EAAAG,EAAA,OACA0T,EAAA1T,EAAA,OACA2T,EAAA3T,EAAA,OACApwB,EAAA8jC,EAAAC,EAiBA,OAbA/jC,EAAA,IACA8jC,GAAA9jC,EACA+jC,GAAA/jC,GAGApa,EAAA/B,KAAA8iB,MAAA,EAAAspB,GACApF,EAAA,EAAAkZ,EACAT,EAAA,EAAArT,EAAArqC,EACA,MAAAA,KACA09C,EAAA,EAAAA,GAEA/6B,EAAAu7B,EAAAR,GAAAzY,EAAAiZ,GAEAl+C,GACA,QACA,OACA,OAAAqJ,EAAA47B,EAAkBmG,EAAAzoB,EAAOrZ,EAAA40C,EAAQ,MACjC,OAAA70C,EAAAsZ,EAAkByoB,EAAAnG,EAAO37B,EAAA40C,EAAQ,MACjC,OAAA70C,EAAA60C,EAAmB9S,EAAAnG,EAAO37B,EAAAqZ,EAAO,MACjC,OAAAtZ,EAAA60C,EAAmB9S,EAAAzoB,EAAOrZ,EAAA27B,EAAO,MACjC,OAAA57B,EAAAsZ,EAAkByoB,EAAA8S,EAAQ50C,EAAA27B,EAAO,MACjC,OAAA57B,EAAA47B,EAAkBmG,EAAA8S,EAAQ50C,EAAAqZ,EAAO,MAGjC,WAAAtZ,EAAA,IAAA+hC,EAAA,IAAA9hC,GAGA,SAAA80C,EAAA7rC,GACA,OAAAupC,EAAAmC,EAAA1rC,IAGA,SAAA8rC,EAAA9rC,GACA,OAAAwpC,EAAAkC,EAAA1rC,IAGA,SAAA+rC,EAAA/rC,GACA,OAAA0pC,EAAAgC,EAAA1rC,IAGA,SAAAgsC,EAAAhsC,GACA,OAAA6pC,EAAA6B,EAAA1rC,IAGA,SAAAisC,EAAAC,GACA,IAIAp1C,EAAA+hC,EAAA9hC,EAJA4yC,EAAAuC,EAAA,OACAtC,EAAAsC,EAAA,OACAr4C,EAAAq4C,EAAA,OACA/6B,EAAA+6B,EAAA,OAMA,OAHAp1C,EAAA,EAAApL,KAAA0R,IAAA,EAAAusC,GAAA,EAAAx4B,MACA0nB,EAAA,EAAAntC,KAAA0R,IAAA,EAAAwsC,GAAA,EAAAz4B,MACApa,EAAA,EAAArL,KAAA0R,IAAA,EAAAvJ,GAAA,EAAAsd,MACA,KAAAra,EAAA,IAAA+hC,EAAA,IAAA9hC,GAGA,SAAAo1C,EAAAnsC,GACA,OAAAupC,EAAA0C,EAAAjsC,IAGA,SAAAosC,EAAApsC,GACA,OAAAwpC,EAAAyC,EAAAjsC,IAGA,SAAAqsC,EAAArsC,GACA,OAAAypC,EAAAwC,EAAAjsC,IAGA,SAAAssC,EAAAtsC,GACA,OAAA6pC,EAAAoC,EAAAjsC,IAIA,SAAAusC,EAAAnC,GACA,IAGAtzC,EAAA+hC,EAAA9hC,EAHAnD,EAAAw2C,EAAA,OACAv2C,EAAAu2C,EAAA,OACAF,EAAAE,EAAA,OAqBA,OAlBAtzC,EAAA,OAAAlD,GAAA,OAAAC,GAAA,MAAAq2C,EACArR,GAAA,MAAAjlC,EAAA,OAAAC,EAAA,MAAAq2C,EACAnzC,EAAA,MAAAnD,GAAA,KAAAC,EAAA,MAAAq2C,EAGApzC,IAAA,eAAApL,KAAA2Y,IAAAvN,EAAA,YACAA,GAAA,MAEA+hC,IAAA,eAAAntC,KAAA2Y,IAAAw0B,EAAA,YACAA,GAAA,MAEA9hC,IAAA,eAAArL,KAAA2Y,IAAAtN,EAAA,YACAA,GAAA,MAEAD,EAAApL,KAAA0R,IAAA1R,KAAAwH,IAAA,EAAA4D,GAAA,GACA+hC,EAAAntC,KAAA0R,IAAA1R,KAAAwH,IAAA,EAAA2lC,GAAA,GACA9hC,EAAArL,KAAA0R,IAAA1R,KAAAwH,IAAA,EAAA6D,GAAA,GAEA,KAAAD,EAAA,IAAA+hC,EAAA,IAAA9hC,GAGA,SAAAy1C,EAAApC,GACA,IAGApzC,EAAAoP,EAAArP,EAHAnD,EAAAw2C,EAAA,GACAv2C,EAAAu2C,EAAA,GACAF,EAAAE,EAAA,GAeA,OAZAx2C,GAAA,OACAC,GAAA,IACAq2C,GAAA,QAEAt2C,IAAA,QAAAlI,KAAA2Y,IAAAzQ,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAnI,KAAA2Y,IAAAxQ,EAAA,WAAAA,EAAA,OACAq2C,IAAA,QAAAx+C,KAAA2Y,IAAA6lC,EAAA,WAAAA,EAAA,OAEAlzC,EAAA,IAAAnD,EAAA,GACAuS,EAAA,KAAAxS,EAAAC,GACAkD,EAAA,KAAAlD,EAAAq2C,GAEA,CAAAlzC,EAAAoP,EAAArP,GAGA,SAAA01C,EAAAzsC,GACA,OAAAsqC,EAAAkC,EAAAxsC,IAGA,SAAA0sC,EAAAC,GACA,IAGA/4C,EAAAC,EAAAq2C,EAAAja,EAHAj5B,EAAA21C,EAAA,GACAvmC,EAAAumC,EAAA,GACA51C,EAAA41C,EAAA,GAeA,OAZA31C,GAAA,GACAnD,EAAA,IAAAmD,EAAA,MACAi5B,EAAAp8B,EAAA,mBAEAA,EAAA,IAAAnI,KAAA2Y,KAAArN,EAAA,WACAi5B,EAAAvkC,KAAA2Y,IAAAxQ,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAAwS,EAAA,IAAA6pB,EAAA,qBAAAvkC,KAAA2Y,IAAA+B,EAAA,IAAA6pB,EAAA,GAEAia,IAAA,iBAAAA,EAAA,SAAAja,EAAAl5B,EAAA,0BAAArL,KAAA2Y,IAAA4rB,EAAAl5B,EAAA,OAEA,CAAAnD,EAAAC,EAAAq2C,GAGA,SAAAI,EAAAqC,GACA,IAGAC,EAAA9U,EAAA6R,EAHA3yC,EAAA21C,EAAA,GACAvmC,EAAAumC,EAAA,GACA51C,EAAA41C,EAAA,GASA,OANAC,EAAAlhD,KAAA2yC,MAAAtnC,EAAAqP,GACA0xB,EAAA,IAAA8U,EAAA,EAAAlhD,KAAAiZ,GACAmzB,EAAA,IACAA,GAAA,KAEA6R,EAAAj+C,KAAAgkB,KAAAtJ,IAAArP,KACA,CAAAC,EAAA2yC,EAAA7R,GAGA,SAAA+U,EAAA7sC,GACA,OAAAusC,EAAAG,EAAA1sC,IAGA,SAAA8sC,EAAAC,GACA,IAGA3mC,EAAArP,EAAA61C,EAHA51C,EAAA+1C,EAAA,GACApD,EAAAoD,EAAA,GACAjV,EAAAiV,EAAA,GAMA,OAHAH,EAAA9U,EAAA,MAAApsC,KAAAiZ,GACAyB,EAAAujC,EAAAj+C,KAAAuiB,IAAA2+B,GACA71C,EAAA4yC,EAAAj+C,KAAAyiB,IAAAy+B,GACA,CAAA51C,EAAAoP,EAAArP,GAGA,SAAAi2C,EAAAhtC,GACA,OAAA0sC,EAAAI,EAAA9sC,IAGA,SAAAitC,EAAAjtC,GACA,OAAA6sC,EAAAC,EAAA9sC,IAGA,SAAAktC,EAAA5V,GACA,OAAA6V,EAAA7V,GAGA,SAAA8V,EAAAptC,GACA,OAAAupC,EAAA2D,EAAAltC,IAGA,SAAAqtC,EAAArtC,GACA,OAAAwpC,EAAA0D,EAAAltC,IAGA,SAAAstC,EAAAttC,GACA,OAAAypC,EAAAyD,EAAAltC,IAGA,SAAAutC,EAAAvtC,GACA,OAAA0pC,EAAAwD,EAAAltC,IAGA,SAAAwtC,EAAAxtC,GACA,OAAAmqC,EAAA+C,EAAAltC,IAGA,SAAAytC,EAAAztC,GACA,OAAAiqC,EAAAiD,EAAAltC,IA1hBAhK,EAAAC,QAAA,CACAszC,UACAC,UACAC,UACAC,WACAG,cACAI,UACAE,UACAE,UAEAE,UACAK,UACAE,UACAC,WACAC,cAEAC,UACAI,UACAE,UACAC,WACAC,cAEAC,UACAG,UACAC,UACAC,WACAC,cAEAC,WACAE,WACAC,WACAC,WACAC,eAEAY,cACAE,cACAC,cACAC,cACAC,eACAC,cACAC,cAEAlB,UACAC,UACAC,UAEAC,UACAG,UACAvC,UAEAwC,UACAE,UACAC,WAyeA,IAAAE,EAAA,CACAh7B,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,U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","file":"js/chunk-c7e028bc.9d2cc84d.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-chart.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-chart.vue?vue&type=style&index=0&lang=css&\"","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":16}},[_c('el-col',{attrs:{\"lg\":8,\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.bar}})],1),_c('el-col',{attrs:{\"lg\":8,\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.mix2}})],1),_c('el-col',{attrs:{\"lg\":8,\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.doughnut}})],1),_c('el-col',{attrs:{\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.mix1}})],1),_c('el-col',{attrs:{\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.radar}})],1),_c('el-col',{attrs:{\"lg\":8,\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.horizontalBar}})],1),_c('el-col',{attrs:{\"lg\":8,\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.polar}})],1),_c('el-col',{attrs:{\"lg\":8,\"md\":12,\"sm\":24}},[_c('app-home-chart',{attrs:{\"config\":_vm.line}})],1)],1),_c('p',{staticClass:\"home-bottom-message\"},[_c('app-i18n',{attrs:{\"code\":\"home.message\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart\"},[_c('canvas',{attrs:{\"id\":_vm.id}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"chart\">\n    <canvas :id=\"id\"></canvas>\n  </div>\n</template>\n\n<script>\nimport uuid from 'uuid/v4';\nimport Chart from 'chart.js';\n\nexport default {\n  name: 'app-home-chart',\n\n  props: ['config'],\n\n  data() {\n    return {\n      id: uuid(),\n    };\n  },\n\n  mounted() {\n    const ctx = document.getElementById(this.id);\n    new Chart(ctx, this.config);\n  },\n};\n</script>\n\n<style>\n.chart {\n  background-color: white;\n  padding: 24px;\n  border: 1px solid #e8e8e8;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./home-chart.vue?vue&type=template&id=21077151&\"\nimport script from \"./home-chart.vue?vue&type=script&lang=js&\"\nexport * from \"./home-chart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./home-chart.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <el-row :gutter=\"16\">\n      <el-col :lg=\"8\" :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"bar\"/>\n      </el-col>\n      <el-col :lg=\"8\" :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"mix2\"/>\n      </el-col>\n      <el-col :lg=\"8\" :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"doughnut\"/>\n      </el-col>\n      <el-col :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"mix1\"/>\n      </el-col>\n      <el-col :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"radar\"/>\n      </el-col>\n      <el-col :lg=\"8\" :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"horizontalBar\"/>\n      </el-col>\n      <el-col :lg=\"8\" :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"polar\"/>\n      </el-col>\n      <el-col :lg=\"8\" :md=\"12\" :sm=\"24\">\n        <app-home-chart :config=\"line\"/>\n      </el-col>\n    </el-row>\n\n    <p class=\"home-bottom-message\">\n      <app-i18n code=\"home.message\"></app-i18n>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { i18n } from '@/i18n';\nimport HomeChart from '@/modules/home/components/home-chart.vue';\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'app-home-page',\n\n  components: {\n    [HomeChart.name]: HomeChart,\n  },\n\n  created() {\n    if (this.isMobile) {\n      this.collapseMenu();\n    }\n  },\n\n  data() {\n    return {\n      bar: {\n        type: \"bar\",\n        data: {\n          labels: [\n            `${i18n(\"home.charts.day\")} 1`,\n            `${i18n(\"home.charts.day\")} 2`,\n            `${i18n(\"home.charts.day\")} 3`,\n            `${i18n(\"home.charts.day\")} 4`,\n            `${i18n(\"home.charts.day\")} 5`\n          ],\n          datasets: [\n            {\n              label: i18n(\"home.charts.red\"),\n              backgroundColor: \"rgba(255,99,132,0.2)\",\n              borderColor: \"rgba(255,99,132,1)\",\n              borderWidth: 1,\n              hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n              hoverBorderColor: \"rgba(255,99,132,1)\",\n              data: [65, 59, 80, 81, 82]\n            }\n          ]\n        },\n        options: {\n          legend: {\n            display: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: false\n              }\n            ],\n            yAxes: [\n              {\n                display: true\n              }\n            ]\n          }\n        }\n      },\n\n      mix2: {\n        type: \"bar\",\n        options: {\n          responsive: true,\n          tooltips: {\n            mode: \"label\"\n          },\n          elements: {\n            line: {\n              fill: false\n            }\n          },\n          scales: {\n            xAxes: [\n              {\n                display: false,\n                gridLines: {\n                  display: false\n                }\n              }\n            ],\n            yAxes: [\n              {\n                type: \"linear\",\n                display: false,\n                position: \"left\",\n                id: \"y-axis-1\",\n                gridLines: {\n                  display: false\n                }\n              },\n              {\n                type: \"linear\",\n                display: true,\n                position: \"right\",\n                id: \"y-axis-2\",\n                gridLines: {\n                  display: false\n                }\n              }\n            ]\n          }\n        },\n        data: {\n          labels: [\n            i18n(\"home.charts.months.1\"),\n            i18n(\"home.charts.months.2\"),\n            i18n(\"home.charts.months.3\"),\n            i18n(\"home.charts.months.4\"),\n            i18n(\"home.charts.months.5\"),\n            i18n(\"home.charts.months.6\"),\n            i18n(\"home.charts.months.7\")\n          ],\n          datasets: [\n            {\n              label: i18n(\"home.charts.orange\"),\n              type: \"line\",\n              data: [51, 65, 40, 49, 60, 37, 40],\n              fill: false,\n              borderColor: \"#EC932F\",\n              backgroundColor: \"#EC932F\",\n              pointBorderColor: \"#EC932F\",\n              pointBackgroundColor: \"#EC932F\",\n              pointHoverBackgroundColor: \"#EC932F\",\n              pointHoverBorderColor: \"#EC932F\",\n              yAxisID: \"y-axis-2\"\n            },\n            {\n              type: \"line\",\n              label: i18n(\"home.charts.blue\"),\n              data: [200, 185, 590, 621, 250, 400, 95],\n              fill: false,\n              backgroundColor: \"#36A2EB\",\n              borderColor: \"#36A2EB\",\n              hoverBackgroundColor: \"#36A2EB\",\n              hoverBorderColor: \"#36A2EB\",\n              yAxisID: \"y-axis-1\"\n            }\n          ]\n        }\n      },\n\n      doughnut: {\n        type: \"doughnut\",\n        data: {\n          labels: [\n            i18n(\"home.charts.red\"),\n            i18n(\"home.charts.blue\"),\n            i18n(\"home.charts.yellow\")\n          ],\n          datasets: [\n            {\n              data: [300, 50, 100],\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n              hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n            }\n          ]\n        }\n      },\n\n      mix1: {\n        type: \"bar\",\n        options: {\n          responsive: true,\n          tooltips: {\n            mode: \"label\"\n          },\n          elements: {\n            line: {\n              fill: false\n            }\n          },\n          scales: {\n            xAxes: [\n              {\n                display: false,\n                gridLines: {\n                  display: false\n                }\n              }\n            ],\n            yAxes: [\n              {\n                type: \"linear\",\n                display: false,\n                position: \"left\",\n                id: \"y-axis-1\",\n                gridLines: {\n                  display: false\n                }\n              },\n              {\n                type: \"linear\",\n                display: false,\n                position: \"right\",\n                id: \"y-axis-2\",\n                gridLines: {\n                  display: false\n                }\n              }\n            ]\n          }\n        },\n\n        data: {\n          labels: [\n            i18n(\"home.charts.months.1\"),\n            i18n(\"home.charts.months.2\"),\n            i18n(\"home.charts.months.3\"),\n            i18n(\"home.charts.months.4\"),\n            i18n(\"home.charts.months.5\"),\n            i18n(\"home.charts.months.6\"),\n            i18n(\"home.charts.months.7\")\n          ],\n          datasets: [\n            {\n              label: i18n(\"home.charts.orange\"),\n              type: \"line\",\n              data: [51, 65, 40, 49, 60, 37, 40],\n              fill: false,\n              borderColor: \"#EC932F\",\n              backgroundColor: \"#EC932F\",\n              pointBorderColor: \"#EC932F\",\n              pointBackgroundColor: \"#EC932F\",\n              pointHoverBackgroundColor: \"#EC932F\",\n              pointHoverBorderColor: \"#EC932F\",\n              yAxisID: \"y-axis-2\"\n            },\n            {\n              type: \"bar\",\n              label: i18n(\"home.charts.blue\"),\n              data: [200, 185, 590, 621, 250, 400, 95],\n              fill: false,\n              backgroundColor: \"#36A2EB\",\n              borderColor: \"#36A2EB\",\n              hoverBackgroundColor: \"#36A2EB\",\n              hoverBorderColor: \"#36A2EB\",\n              yAxisID: \"y-axis-1\"\n            }\n          ]\n        }\n      },\n\n      radar: {\n        type: \"radar\",\n        options: {\n          scale: {\n            display: false\n          }\n        },\n        data: {\n          labels: [\n            i18n(\"home.charts.eating\"),\n            i18n(\"home.charts.drinking\"),\n            i18n(\"home.charts.sleeping\"),\n            i18n(\"home.charts.designing\"),\n            i18n(\"home.charts.coding\"),\n            i18n(\"home.charts.cycling\"),\n            i18n(\"home.charts.running\")\n          ],\n          datasets: [\n            {\n              label: `${i18n(\"home.charts.grey\")}`,\n              backgroundColor: \"rgba(179,181,198,0.2)\",\n              borderColor: \"rgba(179,181,198,1)\",\n              pointBackgroundColor: \"rgba(179,181,198,1)\",\n              pointBorderColor: \"#fff\",\n              pointHoverBackgroundColor: \"#fff\",\n              pointHoverBorderColor: \"rgba(179,181,198,1)\",\n              data: [65, 59, 90, 81, 56, 55, 40]\n            },\n            {\n              label: `${i18n(\"home.charts.red\")}`,\n              backgroundColor: \"rgba(255,99,132,0.2)\",\n              borderColor: \"rgba(255,99,132,1)\",\n              pointBackgroundColor: \"rgba(255,99,132,1)\",\n              pointBorderColor: \"#fff\",\n              pointHoverBackgroundColor: \"#fff\",\n              pointHoverBorderColor: \"rgba(255,99,132,1)\",\n              data: [28, 48, 40, 19, 96, 27, 100]\n            }\n          ]\n        }\n      },\n\n      horizontalBar: {\n        type: \"bar\",\n        options: {\n          scales: {\n            xAxes: [\n              {\n                display: false\n              }\n            ],\n            yAxes: [\n              {\n                display: true\n              }\n            ]\n          }\n        },\n        data: {\n          labels: [\n            i18n(\"home.charts.months.1\"),\n            i18n(\"home.charts.months.2\"),\n            i18n(\"home.charts.months.3\"),\n            i18n(\"home.charts.months.4\"),\n            i18n(\"home.charts.months.5\"),\n            i18n(\"home.charts.months.6\")\n          ],\n          datasets: [\n            {\n              label: i18n(\"home.charts.red\"),\n              backgroundColor: \"rgba(255,99,132,0.2)\",\n              borderColor: \"rgba(255,99,132,1)\",\n              borderWidth: 1,\n              hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n              hoverBorderColor: \"rgba(255,99,132,1)\",\n              data: [65, 59, 80, 81, 56, 55, 40]\n            }\n          ]\n        }\n      },\n\n      polar: {\n        type: \"polarArea\",\n        data: {\n          datasets: [\n            {\n              data: [11, 16, 7, 3, 14],\n              backgroundColor: [\n                \"#FF6384\",\n                \"#4BC0C0\",\n                \"#FFCE56\",\n                \"#E7E9ED\",\n                \"#36A2EB\"\n              ]\n            }\n          ],\n          labels: [\n            i18n(\"home.charts.red\"),\n            i18n(\"home.charts.green\"),\n            i18n(\"home.charts.yellow\"),\n            i18n(\"home.charts.grey\"),\n            i18n(\"home.charts.blue\")\n          ]\n        }\n      },\n\n      line: {\n        type: \"line\",\n        options: {\n          scales: {\n            xAxes: [\n              {\n                display: false\n              }\n            ],\n            yAxes: [\n              {\n                display: true\n              }\n            ]\n          }\n        },\n        data: {\n          labels: [\n            i18n(\"home.charts.months.1\"),\n            i18n(\"home.charts.months.2\"),\n            i18n(\"home.charts.months.3\"),\n            i18n(\"home.charts.months.4\"),\n            i18n(\"home.charts.months.5\"),\n            i18n(\"home.charts.months.6\"),\n            i18n(\"home.charts.months.7\")\n          ],\n          datasets: [\n            {\n              label: i18n(\"home.charts.green\"),\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: \"rgba(75,192,192,0.4)\",\n              borderColor: \"rgba(75,192,192,1)\",\n              borderCapStyle: \"butt\",\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: \"miter\",\n              pointBorderColor: \"rgba(75,192,192,1)\",\n              pointBackgroundColor: \"#fff\",\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n              pointHoverBorderColor: \"rgba(220,220,220,1)\",\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: [65, 59, 80, 81, 56, 55, 40]\n            }\n          ]\n        }\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({\n      isMobile: 'layout/isMobile',\n    })\n  },\n\n  methods: {\n    ...mapActions({\n      collapseMenu: 'layout/collapseMenu',\n    })\n  }\n};\n</script>\n\n<style scoped>\n.el-col {\n  margin-bottom: 16px;\n}\n\n.home-bottom-message {\n  width: 100%;\n  text-align: center;\n  color: grey;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-page.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-page.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./home-page.vue?vue&type=template&id=293c480e&scoped=true&\"\nimport script from \"./home-page.vue?vue&type=script&lang=js&\"\nexport * from \"./home-page.vue?vue&type=script&lang=js&\"\nimport style0 from \"./home-page.vue?vue&type=style&index=0&id=293c480e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"293c480e\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-page.vue?vue&type=style&index=0&id=293c480e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home-page.vue?vue&type=style&index=0&id=293c480e&scoped=true&lang=css&\"","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n"],"sourceRoot":""}